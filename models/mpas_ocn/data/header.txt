netcdf mpas_init {
dimensions:
	StrLen = 64 ;
	Time = UNLIMITED ; // (1 currently)
	nCells = 10242 ;
	nEdges = 30720 ;
	maxEdges = 10 ;
	maxEdges2 = 20 ;
	nVertices = 20480 ;
	TWO = 2 ;
	THREE = 3 ;
	vertexDegree = 3 ;
	FIFTEEN = 15 ;
	TWENTYONE = 21 ;
	R3 = 3 ;
	nVertLevels = 41 ;
	nVertLevelsP1 = 42 ;
	nMonths = 12 ;
	nVertLevelsP2 = 43 ;
	nSoilLevels = 4 ;
variables:
	char xtime(Time, StrLen) ;
	double latCell(nCells) ;
	double lonCell(nCells) ;
	double xCell(nCells) ;
	double yCell(nCells) ;
	double zCell(nCells) ;
	int indexToCellID(nCells) ;
	double latEdge(nEdges) ;
	double lonEdge(nEdges) ;
	double xEdge(nEdges) ;
	double yEdge(nEdges) ;
	double zEdge(nEdges) ;
	int indexToEdgeID(nEdges) ;
	double latVertex(nVertices) ;
	double lonVertex(nVertices) ;
	double xVertex(nVertices) ;
	double yVertex(nVertices) ;
	double zVertex(nVertices) ;
	int indexToVertexID(nVertices) ;
	int cellsOnEdge(nEdges, TWO) ;
	int nEdgesOnCell(nCells) ;
	int nEdgesOnEdge(nEdges) ;
	int edgesOnCell(nCells, maxEdges) ;
	int edgesOnEdge(nEdges, maxEdges2) ;
	double weightsOnEdge(nEdges, maxEdges2) ;
	double dvEdge(nEdges) ;
	double dcEdge(nEdges) ;
	double angleEdge(nEdges) ;
	double areaCell(nCells) ;
	double areaTriangle(nVertices) ;
	double edgeNormalVectors(nEdges, R3) ;
	double localVerticalUnitVectors(nCells, R3) ;
	double cellTangentPlane(nEdges, TWO, R3) ;
	int cellsOnCell(nCells, maxEdges) ;
	int verticesOnCell(nCells, maxEdges) ;
	int verticesOnEdge(nEdges, TWO) ;
	int edgesOnVertex(nVertices, vertexDegree) ;
	int cellsOnVertex(nVertices, vertexDegree) ;
	double kiteAreasOnVertex(nVertices, vertexDegree) ;
	double fEdge(nEdges) ;
	double fVertex(nVertices) ;
	double densityFunction(nCells) ;
	double meshScalingDel2(nEdges) ;
	double meshScalingDel4(nEdges) ;
	double cf1 ;
	double cf2 ;
	double cf3 ;
	double cpr(nEdges, THREE) ;
	double cpl(nEdges, THREE) ;
	double hx(nCells, nVertLevelsP1) ;
	double zgrid(nCells, nVertLevelsP1) ;
	double rdzw(nVertLevels) ;
	double dzu(nVertLevels) ;
	double rdzu(nVertLevels) ;
	double fzm(nVertLevels) ;
	double fzp(nVertLevels) ;
	double zx(nEdges, nVertLevelsP1) ;
	double zz(nCells, nVertLevelsP1) ;
	double zf(nEdges, TWO, nVertLevelsP1) ;
	double zf3(nEdges, TWO, nVertLevelsP1) ;
	double zb(nEdges, TWO, nVertLevelsP1) ;
	double zb3(nEdges, TWO, nVertLevelsP1) ;
	double dss(nCells, nVertLevels) ;
	double u(Time, nEdges, nVertLevels) ;
	double w(Time, nCells, nVertLevelsP1) ;
	double tslb(Time, nCells, nSoilLevels) ;
	double smois(Time, nCells, nSoilLevels) ;
	double sh2o(Time, nCells, nSoilLevels) ;
	double smcrel(Time, nCells, nSoilLevels) ;
	double dzs(Time, nCells, nSoilLevels) ;
	double xice(Time, nCells) ;
	double vegfra(Time, nCells) ;
	double tmn(Time, nCells) ;
	double sst(Time, nCells) ;
	double snowc(Time, nCells) ;
	double snow(Time, nCells) ;
	double skintemp(Time, nCells) ;
	double greenfrac(nCells, nMonths) ;
	double albedo12m(nCells, nMonths) ;
	double ter(nCells) ;
	double snoalb(nCells) ;
	double shdmax(nCells) ;
	double shdmin(nCells) ;
	int landmask(nCells) ;
	int ivgtyp(nCells) ;
	int isltyp(nCells) ;
	double zs(Time, nCells) ;
	double z0(Time, nCells) ;
	double xland(Time, nCells) ;
	double xicem(Time, nCells) ;
	double udrunoff(Time, nCells) ;
	double thc(Time, nCells) ;
	double snowh(Time, nCells) ;
	double snotime(Time, nCells) ;
	double snopcx(Time, nCells) ;
	double smstot(Time, nCells) ;
	double smstav(Time, nCells) ;
	double sfcrunoff(Time, nCells) ;
	double sfc_emibck(Time, nCells) ;
	double sfc_emiss(Time, nCells) ;
	double sfc_albedo(Time, nCells) ;
	double sfc_albbck(Time, nCells) ;
	double rib(Time, nCells) ;
	double qz0(Time, nCells) ;
	double potevp(Time, nCells) ;
	double noahres(Time, nCells) ;
	double lai(Time, nCells) ;
	double grdflx(Time, nCells) ;
	double chklowq(Time, nCells) ;
	double canwat(Time, nCells) ;
	double acsnow(Time, nCells) ;
	double acsnom(Time, nCells) ;
	double cldfrac(Time, nCells, nVertLevels) ;
	double rthratenlw(Time, nCells, nVertLevels) ;
	double glw(Time, nCells) ;
	double olrtoa(Time, nCells) ;
	double lwuptc(Time, nCells) ;
	double lwupt(Time, nCells) ;
	double lwupbc(Time, nCells) ;
	double lwupb(Time, nCells) ;
	double lwdntc(Time, nCells) ;
	double lwdnt(Time, nCells) ;
	double lwdnbc(Time, nCells) ;
	double lwdnb(Time, nCells) ;
	double lwcf(Time, nCells) ;
	double rthratensw(Time, nCells, nVertLevels) ;
	double swupflxc(Time, nCells, nVertLevelsP2) ;
	double swupflx(Time, nCells, nVertLevelsP2) ;
	double swdnflxc(Time, nCells, nVertLevelsP2) ;
	double swdnflx(Time, nCells, nVertLevelsP2) ;
	double gsw(Time, nCells) ;
	double swuptc(Time, nCells) ;
	double swupt(Time, nCells) ;
	double swupbc(Time, nCells) ;
	double swupb(Time, nCells) ;
	double swdntc(Time, nCells) ;
	double swdnt(Time, nCells) ;
	double swdnbc(Time, nCells) ;
	double swdnb(Time, nCells) ;
	double swcf(Time, nCells) ;
	double coszr(Time, nCells) ;
	double th2m(Time, nCells) ;
	double t2m(Time, nCells) ;
	double q2(Time, nCells) ;
	double v10(Time, nCells) ;
	double u10(Time, nCells) ;
	double wspd(Time, nCells) ;
	double rmol(Time, nCells) ;
	double regime(Time, nCells) ;
	double qgh(Time, nCells) ;
	double psih(Time, nCells) ;
	double psim(Time, nCells) ;
	double lh(Time, nCells) ;
	double gz1oz0(Time, nCells) ;
	double flqc(Time, nCells) ;
	double flhc(Time, nCells) ;
	double cpm(Time, nCells) ;
	double cka(Time, nCells) ;
	double ck(Time, nCells) ;
	double cqs2(Time, nCells) ;
	double chs2(Time, nCells) ;
	double chs(Time, nCells) ;
	double cda(Time, nCells) ;
	double cd(Time, nCells) ;
	double br(Time, nCells) ;
	double znt(Time, nCells) ;
	double zol(Time, nCells) ;
	double ustm(Time, nCells) ;
	double ust(Time, nCells) ;
	double qsfc(Time, nCells) ;
	double qfx(Time, nCells) ;
	double mol(Time, nCells) ;
	double mavail(Time, nCells) ;
	double hfx(Time, nCells) ;
	double rqiblten(Time, nCells, nVertLevels) ;
	double rqcblten(Time, nCells, nVertLevels) ;
	double rqvblten(Time, nCells, nVertLevels) ;
	double rthblten(Time, nCells, nVertLevels) ;
	double rvblten(Time, nCells, nVertLevels) ;
	double rublten(Time, nCells, nVertLevels) ;
	double exch_h(Time, nCells, nVertLevels) ;
	double hpbl(Time, nCells) ;
	int kpbl(Time, nCells) ;
	double w0avg(Time, nCells, nVertLevels) ;
	double nca(Time, nCells) ;
	double rqscuten(Time, nCells, nVertLevels) ;
	double rqicuten(Time, nCells, nVertLevels) ;
	double rqrcuten(Time, nCells, nVertLevels) ;
	double rqccuten(Time, nCells, nVertLevels) ;
	double rqvcuten(Time, nCells, nVertLevels) ;
	double rthcuten(Time, nCells, nVertLevels) ;
	double raincv(Time, nCells) ;
	double rainc(Time, nCells) ;
	double cuprec(Time, nCells) ;
	double cutop(Time, nCells) ;
	double cubot(Time, nCells) ;
	double relhum(Time, nCells, nVertLevels) ;
	double qsat(Time, nCells, nVertLevels) ;
	double graupelnc(Time, nCells) ;
	double snownc(Time, nCells) ;
	double rainnc(Time, nCells) ;
	double graupelncv(Time, nCells) ;
	double snowncv(Time, nCells) ;
	double rainncv(Time, nCells) ;
	double sr(Time, nCells) ;
	double surface_temperature(Time, nCells) ;
	double surface_pressure(Time, nCells) ;
	double coeffs_reconstruct(nCells, maxEdges, R3) ;
	double defc_b(nCells, maxEdges) ;
	double defc_a(nCells, maxEdges) ;
	int advCells(nCells, TWENTYONE) ;
	double deriv_two(nEdges, TWO, FIFTEEN) ;
	double theta_base(Time, nCells, nVertLevels) ;
	double rho_base(Time, nCells, nVertLevels) ;
	double pressure_base(Time, nCells, nVertLevels) ;
	double exner_base(Time, nCells, nVertLevels) ;
	double exner(Time, nCells, nVertLevels) ;
	double h_divergence(Time, nCells, nVertLevels) ;
	double uReconstructMeridional(Time, nCells, nVertLevels) ;
	double uReconstructZonal(Time, nCells, nVertLevels) ;
	double uReconstructZ(Time, nCells, nVertLevels) ;
	double uReconstructY(Time, nCells, nVertLevels) ;
	double uReconstructX(Time, nCells, nVertLevels) ;
	double pv_cell(Time, nCells, nVertLevels) ;
	double pv_vertex(Time, nVertices, nVertLevels) ;
	double ke(Time, nCells, nVertLevels) ;
	double rho_edge(Time, nEdges, nVertLevels) ;
	double pv_edge(Time, nEdges, nVertLevels) ;
	double vorticity(Time, nVertices, nVertLevels) ;
	double divergence(Time, nCells, nVertLevels) ;
	double v(Time, nEdges, nVertLevels) ;
	double rh(Time, nCells, nVertLevels) ;
	double theta(Time, nCells, nVertLevels) ;
	double rho(Time, nCells, nVertLevels) ;
	double qv_init(nVertLevels) ;
	double t_init(nCells, nVertLevels) ;
	double u_init(nVertLevels) ;
	double pressure_p(Time, nCells, nVertLevels) ;
	double tend_theta(Time, nCells, nVertLevels) ;
	double tend_rho(Time, nCells, nVertLevels) ;
	double tend_w(Time, nCells, nVertLevelsP1) ;
	double tend_u(Time, nEdges, nVertLevels) ;
	double qv(Time, nCells, nVertLevels) ;
	double qc(Time, nCells, nVertLevels) ;
	double qr(Time, nCells, nVertLevels) ;
	double qi(Time, nCells, nVertLevels) ;
	double qs(Time, nCells, nVertLevels) ;
	double qg(Time, nCells, nVertLevels) ;
	double tend_qg(Time, nCells, nVertLevels) ;
	double tend_qs(Time, nCells, nVertLevels) ;
	double tend_qi(Time, nCells, nVertLevels) ;
	double tend_qr(Time, nCells, nVertLevels) ;
	double tend_qc(Time, nCells, nVertLevels) ;
	double tend_qv(Time, nCells, nVertLevels) ;
	double qnr(Time, nCells, nVertLevels) ;
	double qni(Time, nCells, nVertLevels) ;
	double tend_qnr(Time, nCells, nVertLevels) ;
	double tend_qni(Time, nCells, nVertLevels) ;

// global attributes:
		:config_test_case = 0 ;
		:config_time_integration = "SRK3" ;
		:config_dt = 900. ;
		:config_calendar_type = 0 ;
		:config_start_time = "2010-10-23_00:00:00" ;
		:config_stop_time = "none" ;
		:config_run_duration = "00_03:00:00" ;
		:config_sfc_update_interval = "none" ;
		:config_horiz_mixing = "2d_smagorinsky" ;
		:config_h_mom_eddy_visc2 = 0. ;
		:config_h_mom_eddy_visc4 = 5.e+15 ;
		:config_v_mom_eddy_visc2 = 0. ;
		:config_h_theta_eddy_visc2 = 0. ;
		:config_h_theta_eddy_visc4 = 5.e+15 ;
		:config_v_theta_eddy_visc2 = 0. ;
		:config_number_of_sub_steps = 6 ;
		:config_w_adv_order = 2 ;
		:config_theta_adv_order = 3 ;
		:config_scalar_adv_order = 3 ;
		:config_u_vadv_order = 2 ;
		:config_w_vadv_order = 2 ;
		:config_theta_vadv_order = 2 ;
		:config_scalar_vadv_order = 2 ;
		:config_coef_3rd_order = 1. ;
		:config_scalar_advection = "T" ;
		:config_positive_definite = "T" ;
		:config_monotonic = "T" ;
		:config_mix_full = "T" ;
		:config_len_disp = 0. ;
		:config_mp_physics = 0 ;
		:config_epssm = 0.1 ;
		:config_smdiv = 0.1 ;
		:config_newpx = "T" ;
		:config_apvm_upwinding = 0.5 ;
		:config_h_ScaleWithMesh = "F" ;
		:config_zd = 22000. ;
		:config_xnutr = 0. ;
		:config_nvertlevels = 41 ;
		:config_input_name = "mpas_init_new.nc" ;
		:config_sfc_update_name = "sfc_update.nc" ;
		:config_output_name = "mpas_output.nc" ;
		:config_restart_name = "mpas_restart.nc" ;
		:config_output_interval = "00_03:00:00" ;
		:config_frames_per_outfile = 1 ;
		:config_decomp_file_prefix = "x1.10242.graph.info.part." ;
		:config_do_restart = "F" ;
		:config_restart_interval = "15_00:00:00" ;
		:input_sfc_albedo = "F" ;
		:input_landuse_data = "USGS" ;
		:input_soil_data = "STAS" ;
		:num_soil_layers = 4 ;
		:num_months = 12 ;
		:config_n_physics = 1 ;
		:config_n_microp = 8 ;
		:config_n_conv = 1 ;
		:config_n_pbl = 1 ;
		:config_n_lsm = 1 ;
		:config_n_eddy = 1 ;
		:config_n_radt_lw = 2 ;
		:config_n_radt_sw = 2 ;
		:config_frac_seaice = 0 ;
		:config_microp_scheme = "wsm6" ;
		:config_conv_shallow_scheme = "off" ;
		:config_conv_deep_scheme = "kain_fritsch" ;
		:config_eddy_scheme = "off" ;
		:config_lsm_scheme = "noah" ;
		:config_pbl_scheme = "ysu" ;
		:config_radt_lw_scheme = "rrtmg_lw" ;
		:config_radt_sw_scheme = "rrtmg_sw" ;
		:config_sfclayer_scheme = "monin_obukhov" ;
		:on_a_sphere = "YES             " ;
		:sphere_radius = 1. ;
}
