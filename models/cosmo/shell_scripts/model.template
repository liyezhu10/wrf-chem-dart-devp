#!/bin/csh
#
# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# $Id: $
#
# batch script to start N copies of the model
#
#==================================================================
#BSUB -J JOB_NAME 
#BSUB -o JOB_NAME.%J.log
#BSUB -P PROJ_NUMBER
#BSUB -W 00:10
#BSUB -q standby
#BSUB -n NPROCS
#BSUB -x
#==================================================================

set myname = $0     # this is the name of this script
set start_time = `date +%s`
echo "host is " `hostname`

# we are going to run the conversions in parallel so make a separate
# subdir for each member
set tempdir = advance_temp

# collect various info from the namelist file.  first find the right namelist
# in the file plus the following N lines, then grep those for the particular
# variable you're looking for.  finally, strip off the "name =" part to get the value

# number of ensemble members
set line       = `fgrep -A 40 \&filter_nml input.nml.template | fgrep ens_size`
set num_ens    = `echo $line | sed -e 's/^.*ens_size.*=//' -e 's/"//g' -e 's/,//' `

# grab the intended input and output filenames from the input.nml namelist template file
set line      = `fgrep -A 8 \&model_nml input.nml.template | fgrep cosmo_filename`
set inputfile = `echo $inputline | sed -e 's/^.*cosmo_filename.*=//' -e 's/"//g' -e 's/,//' `


# for now, use sed to update how far the model should run
# here is where you'd update any control files for the model
# to tell it how far to advance
set currtime = CURRTIME


set mem = 1
while ( $mem < $num_ens )

   #  convert member N
   if ( ! -d ${tempdir}${mem} ) mkdir ${tempdir}${mem}

   # cd into working dir per member
   cd ${tempdir}${mem}

   # copy the input files here
   cp ../$inputfile .

   # run the model in background
   MPIRUN ./model

   cd ..

   @ mem ++
end

# wait for the jobs to finish
wait

# save any diagnostic into


set mem = 1
while ( $mem < $num_ens )

   # cd into working dir per member
   cd ${tempdir}${mem}

   # copy the output file back
   cp $inputfile ../

   cd ..

   @ mem ++
end


set end_time = `date  +%s`
@ length_time = $end_time - $start_time
echo "duration_sec = $length_time"

exit 0

# <next few lines under version control, do not edit>
# $URL: $
# $Revision: $
# $Date: $


