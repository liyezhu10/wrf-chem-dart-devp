&perfect_model_obs_nml
   read_input_state_from_file = .true.
   write_output_state_to_file = .true.
   async                      = 0
   init_time_days             = -1
   init_time_seconds          = -1
   first_obs_days             = -1
   first_obs_seconds          = -1
   last_obs_days              = -1
   last_obs_seconds           = -1
   single_file_in             = .false.
   single_file_out            = .false.
   input_state_files          = "DATA.ionos2.nc"
   output_state_files         = "perfect_output.nc"
   adv_ens_command            = "no_advance_script"
   obs_seq_in_file_name       = "obs_seq.in"
   obs_seq_out_file_name      = "obs_seq.perfect"
   trace_execution            = .true.
   output_timestamps          = .false.
   print_every_nth_obs        = -1
   output_forward_op_errors   = .false.
   silence                    = .false.
  /


&filter_nml
   async                    = 0
   adv_ens_command          = "no_advance_script"
   ens_size                 =  2
   obs_sequence_in_name     = "obs_seq.out"
   obs_sequence_out_name    = "obs_seq.final"
   input_state_file_list    = "input_list.txt"
   output_state_file_list   = "output_list.txt"
   init_time_days           = -1
   init_time_seconds        = -1
   first_obs_days           = -1
   first_obs_seconds        = -1
   last_obs_days            = -1
   last_obs_seconds         = -1
   num_output_state_members = 10
   num_output_obs_members   = 10
   output_interval          = 1
   num_groups               = 1
   output_forward_op_errors = .false.
   output_timestamps        = .false.
   trace_execution          = .true.

   stages_to_write          = 'preassim', 'analysis'
   output_members           = .false.
   output_mean              = .true.
   output_sd                = .false.
   write_all_stages_at_end  = .true.

   silence                  = .false.
   distributed_state        = .false.
   perturb_from_single_instance = .true.
   perturbation_amplitude   = 0.2

   inf_flavor                  = 2,                       0
   inf_initial_from_restart    = .false.,                 .false.
   inf_sd_initial_from_restart = .false.,                 .false.
   inf_initial                 = 1.0,                     1.0
   inf_sd_initial              = 0.6,                     0.6
   inf_damping                 = 0.9,                     0.9
   inf_lower_bound             = 1.0,                     1.0
   inf_upper_bound             = 100.0,                   100.0
   inf_sd_lower_bound          = 0.6,                     0.6
  /


&model_nml
   openggcm_template            = "DATA.ionos2.nc"
   assimilation_period_days     = 0
   assimilation_period_seconds  = 3600
   model_perturbation_amplitude = 0.1
   model_state_variables        =
      'oplus', 'QTY_ELECTRON_DENSITY',   'UPDATE', 'GEOGRAPHIC_GRID',
   debug = 3
  /

!>@ todo after hop test    'pot',   'QTY_ELECTRIC_POTENTIAL', 'UPDATE', 'MAGNETIC_GRID',


&quality_control_nml
   outlier_threshold  = 3.0
   input_qc_threshold = 1.0
  /


# cutoff of 0.03 (radians) is about 200km
&assim_tools_nml
   filter_kind                     = 1
   cutoff                          = 0.20
   sort_obs_inc                    = .false.
   spread_restoration              = .false.
   sampling_error_correction       = .false.
   adaptive_localization_threshold = -1
   output_localization_diagnostics = .false.
   localization_diagnostics_file   = 'localization_diagnostics'
   print_every_nth_obs             = 0
  /


&ensemble_manager_nml
   layout                  = 1
   tasks_per_node          = 1
  /


&state_vector_io_nml
   single_precision_output = .false.
  /


&cov_cutoff_nml
   select_localization = 1
  /

&reg_factor_nml
   select_regression    = 1
   input_reg_file       = "time_mean_reg"
   save_reg_diagnostics = .false.
   reg_diagnostics_file = "reg_diagnostics"
  /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
  /

# maybe later   assimilate_these_obs_types = 'SUPER_DARN_ELECTRIC_POTENTIAL',
&obs_kind_nml
   assimilate_these_obs_types = 'GPS_PROFILE'
    evaluate_these_obs_types  = ''
  /

&preprocess_nml
    input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90'
   output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90'
     input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90'
    output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90'
   input_files              = '../../../observations/forward_operators/obs_def_upper_atm_mod.f90'
  /

&location_nml
   horiz_dist_only             = .true.
   vert_normalization_pressure = 100000.0
   vert_normalization_height   = 10000.0
   vert_normalization_level    = 20.0
   approximate_distance        = .false.
   nlon                        = 71
   nlat                        = 36
   output_box_info             = .true.
  /

&utilities_nml
   TERMLEVEL = 1
   module_details = .false.
   logfilename = 'dart_log.out'
   nmlfilename = 'dart_log.nml'
   write_nml = 'file'
  /

&mpi_utilities_nml
  /

&obs_sequence_tool_nml
   num_input_files = 7
   filename_seq    = '../observations/ssh_pseudo.obs_seq.out',
                     '../observations/gliders_t_pseudo.obs_seq.out',
                     '../observations/adcp_v_pseudo.obs_seq.out',
                     '../observations/tmi_pseudo.obs_seq.out'
   filename_out    = 'obs_seq.out'
   gregorian_cal   = .true.
  /

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   first_bin_center =  1998, 1, 3, 0, 0, 0
   last_bin_center  =  1998, 2, 1, 0, 0, 0
   bin_separation   =     0, 0, 1, 0, 0, 0
   bin_width        =     0, 0, 1, 0, 0, 0
   time_to_skip     =     0, 0, 0, 0, 0, 0
   max_num_bins     = 1000
   trusted_obs      = 'null'
   Nregions   = 3
   lonlim1    = 0.0,     0.0,   0.0
   lonlim2    = 360.0, 360.0, 360.0
   latlim1    = -90.0, -90.0,   0.0
   latlim2    =  90.0,   0.0,  90.0
   reg_names  = 'Earth', 'SH', 'NH'
   print_mismatched_locs = .false.
   create_rank_histogram = .true.
   outliers_in_histogram = .true.
   use_zero_error_obs    = .false.
   verbose               = .true.
   hlevel =  10.0,  20.0,   30.0,   40.0,  100.0,
            200.0, 500.0, 1000.0, 2000.0
  /

&schedule_nml
   calendar        = 'Gregorian'
   first_bin_start =  1601,  1,  1,  0,  0,  0
   first_bin_end   =  2999,  1,  1,  0,  0,  0
   last_bin_end    =  2999,  1,  1,  0,  0,  0
   bin_interval_days    = 1000000
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
  /

&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   append_to_netcdf  = .false.
   lonlim1    =    0.0
   lonlim2    =  360.0
   latlim1    =  -90.0
   latlim2    =   90.0
   verbose    = .false.
  /

&model_mod_check_nml
   verbose               = .true.
   restart_in_file_name  = 'openggcm3D'
   test1thru             = 5
   x_ind                 = 1
   loc_of_interest       = 320.0, 18.0, 1.0
   kind_of_interest      = 'QTY_ELECTRIC_POTENTIAL'
   interp_test_lonrange  = 0.0, 360.0
   interp_test_dlon      = 1.0
   interp_test_latrange  = -90.0, 90.0
   interp_test_dlat      = 1.0
   interp_test_vertrange = 1.0,  2.0
   interp_test_dvert     = 1.0
   interp_test_vertcoord = 'VERTISUNDEF'
  /


&smoother_nml
   num_lags              = 0
   start_from_restart    = .false.
   output_restart        = .false.
   restart_in_file_name  = 'smoother_ics'
   restart_out_file_name = 'smoother_restart'
  /
