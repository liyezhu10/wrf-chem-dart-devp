+ START_DATE=2008060118
+ export START_DATE
+ END_DATE=2008060300
+ export END_DATE
+ INITIAL_DATE=2008060112
+ export INITIAL_DATE
+ INITIAL_FILE_DATE=2008-06-01_12:00:00
+ export INITIAL_FILE_DATE
+ FIRST_FILTER_DATE=2008060118
+ export FIRST_FILTER_DATE
+ CHEM_TYPE=OMI_NO2
+ export CHEM_TYPE
+ CHEM_TYPE=MODIS_AOD
+ export CHEM_TYPE
+ CHEM_TYPE=IASI_O3
+ export CHEM_TYPE
+ CHEM_TYPE=NONE
+ export CHEM_TYPE
+ CHEM_TYPE=MOPITT_CO
+ export CHEM_TYPE
+ DOMAIN=01
+ export DOMAIN
+ NUM_MEMBERS=20
+ export NUM_MEMBERS
+ CYCLE_PERIOD=6
+ export CYCLE_PERIOD
+ FCST_PERIOD=6
+ export FCST_PERIOD
+ ASIM_PERIOD=3
+ export ASIM_PERIOD
+ HIST_PERIOD=6
+ export HIST_PERIOD
+ INPUTOUT_PERIOD=6
+ export INPUTOUT_PERIOD
+ LBC_FREQ=3
+ export LBC_FREQ
+ (( INTERVAL_SEC=3*60*60 ))
+ (( HISTORY_INTERVAL_MIN=6*60 ))
+ (( INPUTOUT_INTERVAL_MIN=6*60 ))
+ (( CYCLE_PERIOD_SEC=6*60*60 ))
+ SKIP_FILTER_WRF_TO_DART=false
+ export SKIP_FILTER_WRF_TO_DART
+ RUN_CENTRALDIR_SETUP=true
+ export RUN_CENTRALDIR_SETUP
+ RUN_DATE_TIME_SETUP=true
+ export RUN_DATE_TIME_SETUP
+ RUN_CREATE_NAMELISTS=true
+ export RUN_CREATE_NAMELISTS
+ RUN_INITIAL=false
+ export RUN_INITIAL
+ RUN_CYCLING=true
+ export RUN_CYCLING
+ RUN_FILTER=true
+ export RUN_FILTER
+ RUN_WRFCHEM=true
+ export RUN_WRFCHEM
+ RUN_ARCHIVE=true
+ export RUN_ARCHIVE
+ RUN_WARM=true
+ export RUN_WARM
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=false
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=false
+ export WARM_ARCHIVE
+ [[ true == true ]]
+ [[ ! true == true ]]
+ [[ true == true ]]
+ [[ ! true == true ]]
+ [[ false == true ]]
+ [[ ! true == true ]]
+ WPB_RC_DIR=wpb_rc_gabi
+ export WPB_RC_DIR
+ OBS_DIR=obs
+ export OBS_DIR
+ [[ MOPITT_CO == MOPITT_CO ]]
+ OBS_DIR=obs_MOPCOMB
+ export OBS_DIR
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MODIS_AOD ]]
+ EMISSIONS_DIR=chem_static
+ export EMISSIONS_DIR
+ USE_HSI=true
+ export USE_HSI
+ USE_WRFDA=false
+ export USE_WRFDA
+ DART_VER=DART_DEVEL_COM
+ export DART_VER
+ WRFCHEM_VER=WRFCHEMv3.4_dmpar
+ export WRFCHEM_VER
+ WRF_VER=WRFv3.4_dmpar
+ export WRF_VER
+ WRFDA_VER=WRFDAv3.4_dmpar
+ export WRFDA_VER
+ PROJ_NUMBER=P19010000
+ export PROJ_NUMBER
+ TIME_LIMIT_FILTER=1:40
+ export TIME_LIMIT_FILTER
+ TIME_LIMIT_WRFCHEM=1:40
+ export TIME_LIMIT_WRFCHEM
+ NUM_TASKS=32
+ export NUM_TASKS
+ TASKS_PER_NODE=16
+ export TASKS_PER_NODE
+ JOB_CLASS=small
+ export JOB_CLASS
+ TRUNK_DIR=/glade/p/work/mizzi/TRUNK
+ export TRUNK_DIR
+ DATA_DIR=/glade/scratch/mizzi/AVE_TEST_DATA
+ export DATA_DIR
+ HSI_DATA_DIR=/MIZZI/AVE_TEST_DATA
+ export HSI_DATA_DIR
+ RUN_DIR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB
+ export RUN_DIR
+ HSI_SAVE_DIR=/MIZZI/DART_TEST_AVE/MOPITT_COMB
+ export HSI_SAVE_DIR
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
+ CENTRALDIR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ export CENTRALDIR
+ WRF_RUN_DIR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN
+ export WRF_RUN_DIR
+ WRFCHEM_RUN_DIR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ export WRFCHEM_RUN_DIR
+ WRFBDY_DIR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ export WRFBDY_DIR
+ DART_DIR=/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM
+ export DART_DIR
+ WRF_DIR=/glade/p/work/mizzi/TRUNK/WRFv3.4_dmpar
+ export WRF_DIR
+ WRFCHEM_DIR=/glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar
+ export WRFCHEM_DIR
+ WRFDA_DIR=/glade/p/work/mizzi/TRUNK/WRFDAv3.4_dmpar/var
+ export WRFDA_DIR
+ echo BEGIN RUN_CENTRALDIR_SETUP CODE BLOCK
BEGIN RUN_CENTRALDIR_SETUP CODE BLOCK
+ true
+ [[ -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN ]]
+ echo /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN exists/
/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN exists/
+ [[ -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN ]]
+ echo /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN exists/
/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN exists/
+ [[ -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF ]]
+ echo /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF exists/
/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF exists/
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/shell_scripts/advance_model.ksh /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/shell_scripts/da_run_hold.ksh /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/input.nml /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/advance_time /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/pert_wrf_bc /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/update_wrf_bc /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/dart_to_wrf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/wrf_to_dart /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/filter /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/work/restart_file_tool /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/system_simulation/final_full_precomputed_tables/final_full.20 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/wrf.exe /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/.
+ true
+ hsi get /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060112/wrfinput_d01_2008-06-01_12:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  '/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060112/wrfinput_d01_2008-06-01_12:00:00.e001' (2012/12/21 13:16:22 441849296 bytes, 166069.7 KBS )
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/wrf.exe /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/CAM_ABS_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/CAM_AEROPT_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/ETAMPNEW_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/GENPARM.TBL /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/LANDUSE.TBL /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/RRTMG_LW_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/RRTMG_SW_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/RRTM_DATA /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/SOILPARM.TBL /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/URBPARM.TBL /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/WRFCHEMv3.4_dmpar/test/em_real/VEGPARM.TBL /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ cp /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/run_scripts/hist_io_flds /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF_RUN/.
+ false
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/clim_p_trop.nc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'clim_p_trop.nc' : '/MIZZI/AVE_TEST_DATA/chem_static/clim_p_trop.nc' (2012/12/17 09:10:24 505944 bytes, 249363.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/exo_coldens_d01
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'exo_coldens_d01' : '/MIZZI/AVE_TEST_DATA/chem_static/exo_coldens_d01' (2012/12/17 09:10:27 171288728 bytes, 391952.6 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/ubvals_b40.20th.track1_1996-2005.nc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'ubvals_b40.20th.track1_1996-2005.nc' : '/MIZZI/AVE_TEST_DATA/chem_static/ubvals_b40.20th.track1_1996-2005.nc' (2012/12/17 09:10:27 1402428 bytes, 89583.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/wrf_season_wes_usgs_d01.nc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrf_season_wes_usgs_d01.nc' : '/MIZZI/AVE_TEST_DATA/chem_static/wrf_season_wes_usgs_d01.nc' (2012/12/17 09:10:28 31320240 bytes, 175046.9 KBS )
+ echo COMPLETED RUN_CENTRALDIR_SETUP CODE BLOCK
COMPLETED RUN_CENTRALDIR_SETUP CODE BLOCK
+ echo BEGIN RUN_DATE_TIME CODE BLOCK
BEGIN RUN_DATE_TIME CODE BLOCK
+ true
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ L_DATE=2008060118
+ export L_DATE
+ echo 2008060118
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060118
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060118
+ cut -c7-8
+ L_DD=01
+ export L_DD
+ echo 2008060118
+ cut -c9-10
+ L_HH=18
+ export L_HH
+ L_FILE_DATE=2008-06-01_18:00:00
+ export L_FILE_DATE
+ ./advance_time
+ PAST_DATE=2008060112
+ export PAST_DATE
+ echo 2008060112
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060112
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060112
+ cut -c7-8
+ PAST_DD=01
+ export PAST_DD
+ echo 2008060112
+ cut -c9-10
+ PAST_HH=12
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-01_12:00:00
+ export PAST_FILE_DATE
+ echo 2008060118 +6h
+ ./advance_time
+ NEXT_DATE=2008060200
+ export NEXT_DATE
+ echo 2008060200
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060200
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060200
+ cut -c7-8
+ NEXT_DD=02
+ export NEXT_DD
+ echo 2008060200
+ cut -c9-10
+ NEXT_HH=00
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-02_00:00:00
+ export NEXT_FILE_DATE
+ echo 2008060118 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060115
+ export ASIM_MIN_DATE
+ echo 2008060115
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060115
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060115
+ cut -c7-8
+ ASIM_MIN_DD=01
+ export ASIM_MIN_DD
+ echo 2008060115
+ cut -c9-10
+ ASIM_MIN_HH=15
+ export ASIM_MIN_HH
+ echo 2008060118 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060121
+ export ASIM_MAX_DATE
+ echo 2008060121
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060121
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060121
+ cut -c7-8
+ ASIM_MAX_DD=01
+ export ASIM_MAX_DD
+ echo 2008060121
+ cut -c9-10
+ ASIM_MAX_HH=21
+ export ASIM_MAX_HH
+ echo 2008060118 0 -g
+ ./advance_time
+ set -A GREG_DATA 148805 64800
+ DAY_GREG=148805
+ export DAY_GREG
+ SEC_GREG=64800
+ export SEC_GREG
+ echo 2008060200 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 0
+ NEXT_DAY_GREG=148806
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=0
+ export NEXT_SEC_GREG
+ echo COMPLETED RUN_DATE_TIME CODE BLOCK
COMPLETED RUN_DATE_TIME CODE BLOCK
+ echo BEGIN RUN_CREATE_NAMELISTS CODE BLOCK
BEGIN RUN_CREATE_NAMELISTS CODE BLOCK
+ true
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ NL_OUTPUT_RESTART=.true.
+ export NL_OUTPUT_RESTART
+ NL_START_FROM_RESTART=.true.
+ export NL_START_FROM_RESTART
+ NL_OBS_SEQUENCE_IN_NAME=$'\'obs_seq.out\''
+ export NL_OBS_SEQUENCE_IN_NAME
+ NL_OBS_SEQUENCE_OUT_NAME=$'\'obs_seq.final\''
+ export NL_OBS_SEQUENCE_OUT_NAME
+ NL_RESTART_IN_FILE_NAME=$'\'filter_ic_old\''
+ export NL_RESTART_IN_FILE_NAME
+ NL_RESTART_OUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_RESTART_OUT_FILE_NAME
+ echo 2008060115 0 -g
+ ./advance_time
+ set -A temp 148805 54000
+ (( temp[1]=54000+1 ))
+ NL_FIRST_OBS_DAYS=148805
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=54001
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060121 0 -g
+ set -A temp 148805 75600
+ NL_LAST_OBS_DAYS=148805
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=75600
+ export NL_LAST_OBS_SECONDS
+ NL_INF_FLAVOR_PRIOR=2
+ export NL_INF_FLAVOR_PRIOR
+ NL_INF_FLAVOR_POST=0
+ export NL_INF_FLAVOR_POST
+ [[ 2008060118 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.false.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.false.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.false.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.false.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ NL_INF_IN_FILE_NAME_PRIOR=$'\'prior_inflate_ic_old\''
+ export NL_INF_IN_FILE_NAME_PRIOR
+ NL_INF_IN_FILE_NAME_POST=$'\'post_inflate_ics\''
+ export NL_INF_IN_FILE_NAME_POST
+ NL_INF_OUT_FILE_NAME_PRIOR=$'\'prior_inflate_ic_new\''
+ export NL_INF_OUT_FILE_NAME_PRIOR
+ NL_INF_OUT_FILE_NAME_POST=$'\'prior_inflate_restart\''
+ export NL_INF_OUT_FILE_NAME_POST
+ NL_INF_DIAG_FILE_NAME_PRIOR=$'\'prior_inflate_diag\''
+ export NL_INF_DIAG_FILE_NAME_PRIOR
+ NL_INF_DIAG_FILE_NAME_POST=$'\'post_inflate_diag\''
+ export NL_INF_DIAG_FILE_NAME_POST
+ NL_INF_INITIAL_PRIOR=1.0
+ export NL_INF_INITIAL_PRIOR
+ NL_INF_INITIAL_POST=1.0
+ export NL_INF_INITIAL_POST
+ NL_INF_SD_INITIAL_PRIOR=0.6
+ export NL_INF_SD_INITIAL_PRIOR
+ NL_INF_SD_INITIAL_POST=0.0
+ export NL_INF_SD_INITIAL_POST
+ NL_INF_DAMPING_PRIOR=0.9
+ export NL_INF_DAMPING_PRIOR
+ NL_INF_DAMPING_POST=1.0
+ export NL_INF_DAMPING_POST
+ NL_INF_LOWER_BOUND_PRIOR=1.0
+ export NL_INF_LOWER_BOUND_PRIOR
+ NL_INF_LOWER_BOUND_POST=1.0
+ export NL_INF_LOWER_BOUND_POST
+ NL_INF_UPPER_BOUND_PRIOR=1000000.0
+ export NL_INF_UPPER_BOUND_PRIOR
+ NL_INF_UPPER_BOUND_POST=1000000.0
+ export NL_INF_UPPER_BOUND_POST
+ NL_INF_SD_LOWER_BOUND_PRIOR=0.6
+ export NL_INF_SD_LOWER_BOUND_PRIOR
+ NL_INF_SD_LOWER_BOUND_POST=0.0
+ export NL_INF_SD_LOWER_BOUND_POST
+ NL_CUTOFF=0.1
+ export NL_CUTOFF
+ NL_SPECIAL_LOCALIZATION_OBS_TYPES=$'\'IASI_O3_RETRIEVAL\',\'MOPITT_CO_RETRIEVAL\''
+ export NL_SPECIAL_LOCALIZATION_OBS_TYPES
+ NL_SAMPLING_ERROR_CORRECTION=.true.
+ export NL_SAMPLING_ERROR_CORRECTION
+ NL_SPECIAL_LOCALIZATION_CUTOFFS=0.05,0.05
+ export NL_SPECIAL_LOCALIZATION_CUTOFFS
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_WRITE_BINARY_RESTART_FILE=.true.
+ export NL_WRITE_BINARY_RESTART_FILE
+ NL_DEFAULT_STATE_VARIABLES=.false.
+ export NL_DEFAULT_STATE_VARIABLES
+ NL_WRF_STATE_VARIABLES=$'\'U\',     \'KIND_U_WIND_COMPONENT\',     \'TYPE_U\',  \'UPDATE\',\'999\',\n                              \'V\',     \'KIND_V_WIND_COMPONENT\',     \'TYPE_V\',  \'UPDATE\',\'999\',\n                              \'W\',     \'KIND_VERTICAL_VELOCITY\',    \'TYPE_W\',  \'UPDATE\',\'999\',\n                              \'PH\',    \'KIND_GEOPOTENTIAL_HEIGHT\',  \'TYPE_GZ\', \'UPDATE\',\'999\',\n                              \'T\',     \'KIND_POTENTIAL_TEMPERATURE\',\'TYPE_T\',  \'UPDATE\',\'999\',\n                              \'MU\',    \'KIND_PRESSURE\',             \'TYPE_MU\', \'UPDATE\',\'999\',\n                              \'QVAPOR\',\'KIND_VAPOR_MIXING_RATIO\',   \'TYPE_QV\', \'UPDATE\',\'999\',\n                              \'QRAIN\', \'KIND_RAINWATER_MIXING_RATIO\',\'TYPE_QRAIN\', \'UPDATE\',\'999\',\n                              \'QCLOUD\',\'KIND_CLOUD_LIQUID_WATER\',   \'TYPE_QCLOUD\', \'UPDATE\',\'999\',\n                              \'QSNOW\', \'KIND_SNOW_MIXING_RATIO\',    \'TYPE_QSNOW\', \'UPDATE\',\'999\',\n                              \'QICE\',  \'KIND_CLOUD_ICE\',            \'TYPE_QICE\', \'UPDATE\',\'999\',\n                              \'U10\',   \'KIND_U_WIND_COMPONENT\',     \'TYPE_U10\',\'UPDATE\',\'999\',\n                              \'V10\',   \'KIND_V_WIND_COMPONENT\',     \'TYPE_V10\',\'UPDATE\',\'999\',\n                              \'T2\',    \'KIND_TEMPERATURE\',          \'TYPE_T2\', \'UPDATE\',\'999\',\n                              \'TH2\',   \'KIND_POTENTIAL_TEMPERATURE\',\'TYPE_TH2\',\'UPDATE\',\'999\',\n                              \'Q2\',    \'KIND_SPECIFIC_HUMIDITY\',    \'TYPE_Q2\', \'UPDATE\',\'999\',\n                              \'PSFC\',  \'KIND_PRESSURE\',             \'TYPE_PS\', \'UPDATE\',\'999\',\n                              \'o3\',    \'KIND_O3\',                   \'TYPE_O3\', \'UPDATE\',\'999\',\n                              \'co\',    \'KIND_CO\',                   \'TYPE_CO\', \'UPDATE\',\'999\',\n                              \'no\',    \'KIND_NO\',                   \'TYPE_NO\', \'UPDATE\',\'999\',\n                              \'no2\',   \'KIND_NO2\',                  \'TYPE_NO2\', \'UPDATE\',\'999\',\n                              \'hno3\',  \'KIND_HNO3\',                 \'TYPE_HNO3\', \'UPDATE\',\'999\',\n                              \'hno4\',  \'KIND_HNO4\',                 \'TYPE_HNO4\', \'UPDATE\',\'999\',\n                              \'n2o5\',  \'KIND_N2O5\',                 \'TYPE_N2O5\', \'UPDATE\',\'999\',\n                              \'pan\',   \'KIND_PAN\',                  \'TYPE_PAN\', \'UPDATE\',\'999\',\n                              \'mek\',   \'KIND_MEK\',                  \'TYPE_MEK\', \'UPDATE\',\'999\',\n                              \'ald\',   \'KIND_ALD\',                  \'TYPE_ALD\', \'UPDATE\',\'999\',\n                              \'ch3o2\', \'KIND_CH3O2\',                \'TYPE_CH3O2\', \'UPDATE\',\'999\',\n                              \'c3h8\',  \'KIND_C3H8\',                 \'TYPE_C3H8\', \'UPDATE\',\'999\',\n                              \'c2h6\',  \'KIND_C2H6\',                 \'TYPE_C2H6\', \'UPDATE\',\'999\',\n                              \'acet\',  \'KIND_ACET\',                 \'TYPE_ACET\', \'UPDATE\',\'999\',\n                              \'hcho\',  \'KIND_HCHO\',                 \'TYPE_HCHO\', \'UPDATE\',\'999\',\n                              \'c2h4\',  \'KIND_C2H4\',                 \'TYPE_C2H4\', \'UPDATE\',\'999\',\n                              \'c3h6\',  \'KIND_C3H6\',                 \'TYPE_C3H6\', \'UPDATE\',\'999\',\n                              \'tol\',   \'KIND_TOL\',                  \'TYPE_TOL\', \'UPDATE\',\'999\',\n                              \'mvk\',   \'KIND_MVK\',                  \'TYPE_MVK\', \'UPDATE\',\'999\',\n                              \'bigalk\',\'KIND_BIGALK\',               \'TYPE_BIGALK\', \'UPDATE\',\'999\',\n                              \'isopr\', \'KIND_ISOPR\',                \'TYPE_ISOPR\', \'UPDATE\',\'999\',\n                              \'macr\',  \'KIND_MACR\',                 \'TYPE_MACR\', \'UPDATE\',\'999\',\n                              \'glyald\',\'KIND_GLYALD\',               \'TYPE_GLYALD\', \'UPDATE\',\'999\',\n                              \'c10h16\',\'KIND_C10H16\',               \'TYPE_C10H16\', \'UPDATE\',\'999\''
+ export NL_WRF_STATE_VARIABLES
+ NL_WRF_STATE_BOUNDS=$'\'QVAPOR\',\'0.0\',\'NULL\',\'CLAMP\',\n                           \'QRAIN\', \'0.0\',\'NULL\',\'CLAMP\',\n                           \'QCLOUD\',\'0.0\',\'NULL\',\'CLAMP\',\n                           \'QSNOW\', \'0.0\',\'NULL\',\'CLAMP\',\n                           \'QICE\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'o3\',    \'0.0\',\'NULL\',\'CLAMP\',\n                           \'co\',    \'0.0\',\'NULL\',\'CLAMP\',\n                           \'no\',    \'0.0\',\'NULL\',\'CLAMP\',\n                           \'no2\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'hno3\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'hno4\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'n2o5\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'pan\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'mek\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'ald\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'ch3o2\', \'0.0\',\'NULL\',\'CLAMP\',\n                           \'c3h8\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'c2h6\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'acet\'   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'hcho\'   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'c2h4\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'c3h6\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'tol\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'mvk\',   \'0.0\',\'NULL\',\'CLAMP\',\n                           \'bigalk\',\'0.0\',\'NULL\',\'CLAMP\',\n                           \'isopr\', \'0.0\',\'NULL\',\'CLAMP\',\n                           \'macr\',  \'0.0\',\'NULL\',\'CLAMP\',\n                           \'glyald\',\'0.0\',\'NULL\',\'CLAMP\',\n                           \'c10h16\',\'0.0\',\'NULL\',\'CLAMP\''
+ export NL_WRF_STATE_BOUNDS
+ NL_OUTPUT_STATE_VECTOR=.false.
+ export NL_OUTPUT_STATE_VECTOR
+ NL_NUM_DOMAINS=01
+ export NL_NUM_DOMAINS
+ NL_CALENDAR_TYPE=3
+ export NL_CALENDAR_TYPE
+ NL_ASSIMILATION_PERIOD_SECONDS=21600
+ export NL_ASSIMILATION_PERIOD_SECONDS
+ NL_VERT_LOCALIZATION_COORD=3
+ export NL_VERT_LOCALIZATION_COORD
+ NL_CENTER_SEARCH_HALF_LENGTH=500000.
+ export NL_CENTER_SEARCH_HALF_LENGTH
+ NL_CENTER_SPLINE_GRID_SCALE=10
+ export NL_CENTER_SPLINE_GRID_SCALE
+ NL_SFC_ELEV_MAX_DIFF=100.0
+ export NL_SFC_ELEV_MAX_DIFF
+ NL_CIRCULATION_PRES_LEVEL=80000.0
+ export NL_CIRCULATION_PRES_LEVEL
+ NL_CIRCULATION_RADIUS=108000.0
+ export NL_CIRCULATION_RADIUS
+ DT_YYYY=''
+ export DT_YYYY
+ DT_MM=''
+ export DT_MM
+ DT_DD=''
+ export DT_DD
+ DT_HH=''
+ export DT_HH
+ (( DT_MM =  + 0 ))
+ (( DT_DD =  + 0 ))
+ (( DT_HH =  + 0 ))
+ NL_FIRST_BIN_CENTER_YY=''
+ export NL_FIRST_BIN_CENTER_YY
+ NL_FIRST_BIN_CENTER_MM=0
+ export NL_FIRST_BIN_CENTER_MM
+ NL_FIRST_BIN_CENTER_DD=0
+ export NL_FIRST_BIN_CENTER_DD
+ NL_FIRST_BIN_CENTER_HH=0
+ export NL_FIRST_BIN_CENTER_HH
+ NL_LAST_BIN_CENTER_YY=''
+ export NL_LAST_BIN_CENTER_YY
+ NL_LAST_BIN_CENTER_MM=0
+ export NL_LAST_BIN_CENTER_MM
+ NL_LAST_BIN_CENTER_DD=0
+ export NL_LAST_BIN_CENTER_DD
+ NL_LAST_BIN_CENTER_HH=0
+ export NL_LAST_BIN_CENTER_HH
+ NL_BIN_SEPERATION_YY=0
+ export NL_BIN_SEPERATION_YY
+ NL_BIN_SEPERATION_MM=0
+ export NL_BIN_SEPERATION_MM
+ NL_BIN_SEPERATION_DD=0
+ export NL_BIN_SEPERATION_DD
+ NL_BIN_SEPERATION_HH=0
+ export NL_BIN_SEPERATION_HH
+ NL_BIN_WIDTH_YY=0
+ export NL_BIN_WIDTH_YY
+ NL_BIN_WIDTH_MM=0
+ export NL_BIN_WIDTH_MM
+ NL_BIN_WIDTH_DD=0
+ export NL_BIN_WIDTH_DD
+ NL_BIN_WIDTH_HH=0
+ export NL_BIN_WIDTH_HH
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_MODEL_ADVANCE_FILE=.false.
+ export NL_MODEL_ADVANCE_FILE
+ NL_ADV_MOD_COMMAND=$'\'mpirun -np 64 ./wrf.exe\''
+ export NL_ADV_MOD_COMMAND
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_INPUT_OBS_KIND_MOD_FILE=$'\'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90\''
+ export NL_INPUT_OBS_KIND_MOD_FILE
+ NL_OUTPUT_OBS_KIND_MOD_FILE=$'\'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90\''
+ export NL_OUTPUT_OBS_KIND_MOD_FILE
+ NL_INPUT_OBS_DEF_MOD_FILE=$'\'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90\''
+ export NL_INPUT_OBS_DEF_MOD_FILE
+ NL_OUTPUT_OBS_DEF_MOD_FILE=$'\'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90\''
+ export NL_OUTPUT_OBS_DEF_MOD_FILE
+ NL_INPUT_FILES=$'\'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90\',\n                       \'/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90\''
+ export NL_INPUT_FILES
+ NL_ASSIMILATE_THESE_OBS_TYPES=$'\'RADIOSONDE_TEMPERATURE\',\n                                      \'RADIOSONDE_U_WIND_COMPONENT\',\n                                      \'RADIOSONDE_V_WIND_COMPONENT\',\n                                      \'ACARS_U_WIND_COMPONENT\',\n                                      \'ACARS_V_WIND_COMPONENT\',\n                                      \'ACARS_TEMPERATURE\',\n                                      \'AIRCRAFT_U_WIND_COMPONENT\',\n                                      \'AIRCRAFT_V_WIND_COMPONENT\',\n                                      \'AIRCRAFT_TEMPERATURE\',\n                                      \'SAT_U_WIND_COMPONENT\',\n                                      \'SAT_V_WIND_COMPONENT\',\n                                      \'MOPITT_CO_RETRIEVAL\''
+ export NL_ASSIMILATE_THESE_OBS_TYPES
+ NL_EVALUATE_THESE_OBS_TYPES=$'\'\''
+ export NL_EVALUATE_THESE_OBS_TYPES
+ NL_FIELDNAMES=$'\'SNOWC\',\n                      \'ALBBCK\',\n                      \'TMN\',\n                      \'TSK\',\n                      \'SH2O\',\n                      \'SMOIS\',\n                      \'SEAICE\',\n                      \'HGT_d01\',\n                      \'TSLB\',\n                      \'SST\',\n                      \'SNOWH\',\n                      \'SNOW\''
+ export NL_FIELDNAMES
+ NL_FIELDLIST_FILE=$'\' \''
+ export NL_FIELDLIST_FILE
+ NL_RUN_DAYS=0
+ export NL_RUN_DAYS
+ NL_RUN_HOURS=6
+ export NL_RUN_HOURS
+ NL_RUN_MINUTES=0
+ export NL_RUN_MINUTES
+ NL_RUN_SECONDS=0
+ export NL_RUN_SECONDS
+ NL_START_YEAR=''
+ export NL_START_YEAR
+ NL_START_MONTH=''
+ export NL_START_MONTH
+ NL_START_DAY=''
+ export NL_START_DAY
+ NL_START_HOUR=''
+ export NL_START_HOUR
+ NL_START_MINUTE=0
+ export NL_START_MINUTE
+ NL_START_SECOND=0
+ export NL_START_SECOND
+ NL_END_YEAR=2008
+ export NL_END_YEAR
+ NL_END_MONTH=06
+ export NL_END_MONTH
+ NL_END_DAY=02
+ export NL_END_DAY
+ NL_END_HOUR=00
+ export NL_END_HOUR
+ NL_END_MINUTE=0
+ export NL_END_MINUTE
+ NL_END_SECOND=0
+ export NL_END_SECOND
+ NL_INTERVAL_SECONDS=10800
+ export NL_INTERVAL_SECONDS
+ NL_INPUT_FROM_FILE=.true.
+ export NL_INPUT_FROM_FILE
+ NL_HISTORY_INTERVAL=360
+ export NL_HISTORY_INTERVAL
+ NL_FRAMES_PER_OUTFILE=1
+ export NL_FRAMES_PER_OUTFILE
+ NL_RESTART=.false.
+ export NL_RESTART
+ NL_RESTART_INTERVAL=1440
+ export NL_RESTART_INTERVAL
+ NL_CYCLING=.true.
+ export NL_CYCLING
+ NL_IO_FORM_HISTORY=2
+ export NL_IO_FORM_HISTORY
+ NL_IO_FORM_RESTART=2
+ export NL_IO_FORM_RESTART
+ NL_IO_FORM_INPUT=2
+ export NL_IO_FORM_INPUT
+ NL_IO_FORM_BOUNDARY=2
+ export NL_IO_FORM_BOUNDARY
+ NL_IO_AUXINPUT5_INNAME=$'\'wrfchemi_d<domain>_<date>\''
+ export NL_IO_AUXINPUT5_INNAME
+ NL_IO_AUXINPUT6_INNAME=$'\'wrfbiochemi_d<domain>_<date>\''
+ export NL_IO_AUXINPUT6_INNAME
+ NL_IO_AUXINPUT7_INNAME=$'\'wrffirechemi_d<domain>_<date>\''
+ export NL_IO_AUXINPUT7_INNAME
+ NL_AUXINPUT5_INTERVAL_M=60
+ export NL_AUXINPUT5_INTERVAL_M
+ NL_AUXINPUT6_INTERVAL_M=60480
+ export NL_AUXINPUT6_INTERVAL_M
+ NL_AUXINPUT7_INTERVAL_M=60
+ export NL_AUXINPUT7_INTERVAL_M
+ NL_FRAMES_PER_AUXINPUT5=1
+ export NL_FRAMES_PER_AUXINPUT5
+ NL_FRAMES_PER_AUXINPUT6=1
+ export NL_FRAMES_PER_AUXINPUT6
+ NL_FRAMES_PER_AUXINPUT7=1
+ export NL_FRAMES_PER_AUXINPUT7
+ NL_IO_FORM_AUXINPUT5=2
+ export NL_IO_FORM_AUXINPUT5
+ NL_IO_FORM_AUXINPUT6=2
+ export NL_IO_FORM_AUXINPUT6
+ NL_IO_FORM_AUXINPUT7=2
+ export NL_IO_FORM_AUXINPUT7
+ NL_IOFIELDS_FILENAME=$'\'hist_io_flds\''
+ export NL_IOFIELDS_FILENAME
+ NL_WRITE_INPUT=.true.
+ export NL_WRITE_INPUT
+ NL_INPUTOUT_INTERVAL=360
+ export NL_INPUTOUT_INTERVAL
+ NL_INPUT_OUTNAME=$'\'wrfapm_d<domain>_<date>\''
+ export NL_INPUT_OUTNAME
+ NL_DEBUG_LEVEL=0
+ export NL_DEBUG_LEVEL
+ NL_TIME_STEP=180
+ export NL_TIME_STEP
+ NL_TIME_STEP_FRACT_NUM=0
+ export NL_TIME_STEP_FRACT_NUM
+ NL_TIME_STEP_FRACT_DEN=1
+ export NL_TIME_STEP_FRACT_DEN
+ NL_MAX_DOM=1
+ export NL_MAX_DOM
+ NL_S_WE=1
+ export NL_S_WE
+ NL_E_WE=271
+ export NL_E_WE
+ NL_S_SN=1
+ export NL_S_SN
+ NL_E_SN=101
+ export NL_E_SN
+ NL_E_VERT=34
+ export NL_E_VERT
+ NL_P_TOP_REQUESTED=1000
+ export NL_P_TOP_REQUESTED
+ NL_INTERP_TYPE=1
+ export NL_INTERP_TYPE
+ NL_T_EXTRAP_TYPE=1
+ export NL_T_EXTRAP_TYPE
+ NL_NUM_METGRID_LEVELS=27
+ export NL_NUM_METGRID_LEVELS
+ NL_NUM_METGRID_SOIL_LEVELS=4
+ export NL_NUM_METGRID_SOIL_LEVELS
+ NL_DX=36000.0
+ export NL_DX
+ NL_DY=36000.0
+ export NL_DY
+ NL_GRID_ID=1
+ export NL_GRID_ID
+ NL_PARENT_ID=0
+ export NL_PARENT_ID
+ NL_I_PARENT_START=0
+ export NL_I_PARENT_START
+ NL_J_PARENT_START=0
+ export NL_J_PARENT_START
+ NL_PARENT_GRID_RATIO=1
+ export NL_PARENT_GRID_RATIO
+ NL_PARENT_TIME_STEP_RATIO=1
+ export NL_PARENT_TIME_STEP_RATIO
+ NL_FEEDBACK=0
+ export NL_FEEDBACK
+ NL_SMOOTH_OPTION=0
+ export NL_SMOOTH_OPTION
+ NL_ETA_LEVELS=1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000
+ export NL_ETA_LEVELS
+ NL_MP_PHYSICS=2
+ export NL_MP_PHYSICS
+ NL_RA_LW_PHYSICS=1
+ export NL_RA_LW_PHYSICS
+ NL_RA_SW_PHYSICS=2
+ export NL_RA_SW_PHYSICS
+ NL_RADT=40
+ export NL_RADT
+ NL_SF_SFCLAY_PHYSICS=2
+ export NL_SF_SFCLAY_PHYSICS
+ NL_SF_SURFACE_PHYSICS=2
+ export NL_SF_SURFACE_PHYSICS
+ NL_BL_PBL_PHYSICS=2
+ export NL_BL_PBL_PHYSICS
+ NL_BLDT=0
+ export NL_BLDT
+ NL_CU_PHYSICS=5
+ export NL_CU_PHYSICS
+ NL_CUDT=0
+ export NL_CUDT
+ NL_ISFFLX=1
+ export NL_ISFFLX
+ NL_IFSNOW=0
+ export NL_IFSNOW
+ NL_ICLOUD=0
+ export NL_ICLOUD
+ NL_SURFACE_INPUT_SOURCE=1
+ export NL_SURFACE_INPUT_SOURCE
+ NL_NUM_SOIL_LAYERS=4
+ export NL_NUM_SOIL_LAYERS
+ NL_SF_URBAN_PHYSICS=0
+ export NL_SF_URBAN_PHYSICS
+ NL_MAXIENS=1
+ export NL_MAXIENS
+ NL_MAXENS=3
+ export NL_MAXENS
+ NL_MAXENS2=3
+ export NL_MAXENS2
+ NL_MAXENS3=16
+ export NL_MAXENS3
+ NL_ENSDIM=144
+ export NL_ENSDIM
+ NL_MP_ZERO_OUT=2
+ export NL_MP_ZERO_OUT
+ NL_CU_RAD_FEEDBACK=.false.
+ export NL_CU_RAD_FEEDBACK
+ NL_CU_DIAG=1
+ export NL_CU_DIAG
+ NL_PROGN=0
+ export NL_PROGN
+ NL_CUGD_AVEDX=1
+ export NL_CUGD_AVEDX
+ NL_USE_BASEPARAM_FR_NML=.true.
+ export NL_USE_BASEPARAM_FR_NML
+ NL_RK_ORD=3
+ export NL_RK_ORD
+ NL_W_DAMPING=1
+ export NL_W_DAMPING
+ NL_DIFF_OPT=1
+ export NL_DIFF_OPT
+ NL_KM_OPT=4
+ export NL_KM_OPT
+ NL_DIFF_6TH_OPT=0
+ export NL_DIFF_6TH_OPT
+ NL_DIFF_6TH_FACTOR=0.12
+ export NL_DIFF_6TH_FACTOR
+ NL_BASE_TEMP=290.
+ export NL_BASE_TEMP
+ NL_DAMP_OPT=3
+ export NL_DAMP_OPT
+ NL_ZDAMP=5000
+ export NL_ZDAMP
+ NL_DAMPCOEF=0.01
+ export NL_DAMPCOEF
+ NL_KHDIF=0
+ export NL_KHDIF
+ NL_KVDIF=0
+ export NL_KVDIF
+ NL_NON_HYDROSTATIC=.true.
+ export NL_NON_HYDROSTATIC
+ NL_MOIST_ADV_OPT=2
+ export NL_MOIST_ADV_OPT
+ NL_SCALAR_ADV_OPT=2
+ export NL_SCALAR_ADV_OPT
+ NL_CHEM_ADV_OPT=2
+ export NL_CHEM_ADV_OPT
+ NL_TKE_ADV_OPT=2
+ export NL_TKE_ADV_OPT
+ NL_TIME_STEP_SOUND=6
+ export NL_TIME_STEP_SOUND
+ NL_SPEC_BDY_WIDTH=5
+ export NL_SPEC_BDY_WIDTH
+ NL_SPEC_ZONE=1
+ export NL_SPEC_ZONE
+ NL_RELAX_ZONE=4
+ export NL_RELAX_ZONE
+ NL_SPECIFIED=.true.
+ export NL_SPECIFIED
+ NL_NESTED=.false.
+ export NL_NESTED
+ NL_REAL_DATA_INIT_TYPE=3
+ export NL_REAL_DATA_INIT_TYPE
+ NL_NIO_TASKS_PER_GROUP=0
+ export NL_NIO_TASKS_PER_GROUP
+ NL_NIO_GROUPS=1
+ export NL_NIO_GROUPS
+ NL_KEMIT=10
+ export NL_KEMIT
+ NL_CHEM_OPT=112
+ export NL_CHEM_OPT
+ NL_BIOEMDT=3
+ export NL_BIOEMDT
+ NL_PHOTDT=18
+ export NL_PHOTDT
+ NL_CHEMDT=3.0
+ export NL_CHEMDT
+ NL_IO_STYLE_EMISSIONS=2
+ export NL_IO_STYLE_EMISSIONS
+ NL_EMISS_INPT_OPT=111
+ export NL_EMISS_INPT_OPT
+ NL_EMISS_OPT=8
+ export NL_EMISS_OPT
+ NL_CHEM_IN_OPT=0
+ export NL_CHEM_IN_OPT
+ NL_PHOT_OPT=3
+ export NL_PHOT_OPT
+ NL_GAS_DRYDEP_OPT=1
+ export NL_GAS_DRYDEP_OPT
+ NL_AER_DRYDEP_OPT=1
+ export NL_AER_DRYDEP_OPT
+ NL_BIO_EMISS_OPT=3
+ export NL_BIO_EMISS_OPT
+ NL_GAS_BC_OPT=112
+ export NL_GAS_BC_OPT
+ NL_GAS_IC_OPT=112
+ export NL_GAS_IC_OPT
+ NL_GAS_BC_OPT=112
+ export NL_GAS_BC_OPT
+ NL_AER_BC_OPT=112
+ export NL_AER_BC_OPT
+ NL_AER_IC_OPT=112
+ export NL_AER_IC_OPT
+ NL_GASCHEM_ONOFF=1
+ export NL_GASCHEM_ONOFF
+ NL_AERCHEM_ONOFF=1
+ export NL_AERCHEM_ONOFF
+ NL_WETSCAV_ONOFF=0
+ export NL_WETSCAV_ONOFF
+ NL_CLDCHEM_ONOFF=0
+ export NL_CLDCHEM_ONOFF
+ NL_VERTMIX_ONOFF=1
+ export NL_VERTMIX_ONOFF
+ NL_CHEM_CONV_TR=1
+ export NL_CHEM_CONV_TR
+ NL_SEAS_OPT=1
+ export NL_SEAS_OPT
+ NL_DUST_OPT=1
+ export NL_DUST_OPT
+ NL_DMSEMIS_OPT=1
+ export NL_DMSEMIS_OPT
+ NL_BIOMASS_BURN_OPT=2
+ export NL_BIOMASS_BURN_OPT
+ NL_PLUMERISEFIRE_FRQ=60
+ export NL_PLUMERISEFIRE_FRQ
+ NL_HAVE_BCS_CHEM=.true.
+ export NL_HAVE_BCS_CHEM
+ NL_AER_RA_FEEDBACK=0
+ export NL_AER_RA_FEEDBACK
+ NL_NE_AREA=118
+ export NL_NE_AREA
+ NL_OPT_PARS_OUT=1
+ export NL_OPT_PARS_OUT
+ NL_SCALE_FIRE_EMISS=.true.
+ export NL_SCALE_FIRE_EMISS
+ NL_HAVE_BCS_UPPER=.true.
+ export NL_HAVE_BCS_UPPER
+ NL_FIXED_UBC_INNAME=ubvals_b40.20th.track1_1996-2005.nc
+ export NL_FIXED_UBC_INNAME
+ NL_CHEMDIAG=1
+ export NL_CHEMDIAG
+ echo COMPLETED RUN_CREATE_NAMELISTS CODE BLOCK
COMPLETED RUN_CREATE_NAMELISTS CODE BLOCK
+ echo BEGIN RUN_INITIAL CODE BLOCK
BEGIN RUN_INITIAL CODE BLOCK
+ false
+ echo COMPLETED RUN_INITIAL CODE BLOCK
COMPLETED RUN_INITIAL CODE BLOCK
+ echo BEGIN CYCLING CODE BLOCK
BEGIN CYCLING CODE BLOCK
+ true
+ false
+ L_DATE=2008060118
+ export L_DATE
+ [[ 2008060118 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060118
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060118
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060118
+ cut -c7-8
+ L_DD=01
+ export L_DD
+ echo 2008060118
+ cut -c9-10
+ L_HH=18
+ export L_HH
+ L_FILE_DATE=2008-06-01_18:00:00
+ export L_FILE_DATE
+ echo 2008060118 -6h
+ ./advance_time
+ PAST_DATE=2008060112
+ export PAST_DATE
+ echo 2008060112
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060112
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060112
+ cut -c7-8
+ PAST_DD=01
+ export PAST_DD
+ echo 2008060112
+ cut -c9-10
+ PAST_HH=12
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-01_12:00:00
+ export PAST_FILE_DATE
+ echo 2008060118 +6h
+ ./advance_time
+ NEXT_DATE=2008060200
+ export NEXT_DATE
+ echo 2008060200
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060200
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060200
+ cut -c7-8
+ NEXT_DD=02
+ export NEXT_DD
+ echo 2008060200
+ cut -c9-10
+ NEXT_HH=00
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-02_00:00:00
+ export NEXT_FILE_DATE
+ echo 2008060118 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060115
+ export ASIM_MIN_DATE
+ echo 2008060115
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060115
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060115
+ cut -c7-8
+ ASIM_MIN_DD=01
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060118 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060121
+ export ASIM_MAX_DATE
+ echo 2008060121
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060121
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060121
+ cut -c7-8
+ ASIM_MAX_DD=01
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ echo 2008060118 0 -g
+ ./advance_time
+ set -A GREG_DATA 148805 64800
+ DAY_GREG=148805
+ export DAY_GREG
+ SEC_GREG=64800
+ export SEC_GREG
+ echo 2008060200 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 0
+ NEXT_DAY_GREG=148806
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=0
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .false., .false.,
   inf_sd_initial_from_restart  = .false., .false.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 54001,
   last_obs_days            = 148805,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_restart_in',
   output_file_name             = 'filter_restart_out',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_restart_in',
   output_file_name             = 'filter_restart_out',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <28523> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys4962-ib>>
<<Job is finished>>
+ [[ 2008060118 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.false.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.false.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.false.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.false.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060118 -ne 2008060118 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060118/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060118/obs_seq.proc' (2013/03/14 10:27:27 3076709 bytes, 115189.3 KBS )
+ echo 2008060115 0 -g
+ ./advance_time
+ set -A temp 148805 54000
+ (( temp[1]=54000+1 ))
+ NL_FIRST_OBS_DAYS=148805
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=54001
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060121 0 -g
+ ./advance_time
+ set -A temp 148805 75600
+ NL_LAST_OBS_DAYS=148805
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=75600
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .false., .false.,
   inf_sd_initial_from_restart  = .false., .false.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 54001,
   last_obs_days            = 148805,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_restart_in',
   output_file_name             = 'filter_restart_out',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_restart_in',
   output_file_name             = 'filter_restart_out',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <28668> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys4945-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148806
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=0
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .false., .false.,
   inf_sd_initial_from_restart  = .false., .false.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 54001,
   last_obs_days            = 148805,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 14 15 52 41
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148806, sec=0
output file advance_time is now set to 2008 Jun 02 00:00:00
input file data_time was day=148805, sec=64800
input file data_time was 2008 Jun 01 18:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 14 15 53  8
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf '/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_*'
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf 'wrfinput_d01_*'
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_0_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_0_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
*** no such HPSS file: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060112/wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148806_0_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
cp: cannot stat `wrfinput_d01_148806_0_0001': No such file or directory
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf 'wrfbdy_d01_*'
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e001' (2012/12/21 13:08:02 109722988 bytes, 313259.8 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e002' (2012/12/21 13:08:03 109722988 bytes, 259639.2 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e003' (2012/12/21 13:08:04 109722988 bytes, 328427.4 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e004' (2012/12/21 13:08:05 109722988 bytes, 289224.2 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e005' (2012/12/21 13:08:07 109722988 bytes, 352735.8 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e006' (2012/12/21 13:08:08 109722988 bytes, 247765.7 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e007' (2012/12/21 13:08:09 109722988 bytes, 261766.9 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e008' (2012/12/21 13:08:10 109722988 bytes, 259541.4 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_0_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e009' (2012/12/21 13:08:11 109722988 bytes, 369194.1 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e010' (2012/12/21 13:08:13 109722988 bytes, 382953.1 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e011' (2012/12/21 13:08:14 109722988 bytes, 341311.1 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e012' (2012/12/21 13:08:15 109722988 bytes, 361628.1 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e013' (2012/12/21 13:08:16 109722988 bytes, 342199.8 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e014' (2012/12/21 13:08:17 109722988 bytes, 360409.2 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e015' (2012/12/21 13:08:19 109722988 bytes, 350949.7 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e016' (2012/12/21 13:08:20 109722988 bytes, 341821.4 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e017' (2012/12/21 13:08:21 109722988 bytes, 341250.6 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e018' (2012/12/21 13:08:22 109722988 bytes, 398001.2 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e019' (2012/12/21 13:08:23 109722988 bytes, 311945.2 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_0_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_0_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060118/wrfbdy_d01_2008-06-01_18:00:00.e020' (2012/12/21 13:08:24 109722988 bytes, 326168.2 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf 'wrfbiochemi_d01_*'
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfbiochemi_d01_2008-06-01_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-01_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfbiochemi_d01_2008-06-01_18:00:00' (2013/01/02 08:58:02 4646536 bytes, 105839.0 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf 'wrfchemi_d01*'
+ rm -rf 'wrffirechemi_d01*'
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060118
+ export LL_DATE
+ [[ 2008060118 -le 2008060200 ]]
+ echo 2008060118
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060118
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060118
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060118
+ cut -c9-10
+ LL_HH=18
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_18:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_18:00:00' (2012/12/19 11:46:26 47528760 bytes, 252334.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_18:00:00' (2012/12/19 11:46:37 4545448 bytes, 184087.2 KBS )
+ echo 2008060118 +1h
+ ./advance_time
+ LL_DATE=2008060119
+ export LL_DATE
+ [[ 2008060119 -le 2008060200 ]]
+ echo 2008060119
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060119
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060119
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060119
+ cut -c9-10
+ LL_HH=19
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_19:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_19:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_19:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_19:00:00' (2012/12/19 11:46:27 47528760 bytes, 249868.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_19:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_19:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_19:00:00' (2012/12/19 11:46:37 4545448 bytes, 140682.4 KBS )
+ echo 2008060119 +1h
+ ./advance_time
+ LL_DATE=2008060120
+ export LL_DATE
+ [[ 2008060120 -le 2008060200 ]]
+ echo 2008060120
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060120
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060120
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060120
+ cut -c9-10
+ LL_HH=20
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_20:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_20:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_20:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_20:00:00' (2012/12/19 11:46:27 47528760 bytes, 269198.1 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_20:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_20:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_20:00:00' (2012/12/19 11:46:37 4545448 bytes, 199282.8 KBS )
+ echo 2008060120 +1h
+ ./advance_time
+ LL_DATE=2008060121
+ export LL_DATE
+ [[ 2008060121 -le 2008060200 ]]
+ echo 2008060121
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060121
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060121
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060121
+ cut -c9-10
+ LL_HH=21
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_21:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_21:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_21:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_21:00:00' (2012/12/19 11:46:28 47528760 bytes, 258733.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_21:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_21:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_21:00:00' (2012/12/19 11:46:38 4545448 bytes, 395843.1 KBS )
+ echo 2008060121 +1h
+ ./advance_time
+ LL_DATE=2008060122
+ export LL_DATE
+ [[ 2008060122 -le 2008060200 ]]
+ echo 2008060122
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060122
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060122
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060122
+ cut -c9-10
+ LL_HH=22
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_22:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_22:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_22:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_22:00:00' (2012/12/19 11:46:29 47528760 bytes, 320838.9 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_22:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_22:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_22:00:00' (2012/12/19 11:46:38 4545448 bytes, 174610.2 KBS )
+ echo 2008060122 +1h
+ ./advance_time
+ LL_DATE=2008060123
+ export LL_DATE
+ [[ 2008060123 -le 2008060200 ]]
+ echo 2008060123
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060123
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060123
+ cut -c7-8
+ LL_DD=01
+ export LL_DD
+ echo 2008060123
+ cut -c9-10
+ LL_HH=23
+ export LL_HH
+ LL_FILE_DATE=2008-06-01_23:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_23:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-01_23:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrfchemi_d01_2008-06-01_23:00:00' (2012/12/19 11:46:30 47528760 bytes, 287259.1 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_23:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-01_23:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080601/wrffirechemi_d01_2008-06-01_23:00:00' (2012/12/19 11:46:38 4545448 bytes, 64255.7 KBS )
+ echo 2008060123 +1h
+ ./advance_time
+ LL_DATE=2008060200
+ export LL_DATE
+ [[ 2008060200 -le 2008060200 ]]
+ echo 2008060200
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060200
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060200
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060200
+ cut -c9-10
+ LL_HH=00
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_00:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_00:00:00' (2012/12/19 11:47:40 47528764 bytes, 334485.6 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_00:00:00' (2012/12/19 11:48:00 4545448 bytes, 171993.7 KBS )
+ echo 2008060200 +1h
+ ./advance_time
+ LL_DATE=2008060201
+ export LL_DATE
+ [[ 2008060201 -le 2008060200 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
rm: cannot remove `namelist.input': No such file or directory
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .false., .false.,
   inf_sd_initial_from_restart  = .false., .false.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 54001,
   last_obs_days            = 148805,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28761> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28762> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28763> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28764> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28765> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28766> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28767> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28768> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28769> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28770> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28771> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28772> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28773> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28774> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28775> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28776> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28777> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28778> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28779> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <28780> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-01_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-01_18:00:00 wrfout_d01_2008-06-01_18:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-02_00:00:00 wrfapm_d01_2008-06-02_00:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 60 seconds
HPSS recovered from EIO error after retry
HPSS recovered from EIO error after retry
HPSS EIO error, will retry in 60 seconds
HPSS EIO error, will retry in 60 seconds
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 23.2 KBS (cos=2011))
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 3110.7 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 115516.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 80014.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 131477.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 162927.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 175425.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 169190.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 158217.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 101834.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 50292.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 178856.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 199699.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 229290.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 188620.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 116546.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 60226.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 178768.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 221487.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 178838.6 KBS (cos=2012))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 3076709 bytes, 50134.6 KBS (cos=2011))
put  'dart_filter/index.html' : 'index.html' ( 14112 bytes, 3547.5 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 177002.0 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 109689.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 113224.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 171606.2 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 52462.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 130912.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 186129.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 84922.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 159433.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 156957.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 85779.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 80138.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 74212.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 44271.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 121602.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 95782.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 92632.0 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 4139159 bytes, 28389.5 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 44624.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 56291.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 42317.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 112727.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 64002.1 KBS (cos=2012))
HPSS recovered from EIO error after retry
HPSS recovered from EIO error after retry
HPSS EIO error, will retry in 360 seconds
put  'dart_filter/input.nml' : 'input.nml' ( 19413 bytes, 3478.5 KBS (cos=2011))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 77018.2 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 67162.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 71732.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 109790.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 86200.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 79356.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 76173.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 99411.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 181204.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 52830.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 171038.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 128502.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 203925.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 133633.6 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 54823.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 154709.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 111269.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 53132.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 165320.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 85818.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 108625.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 117707.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 185150.5 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 195175.8 KBS (cos=2012))
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 30020.9 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 175.6 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3658 bytes, 793.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19415 bytes, 1085.8 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24302.9 KBS (cos=2011))
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 130706.1 KBS (cos=2012))
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 28151.5 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19415 bytes, 1942.1 KBS (cos=2011))
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3658 bytes, 784.5 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 347.2 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24618.0 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 133958.7 KBS (cos=2012))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 776.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 30739.1 KBS (cos=2011))
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19415 bytes, 4409.4 KBS (cos=2011))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3658 bytes, 436.6 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10994.8 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 178816.7 KBS (cos=2012))
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 15803.1 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 471.7 KBS (cos=2011))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3658 bytes, 397.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19415 bytes, 3215.4 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7660.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 198853.6 KBS (cos=2012))
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 20282.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19415 bytes, 1571.1 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 602.1 KBS (cos=2011))
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3658 bytes, 169.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 15966.1 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 207581.1 KBS (cos=2012))
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 33592.6 KBS (cos=2011))
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3658 bytes, 786.8 KBS (cos=2011))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19415 bytes, 4798.6 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 686.4 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17091.8 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 198131.2 KBS (cos=2012))
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27267.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 596.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3658 bytes, 240.8 KBS (cos=2011))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19415 bytes, 4524.5 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 12014.9 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 143232.0 KBS (cos=2012))
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 26224.6 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19415 bytes, 4037.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 842.6 KBS (cos=2011))
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3658 bytes, 487.9 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22191.1 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 199928.0 KBS (cos=2012))
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 28233.7 KBS (cos=2011))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3658 bytes, 161.1 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 149.2 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19415 bytes, 2351.9 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8411.3 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 167886.4 KBS (cos=2012))
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24817.9 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 626.1 KBS (cos=2011))
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19415 bytes, 4510.0 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3658 bytes, 879.9 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 19603.5 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 71405.0 KBS (cos=2012))
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 30788.3 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19415 bytes, 1029.0 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 609.4 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3658 bytes, 1038.6 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7433.9 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 189382.0 KBS (cos=2012))
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 26549.7 KBS (cos=2011))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3658 bytes, 351.7 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 842.0 KBS (cos=2011))
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19415 bytes, 4519.3 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10238.5 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 122049.9 KBS (cos=2012))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19415 bytes, 2007.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24768.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3658 bytes, 308.2 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 650.1 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22667.8 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 173477.0 KBS (cos=2012))
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 38163.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3658 bytes, 210.4 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19415 bytes, 3271.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 688.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22783.1 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 119572.2 KBS (cos=2012))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 422.8 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27903.5 KBS (cos=2011))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19415 bytes, 1134.4 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3658 bytes, 1013.0 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8318.2 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 193499.2 KBS (cos=2012))
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 36037.7 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19415 bytes, 4041.5 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 510.2 KBS (cos=2011))
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3658 bytes, 507.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 4565.8 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 114198.5 KBS (cos=2012))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31172.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19415 bytes, 3054.6 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 759.2 KBS (cos=2011))
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3658 bytes, 321.2 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8442.1 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 202931.8 KBS (cos=2012))
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 34572.5 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 530.9 KBS (cos=2011))
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19415 bytes, 3158.5 KBS (cos=2011))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3658 bytes, 669.2 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17600.7 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 89978.9 KBS (cos=2012))
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17087.5 KBS (cos=2011))
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3658 bytes, 339.4 KBS (cos=2011))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19415 bytes, 3809.9 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 730.0 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 19005.2 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 186225.2 KBS (cos=2012))
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 44221.6 KBS (cos=2011))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19415 bytes, 1125.4 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3658 bytes, 407.9 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 855.8 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 9197.0 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 101880.9 KBS (cos=2012))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0001' : 'wrfapm_d01_2008-06-02_00:00:00_0001' ( 451038888 bytes, 165601.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 441849296 bytes, 166062.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0001' : 'wrfout_d01_2008-06-02_00:00:00_0001' ( 781360936 bytes, 160108.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0001' : 'wrfout_d01_2008-06-01_18:00:00_0001' ( 781360936 bytes, 145773.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 441849296 bytes, 64531.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0002' : 'wrfapm_d01_2008-06-02_00:00:00_0002' ( 451038888 bytes, 190388.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 441849296 bytes, 184781.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0002' : 'wrfout_d01_2008-06-01_18:00:00_0002' ( 781360936 bytes, 143903.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0002' : 'wrfout_d01_2008-06-02_00:00:00_0002' ( 781360936 bytes, 142222.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 441849296 bytes, 135866.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0003' : 'wrfapm_d01_2008-06-02_00:00:00_0003' ( 451038888 bytes, 106951.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0004' : 'wrfout_d01_2008-06-01_18:00:00_0004' ( 781360936 bytes, 160038.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0003' : 'wrfout_d01_2008-06-01_18:00:00_0003' ( 781360936 bytes, 119885.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0003' : 'wrfout_d01_2008-06-02_00:00:00_0003' ( 781360936 bytes, 115940.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0004' : 'wrfapm_d01_2008-06-02_00:00:00_0004' ( 451038888 bytes, 160424.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 441849296 bytes, 190334.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0004' : 'wrfout_d01_2008-06-02_00:00:00_0004' ( 781360936 bytes, 169736.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0005' : 'wrfapm_d01_2008-06-02_00:00:00_0005' ( 451038888 bytes, 169256.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 441849296 bytes, 193467.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0005' : 'wrfout_d01_2008-06-02_00:00:00_0005' ( 781360936 bytes, 195594.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0006' : 'wrfapm_d01_2008-06-02_00:00:00_0006' ( 451038888 bytes, 130879.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0006' : 'wrfout_d01_2008-06-01_18:00:00_0006' ( 781360936 bytes, 117455.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 441849296 bytes, 96628.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0005' : 'wrfout_d01_2008-06-01_18:00:00_0005' ( 781360936 bytes, 72947.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0006' : 'wrfout_d01_2008-06-02_00:00:00_0006' ( 781360936 bytes, 109291.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0007' : 'wrfout_d01_2008-06-01_18:00:00_0007' ( 781360936 bytes, 180058.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 441849296 bytes, 143932.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0007' : 'wrfout_d01_2008-06-02_00:00:00_0007' ( 781360936 bytes, 167743.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0007' : 'wrfapm_d01_2008-06-02_00:00:00_0007' ( 451038888 bytes, 80636.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0008' : 'wrfapm_d01_2008-06-02_00:00:00_0008' ( 451038888 bytes, 189113.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0008' : 'wrfout_d01_2008-06-01_18:00:00_0008' ( 781360936 bytes, 139235.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0008' : 'wrfout_d01_2008-06-02_00:00:00_0008' ( 781360936 bytes, 160785.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 441849296 bytes, 83593.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0009' : 'wrfapm_d01_2008-06-02_00:00:00_0009' ( 451038888 bytes, 165790.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 441849296 bytes, 170032.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0009' : 'wrfout_d01_2008-06-02_00:00:00_0009' ( 781360936 bytes, 161559.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0010' : 'wrfapm_d01_2008-06-02_00:00:00_0010' ( 451038888 bytes, 124895.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0009' : 'wrfout_d01_2008-06-01_18:00:00_0009' ( 781360936 bytes, 86239.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0010' : 'wrfout_d01_2008-06-02_00:00:00_0010' ( 781360936 bytes, 145283.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 441849296 bytes, 109618.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0010' : 'wrfout_d01_2008-06-01_18:00:00_0010' ( 781360936 bytes, 102255.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0011' : 'wrfout_d01_2008-06-02_00:00:00_0011' ( 781360936 bytes, 204909.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0011' : 'wrfout_d01_2008-06-01_18:00:00_0011' ( 781360936 bytes, 176183.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0011' : 'wrfapm_d01_2008-06-02_00:00:00_0011' ( 451038888 bytes, 138595.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 441849296 bytes, 126924.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0012' : 'wrfapm_d01_2008-06-02_00:00:00_0012' ( 451038888 bytes, 174045.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0012' : 'wrfout_d01_2008-06-02_00:00:00_0012' ( 781360936 bytes, 195420.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 441849296 bytes, 126273.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0012' : 'wrfout_d01_2008-06-01_18:00:00_0012' ( 781360936 bytes, 136479.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0013' : 'wrfapm_d01_2008-06-02_00:00:00_0013' ( 451038888 bytes, 127213.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0013' : 'wrfout_d01_2008-06-01_18:00:00_0013' ( 781360936 bytes, 114078.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 441849296 bytes, 108618.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0013' : 'wrfout_d01_2008-06-02_00:00:00_0013' ( 781360936 bytes, 107641.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0014' : 'wrfapm_d01_2008-06-02_00:00:00_0014' ( 451038888 bytes, 104499.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 441849296 bytes, 105165.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0014' : 'wrfout_d01_2008-06-02_00:00:00_0014' ( 781360936 bytes, 139218.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0014' : 'wrfout_d01_2008-06-01_18:00:00_0014' ( 781360936 bytes, 73102.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 441849296 bytes, 145478.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0015' : 'wrfapm_d01_2008-06-02_00:00:00_0015' ( 451038888 bytes, 101638.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0015' : 'wrfout_d01_2008-06-02_00:00:00_0015' ( 781360936 bytes, 113007.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0015' : 'wrfout_d01_2008-06-01_18:00:00_0015' ( 781360936 bytes, 85010.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0016' : 'wrfout_d01_2008-06-02_00:00:00_0016' ( 781360936 bytes, 192446.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0016' : 'wrfapm_d01_2008-06-02_00:00:00_0016' ( 451038888 bytes, 118069.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0016' : 'wrfout_d01_2008-06-01_18:00:00_0016' ( 781360936 bytes, 113222.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 441849296 bytes, 127966.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0017' : 'wrfapm_d01_2008-06-02_00:00:00_0017' ( 451038888 bytes, 117697.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0017' : 'wrfout_d01_2008-06-02_00:00:00_0017' ( 781360936 bytes, 185650.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 441849296 bytes, 128806.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0017' : 'wrfout_d01_2008-06-01_18:00:00_0017' ( 781360936 bytes, 125151.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0018' : 'wrfapm_d01_2008-06-02_00:00:00_0018' ( 451038888 bytes, 162498.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 441849296 bytes, 139714.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0018' : 'wrfout_d01_2008-06-01_18:00:00_0018' ( 781360936 bytes, 122651.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0018' : 'wrfout_d01_2008-06-02_00:00:00_0018' ( 781360936 bytes, 101995.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0019' : 'wrfapm_d01_2008-06-02_00:00:00_0019' ( 451038888 bytes, 98951.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 441849296 bytes, 82967.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0019' : 'wrfout_d01_2008-06-01_18:00:00_0019' ( 781360936 bytes, 72638.1 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 2037.5 KBS (cos=2011))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0019' : 'wrfout_d01_2008-06-02_00:00:00_0019' ( 781360936 bytes, 84180.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_00:00:00_0020' : 'wrfapm_d01_2008-06-02_00:00:00_0020' ( 451038888 bytes, 104425.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-01_18:00:00_0020' : 'wrfout_d01_2008-06-01_18:00:00_0020' ( 781360936 bytes, 93927.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0020' : 'wrfout_d01_2008-06-02_00:00:00_0020' ( 781360936 bytes, 100222.7 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060200
+ export L_DATE
+ [[ 2008060200 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060200
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060200
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060200
+ cut -c7-8
+ L_DD=02
+ export L_DD
+ echo 2008060200
+ cut -c9-10
+ L_HH=00
+ export L_HH
+ L_FILE_DATE=2008-06-02_00:00:00
+ export L_FILE_DATE
+ echo 2008060200 -6h
+ ./advance_time
+ PAST_DATE=2008060118
+ export PAST_DATE
+ echo 2008060118
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060118
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060118
+ cut -c7-8
+ PAST_DD=01
+ export PAST_DD
+ echo 2008060118
+ cut -c9-10
+ PAST_HH=18
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-01_18:00:00
+ export PAST_FILE_DATE
+ echo 2008060200 +6h
+ ./advance_time
+ NEXT_DATE=2008060206
+ export NEXT_DATE
+ echo 2008060206
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060206
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060206
+ cut -c7-8
+ NEXT_DD=02
+ export NEXT_DD
+ echo 2008060206
+ cut -c9-10
+ NEXT_HH=06
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-02_06:00:00
+ export NEXT_FILE_DATE
+ echo 2008060200 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060121
+ export ASIM_MIN_DATE
+ echo 2008060121
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060121
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060121
+ cut -c7-8
+ ASIM_MIN_DD=01
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060200 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060203
+ export ASIM_MAX_DATE
+ echo 2008060203
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060203
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060203
+ cut -c7-8
+ ASIM_MAX_DD=02
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ ./advance_time
+ set -A GREG_DATA 148806 0
+ DAY_GREG=148806
+ export DAY_GREG
+ SEC_GREG=0
+ export SEC_GREG
+ echo 2008060206 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 21600
+ NEXT_DAY_GREG=148806
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=21600
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .false., .false.,
   inf_sd_initial_from_restart  = .false., .false.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 54001,
   last_obs_days            = 148805,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 54001,
   last_obs_days                = 148805,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <29433> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys5733-ib>>
<<Job is finished>>
+ [[ 2008060200 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060200 -ne 2008060118 ]]
+ [[ 2 != 0 ]]
+ INF_OUT_FILE_NAME_PRIOR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/prior_inflate_ic_new
+ export INF_OUT_FILE_NAME_PRIOR
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060118/dart_filter/prior_inflate_ic_new prior_inflate_ic_old
+ [[ 0 != 0 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060200/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060200/obs_seq.proc' (2013/03/14 10:27:34 3007268 bytes, 165517.1 KBS )
+ echo 2008060121 0 -g
+ ./advance_time
+ set -A temp 148805 75600
+ (( temp[1]=75600+1 ))
+ NL_FIRST_OBS_DAYS=148805
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=75601
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060203 0 -g
+ ./advance_time
+ set -A temp 148806 10800
+ NL_LAST_OBS_DAYS=148806
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=10800
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 75601,
   last_obs_days            = 148806,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <30953> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys0111-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148806
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=21600
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 75601,
   last_obs_days            = 148806,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 14 23 14 52
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148806, sec=21600
output file advance_time is now set to 2008 Jun 02 06:00:00
input file data_time was day=148806, sec=0
input file data_time was 2008 Jun 02 00:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 14 23 15  8
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf 'wrfinput_d01_*'
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0001' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0001' (2013/03/14 17:27:25 781360936 bytes, 404665.9 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0002' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0002' (2013/03/14 17:27:29 781360936 bytes, 414016.8 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0003' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0003' (2013/03/14 17:27:35 781360936 bytes, 450289.5 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0004' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0004' (2013/03/14 17:27:36 781360936 bytes, 424925.9 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0005' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0005' (2013/03/14 17:27:39 781360936 bytes, 407903.0 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0006' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0006' (2013/03/14 17:27:46 781360936 bytes, 430423.6 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0007' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0007' (2013/03/14 17:27:48 781360936 bytes, 427197.8 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0008' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0008' (2013/03/14 17:27:52 781360936 bytes, 294622.7 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_21600_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0009' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0009' (2013/03/14 17:27:56 781360936 bytes, 505758.2 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0010' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0010' (2013/03/14 17:28:00 781360936 bytes, 485989.9 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0011' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0011' (2013/03/14 17:28:02 781360936 bytes, 382828.1 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0012' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0012' (2013/03/14 17:28:07 781360936 bytes, 321945.3 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0013' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0013' (2013/03/14 17:28:13 781360936 bytes, 419579.4 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0014' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0014' (2013/03/14 17:28:16 781360936 bytes, 279625.3 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0015' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0015' (2013/03/14 17:28:22 781360936 bytes, 433509.5 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0016' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0016' (2013/03/14 17:28:24 781360936 bytes, 300107.8 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0017' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0017' (2013/03/14 17:28:28 781360936 bytes, 314661.0 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0018' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0018' (2013/03/14 17:28:36 781360936 bytes, 419206.9 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0019' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0019' (2013/03/14 17:28:40 781360936 bytes, 258881.9 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_21600_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_21600_0020' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060118/wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0020' (2013/03/14 17:28:45 781360936 bytes, 413222.8 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148806_21600_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfbdy_d01_148806_0_0001 wrfbdy_d01_148806_0_0002 wrfbdy_d01_148806_0_0003 wrfbdy_d01_148806_0_0004 wrfbdy_d01_148806_0_0005 wrfbdy_d01_148806_0_0006 wrfbdy_d01_148806_0_0007 wrfbdy_d01_148806_0_0008 wrfbdy_d01_148806_0_0009 wrfbdy_d01_148806_0_0010 wrfbdy_d01_148806_0_0011 wrfbdy_d01_148806_0_0012 wrfbdy_d01_148806_0_0013 wrfbdy_d01_148806_0_0014 wrfbdy_d01_148806_0_0015 wrfbdy_d01_148806_0_0016 wrfbdy_d01_148806_0_0017 wrfbdy_d01_148806_0_0018 wrfbdy_d01_148806_0_0019 wrfbdy_d01_148806_0_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e001' (2012/12/21 13:19:29 109722992 bytes, 297097.2 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e002' (2012/12/21 13:19:30 109722992 bytes, 333588.7 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e003' (2012/12/21 13:19:31 109722992 bytes, 328947.4 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e004' (2012/12/21 13:19:32 109722992 bytes, 322972.0 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e005' (2012/12/21 13:19:34 109722992 bytes, 277070.0 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e006' (2012/12/21 13:19:35 109722992 bytes, 336945.7 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e007' (2012/12/21 13:19:36 109722992 bytes, 312987.1 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e008' (2012/12/21 13:19:37 109722992 bytes, 207147.2 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_21600_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e009' (2012/12/21 13:19:38 109722992 bytes, 334790.6 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e010' (2012/12/21 13:19:39 109722992 bytes, 207243.5 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e011' (2012/12/21 13:19:40 109722992 bytes, 315208.2 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e012' (2012/12/21 13:19:41 109722992 bytes, 198661.9 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e013' (2012/12/21 13:19:42 109722992 bytes, 344298.1 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e014' (2012/12/21 13:19:44 109722992 bytes, 204761.4 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e015' (2012/12/21 13:19:45 109722992 bytes, 170061.5 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e016' (2012/12/21 13:19:48 109722992 bytes, 148771.5 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e017' (2012/12/21 13:19:49 109722992 bytes, 328694.2 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e018' (2012/12/21 13:19:51 109722992 bytes, 332502.9 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e019' (2012/12/21 13:19:52 109722992 bytes, 211695.4 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_21600_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_21600_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060200/wrfbdy_d01_2008-06-02_00:00:00.e020' (2012/12/21 13:19:53 109722992 bytes, 305550.9 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfbiochemi_d01_2008-06-01_18:00:00
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-02_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_00:00:00' (2013/01/02 08:58:03 4646536 bytes, 83400.0 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfchemi_d01_2008-06-01_18:00:00 wrfchemi_d01_2008-06-01_19:00:00 wrfchemi_d01_2008-06-01_20:00:00 wrfchemi_d01_2008-06-01_21:00:00 wrfchemi_d01_2008-06-01_22:00:00 wrfchemi_d01_2008-06-01_23:00:00 wrfchemi_d01_2008-06-02_00:00:00
+ rm -rf wrffirechemi_d01_2008-06-01_18:00:00 wrffirechemi_d01_2008-06-01_19:00:00 wrffirechemi_d01_2008-06-01_20:00:00 wrffirechemi_d01_2008-06-01_21:00:00 wrffirechemi_d01_2008-06-01_22:00:00 wrffirechemi_d01_2008-06-01_23:00:00 wrffirechemi_d01_2008-06-02_00:00:00
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060200
+ export LL_DATE
+ [[ 2008060200 -le 2008060206 ]]
+ echo 2008060200
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060200
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060200
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060200
+ cut -c9-10
+ LL_HH=00
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_00:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_00:00:00' (2012/12/19 11:47:40 47528764 bytes, 391134.8 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_00:00:00' (2012/12/19 11:48:00 4545448 bytes, 56812.4 KBS )
+ echo 2008060200 +1h
+ ./advance_time
+ LL_DATE=2008060201
+ export LL_DATE
+ [[ 2008060201 -le 2008060206 ]]
+ echo 2008060201
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060201
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060201
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060201
+ cut -c9-10
+ LL_HH=01
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_01:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_01:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_01:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_01:00:00' (2012/12/19 11:47:41 47528764 bytes, 79408.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_01:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_01:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_01:00:00' (2012/12/19 11:48:01 4545448 bytes, 74735.1 KBS )
+ ./advance_time
+ echo 2008060201 +1h
+ LL_DATE=2008060202
+ export LL_DATE
+ [[ 2008060202 -le 2008060206 ]]
+ echo 2008060202
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060202
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060202
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060202
+ cut -c9-10
+ LL_HH=02
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_02:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_02:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_02:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_02:00:00' (2012/12/19 11:47:41 47528764 bytes, 80003.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_02:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_02:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_02:00:00' (2012/12/19 11:48:01 4545448 bytes, 106650.1 KBS )
+ echo 2008060202 +1h
+ ./advance_time
+ LL_DATE=2008060203
+ export LL_DATE
+ [[ 2008060203 -le 2008060206 ]]
+ echo 2008060203
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060203
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060203
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060203
+ cut -c9-10
+ LL_HH=03
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_03:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_03:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_03:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_03:00:00' (2012/12/19 11:47:42 47528764 bytes, 253994.8 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_03:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_03:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_03:00:00' (2012/12/19 11:48:01 4545448 bytes, 37876.2 KBS )
+ ./advance_time
+ echo 2008060203 +1h
+ LL_DATE=2008060204
+ export LL_DATE
+ [[ 2008060204 -le 2008060206 ]]
+ echo 2008060204
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060204
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060204
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060204
+ cut -c9-10
+ LL_HH=04
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_04:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_04:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_04:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_04:00:00' (2012/12/19 11:47:43 47528764 bytes, 171502.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_04:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_04:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_04:00:00' (2012/12/19 11:48:02 4545448 bytes, 131359.5 KBS )
+ echo 2008060204 +1h
+ ./advance_time
+ LL_DATE=2008060205
+ export LL_DATE
+ [[ 2008060205 -le 2008060206 ]]
+ echo 2008060205
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060205
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060205
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060205
+ cut -c9-10
+ LL_HH=05
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_05:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_05:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_05:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_05:00:00' (2012/12/19 11:47:43 47528764 bytes, 256690.3 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_05:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_05:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_05:00:00' (2012/12/19 11:48:02 4545448 bytes, 122830.4 KBS )
+ echo 2008060205 +1h
+ ./advance_time
+ LL_DATE=2008060206
+ export LL_DATE
+ [[ 2008060206 -le 2008060206 ]]
+ echo 2008060206
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060206
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060206
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060206
+ cut -c9-10
+ LL_HH=06
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_06:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_06:00:00' (2012/12/19 11:47:44 47528764 bytes, 229622.9 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_06:00:00' (2012/12/19 11:48:02 4545448 bytes, 119391.2 KBS )
+ echo 2008060206 +1h
+ ./advance_time
+ LL_DATE=2008060207
+ export LL_DATE
+ [[ 2008060207 -le 2008060206 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 75601,
   last_obs_days            = 148806,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ rm -rf filter_control_0001
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30987> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ rm -rf filter_control_0002
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30988> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ rm -rf filter_control_0003
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30989> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ rm -rf filter_control_0004
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30990> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ rm -rf filter_control_0005
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30991> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ rm -rf filter_control_0006
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30992> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ rm -rf filter_control_0007
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30993> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ rm -rf filter_control_0008
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30994> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ rm -rf filter_control_0009
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30995> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ rm -rf filter_control_0010
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30996> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ rm -rf filter_control_0011
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30997> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ rm -rf filter_control_0012
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30998> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ rm -rf filter_control_0013
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <30999> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ rm -rf filter_control_0014
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31000> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ rm -rf filter_control_0015
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31001> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ rm -rf filter_control_0016
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31002> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ rm -rf filter_control_0017
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31003> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ rm -rf filter_control_0018
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31004> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ rm -rf filter_control_0019
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31005> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ rm -rf filter_control_0020
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31006> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_00:00:00 wrfout_d01_2008-06-02_00:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-02_06:00:00 wrfapm_d01_2008-06-02_06:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200
put  'dart_filter/input.nml' : 'input.nml' ( 19417 bytes, 3680.3 KBS (cos=2011))
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 2680.1 KBS (cos=2011))
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 24.4 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 154054.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 108821.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 70365.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 165643.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 70407.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 170010.3 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 141832.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 102264.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 108878.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 178416.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 166841.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 54685.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 108103.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 54431.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 134265.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 113345.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 127990.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 176136.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 76383.6 KBS (cos=2012))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 3007268 bytes, 38608.3 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 173750.3 KBS (cos=2012))
put  'dart_filter/index.html' : 'index.html' ( 14527 bytes, 2712.9 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 75636.7 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_old' : 'prior_inflate_ic_old' ( 488787408 bytes, 111967.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 80929.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 58971.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 176394.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 176828.2 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 87952.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 171748.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 127870.1 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 69724.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 172552.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 85961.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 111744.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 179980.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 128999.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 95621.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 177656.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 276823.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 87085.4 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 4452843 bytes, 40093.3 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 102747.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 184711.4 KBS (cos=2012))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 180275.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 95959.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 251687.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 175032.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 84714.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 179870.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 92076.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 178056.5 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 119245.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 187565.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 108582.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 183100.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 100927.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 176156.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 98989.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 115467.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 183747.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 93505.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 93044.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 209476.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 91215.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 169010.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 108215.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 114664.3 KBS (cos=2012))
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23375.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19413 bytes, 4610.1 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 286.8 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3654 bytes, 867.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7538.1 KBS (cos=2011))
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 83985.2 KBS (cos=2012))
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17976.6 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 66.8 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19413 bytes, 2610.7 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3654 bytes, 689.3 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 12584.3 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 218855.9 KBS (cos=2012))
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 34402.3 KBS (cos=2011))
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19413 bytes, 3059.1 KBS (cos=2011))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3654 bytes, 795.9 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 715.6 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5027.5 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 121818.9 KBS (cos=2012))
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21106.4 KBS (cos=2011))
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19413 bytes, 4043.7 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 615.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3654 bytes, 502.3 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 20483.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 193322.0 KBS (cos=2012))
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31364.9 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 406.3 KBS (cos=2011))
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3654 bytes, 629.2 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19413 bytes, 3341.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 11823.6 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 151276.3 KBS (cos=2012))
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24499.3 KBS (cos=2011))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19413 bytes, 2081.8 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 246.5 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3654 bytes, 797.3 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21154.5 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 204140.2 KBS (cos=2012))
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24694.0 KBS (cos=2011))
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3654 bytes, 718.6 KBS (cos=2011))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19413 bytes, 4398.0 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 794.7 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14451.0 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 206225.1 KBS (cos=2012))
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 14148.9 KBS (cos=2011))
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3654 bytes, 213.6 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 794.0 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19413 bytes, 763.6 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14860.5 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 182087.9 KBS (cos=2012))
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31955.1 KBS (cos=2011))
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19413 bytes, 741.4 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 188.2 KBS (cos=2011))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3654 bytes, 846.8 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21264.0 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 183095.6 KBS (cos=2012))
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27403.2 KBS (cos=2011))
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19413 bytes, 1125.1 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 506.5 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3654 bytes, 798.9 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21571.4 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 195198.2 KBS (cos=2012))
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 33216.9 KBS (cos=2011))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3654 bytes, 638.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 420.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19413 bytes, 873.0 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 3067.7 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 165661.3 KBS (cos=2012))
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 32599.3 KBS (cos=2011))
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19413 bytes, 5280.8 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3654 bytes, 400.8 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 131.3 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 28337.6 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 189998.9 KBS (cos=2012))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19413 bytes, 1331.0 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 47220.1 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 473.2 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3654 bytes, 450.3 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22039.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 144977.7 KBS (cos=2012))
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23864.1 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3654 bytes, 906.9 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 657.0 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19413 bytes, 4039.3 KBS (cos=2011))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24318.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 157786.4 KBS (cos=2012))
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 35232.0 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 709.8 KBS (cos=2011))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19413 bytes, 4391.1 KBS (cos=2011))
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3654 bytes, 956.0 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 1490.3 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 183161.6 KBS (cos=2012))
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 32048.8 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19413 bytes, 3715.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 659.1 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3654 bytes, 754.8 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24777.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 159524.3 KBS (cos=2012))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 33417.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 708.4 KBS (cos=2011))
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19413 bytes, 3965.1 KBS (cos=2011))
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3654 bytes, 285.5 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7046.6 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 194884.1 KBS (cos=2012))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 559.3 KBS (cos=2011))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3654 bytes, 298.0 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 33703.4 KBS (cos=2011))
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19413 bytes, 2058.4 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21839.3 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 200885.0 KBS (cos=2012))
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 32370.9 KBS (cos=2011))
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3654 bytes, 374.7 KBS (cos=2011))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19413 bytes, 3531.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 785.8 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14435.2 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 194498.6 KBS (cos=2012))
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31524.5 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 755.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19413 bytes, 4115.4 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3654 bytes, 757.6 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 23209.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 165437.8 KBS (cos=2012))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0001' : 'wrfout_d01_2008-06-02_00:00:00_0001' ( 781360936 bytes, 211235.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 781360936 bytes, 202458.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0001' : 'wrfapm_d01_2008-06-02_06:00:00_0001' ( 451038888 bytes, 100177.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 781360936 bytes, 179975.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0002' : 'wrfout_d01_2008-06-02_00:00:00_0002' ( 781360936 bytes, 195934.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0002' : 'wrfapm_d01_2008-06-02_06:00:00_0002' ( 451038888 bytes, 114759.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0002' : 'wrfout_d01_2008-06-02_06:00:00_0002' ( 781360936 bytes, 159249.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0001' : 'wrfout_d01_2008-06-02_06:00:00_0001' ( 781360936 bytes, 84762.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0003' : 'wrfapm_d01_2008-06-02_06:00:00_0003' ( 451038888 bytes, 189259.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 781360936 bytes, 108206.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0003' : 'wrfout_d01_2008-06-02_00:00:00_0003' ( 781360936 bytes, 151892.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0004' : 'wrfout_d01_2008-06-02_06:00:00_0004' ( 781360936 bytes, 206993.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0004' : 'wrfout_d01_2008-06-02_00:00:00_0004' ( 781360936 bytes, 178496.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0003' : 'wrfout_d01_2008-06-02_06:00:00_0003' ( 781360936 bytes, 102348.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0004' : 'wrfapm_d01_2008-06-02_06:00:00_0004' ( 451038888 bytes, 121964.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 781360936 bytes, 92587.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0005' : 'wrfapm_d01_2008-06-02_06:00:00_0005' ( 451038888 bytes, 202547.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 781360936 bytes, 214082.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0005' : 'wrfout_d01_2008-06-02_00:00:00_0005' ( 781360936 bytes, 205494.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0006' : 'wrfapm_d01_2008-06-02_06:00:00_0006' ( 451038888 bytes, 198392.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0005' : 'wrfout_d01_2008-06-02_06:00:00_0005' ( 781360936 bytes, 122638.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 781360936 bytes, 132180.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0006' : 'wrfout_d01_2008-06-02_06:00:00_0006' ( 781360936 bytes, 182117.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0007' : 'wrfapm_d01_2008-06-02_06:00:00_0007' ( 451038888 bytes, 183272.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0006' : 'wrfout_d01_2008-06-02_00:00:00_0006' ( 781360936 bytes, 84994.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 781360936 bytes, 134637.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0007' : 'wrfout_d01_2008-06-02_00:00:00_0007' ( 781360936 bytes, 125597.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0007' : 'wrfout_d01_2008-06-02_06:00:00_0007' ( 781360936 bytes, 134758.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 781360936 bytes, 198711.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0008' : 'wrfapm_d01_2008-06-02_06:00:00_0008' ( 451038888 bytes, 115301.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0008' : 'wrfout_d01_2008-06-02_06:00:00_0008' ( 781360936 bytes, 162167.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0009' : 'wrfout_d01_2008-06-02_00:00:00_0009' ( 781360936 bytes, 155057.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0009' : 'wrfapm_d01_2008-06-02_06:00:00_0009' ( 451038888 bytes, 192415.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0008' : 'wrfout_d01_2008-06-02_00:00:00_0008' ( 781360936 bytes, 97603.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 781360936 bytes, 113278.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0009' : 'wrfout_d01_2008-06-02_06:00:00_0009' ( 781360936 bytes, 201308.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0010' : 'wrfapm_d01_2008-06-02_06:00:00_0010' ( 451038888 bytes, 121902.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 781360936 bytes, 165620.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0010' : 'wrfout_d01_2008-06-02_00:00:00_0010' ( 781360936 bytes, 156904.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 781360936 bytes, 159877.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0011' : 'wrfapm_d01_2008-06-02_06:00:00_0011' ( 451038888 bytes, 104571.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0010' : 'wrfout_d01_2008-06-02_06:00:00_0010' ( 781360936 bytes, 81308.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 781360936 bytes, 198371.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0011' : 'wrfout_d01_2008-06-02_06:00:00_0011' ( 781360936 bytes, 141455.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0011' : 'wrfout_d01_2008-06-02_00:00:00_0011' ( 781360936 bytes, 118068.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0012' : 'wrfout_d01_2008-06-02_00:00:00_0012' ( 781360936 bytes, 194903.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0012' : 'wrfout_d01_2008-06-02_06:00:00_0012' ( 781360936 bytes, 185701.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 781360936 bytes, 138276.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0012' : 'wrfapm_d01_2008-06-02_06:00:00_0012' ( 451038888 bytes, 68233.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0013' : 'wrfapm_d01_2008-06-02_06:00:00_0013' ( 451038888 bytes, 193537.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0013' : 'wrfout_d01_2008-06-02_06:00:00_0013' ( 781360936 bytes, 128690.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 781360936 bytes, 188798.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0013' : 'wrfout_d01_2008-06-02_00:00:00_0013' ( 781360936 bytes, 79336.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0014' : 'wrfout_d01_2008-06-02_06:00:00_0014' ( 781360936 bytes, 131976.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0014' : 'wrfapm_d01_2008-06-02_06:00:00_0014' ( 451038888 bytes, 155576.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0014' : 'wrfout_d01_2008-06-02_00:00:00_0014' ( 781360936 bytes, 90119.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0015' : 'wrfapm_d01_2008-06-02_06:00:00_0015' ( 451038888 bytes, 131501.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 781360936 bytes, 94396.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0015' : 'wrfout_d01_2008-06-02_00:00:00_0015' ( 781360936 bytes, 103806.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0016' : 'wrfapm_d01_2008-06-02_06:00:00_0016' ( 451038888 bytes, 184748.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0015' : 'wrfout_d01_2008-06-02_06:00:00_0015' ( 781360936 bytes, 71385.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 781360936 bytes, 220287.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0016' : 'wrfout_d01_2008-06-02_06:00:00_0016' ( 781360936 bytes, 122211.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0016' : 'wrfout_d01_2008-06-02_00:00:00_0016' ( 781360936 bytes, 79775.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0017' : 'wrfapm_d01_2008-06-02_06:00:00_0017' ( 451038888 bytes, 195281.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0017' : 'wrfout_d01_2008-06-02_06:00:00_0017' ( 781360936 bytes, 197116.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0018' : 'wrfout_d01_2008-06-02_00:00:00_0018' ( 781360936 bytes, 238704.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 781360936 bytes, 130294.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 781360936 bytes, 44811.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0018' : 'wrfout_d01_2008-06-02_06:00:00_0018' ( 781360936 bytes, 181826.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0018' : 'wrfapm_d01_2008-06-02_06:00:00_0018' ( 451038888 bytes, 147748.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0019' : 'wrfapm_d01_2008-06-02_06:00:00_0019' ( 451038888 bytes, 203601.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0017' : 'wrfout_d01_2008-06-02_00:00:00_0017' ( 781360936 bytes, 59024.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0019' : 'wrfout_d01_2008-06-02_00:00:00_0019' ( 781360936 bytes, 133908.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 781360936 bytes, 108190.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 781360936 bytes, 187088.3 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 1043.5 KBS (cos=2011))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0020' : 'wrfout_d01_2008-06-02_06:00:00_0020' ( 781360936 bytes, 177463.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_06:00:00_0020' : 'wrfapm_d01_2008-06-02_06:00:00_0020' ( 451038888 bytes, 101578.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0019' : 'wrfout_d01_2008-06-02_06:00:00_0019' ( 781360936 bytes, 59854.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_00:00:00_0020' : 'wrfout_d01_2008-06-02_00:00:00_0020' ( 781360936 bytes, 77321.5 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060206
+ export L_DATE
+ [[ 2008060206 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060206
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060206
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060206
+ cut -c7-8
+ L_DD=02
+ export L_DD
+ echo 2008060206
+ cut -c9-10
+ L_HH=06
+ export L_HH
+ L_FILE_DATE=2008-06-02_06:00:00
+ export L_FILE_DATE
+ echo 2008060206 -6h
+ ./advance_time
+ PAST_DATE=2008060200
+ export PAST_DATE
+ echo 2008060200
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060200
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060200
+ cut -c7-8
+ PAST_DD=02
+ export PAST_DD
+ echo 2008060200
+ cut -c9-10
+ PAST_HH=00
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-02_00:00:00
+ export PAST_FILE_DATE
+ echo 2008060206 +6h
+ ./advance_time
+ NEXT_DATE=2008060212
+ export NEXT_DATE
+ echo 2008060212
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060212
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060212
+ cut -c7-8
+ NEXT_DD=02
+ export NEXT_DD
+ echo 2008060212
+ cut -c9-10
+ NEXT_HH=12
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-02_12:00:00
+ export NEXT_FILE_DATE
+ echo 2008060206 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060203
+ export ASIM_MIN_DATE
+ echo 2008060203
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060203
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060203
+ cut -c7-8
+ ASIM_MIN_DD=02
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060206 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060209
+ export ASIM_MAX_DATE
+ echo 2008060209
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060209
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060209
+ cut -c7-8
+ ASIM_MAX_DD=02
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ echo 2008060206 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 21600
+ DAY_GREG=148806
+ export DAY_GREG
+ SEC_GREG=21600
+ export SEC_GREG
+ echo 2008060212 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 43200
+ NEXT_DAY_GREG=148806
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=43200
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148805,
   first_obs_seconds        = 75601,
   last_obs_days            = 148806,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148805,
   first_obs_seconds            = 75601,
   last_obs_days                = 148806,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31336> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys0107-ib>>
<<Job is finished>>
+ [[ 2008060206 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060206 -ne 2008060118 ]]
+ [[ 2 != 0 ]]
+ INF_OUT_FILE_NAME_PRIOR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/prior_inflate_ic_new
+ export INF_OUT_FILE_NAME_PRIOR
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060200/dart_filter/prior_inflate_ic_new prior_inflate_ic_old
+ [[ 0 != 0 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060206/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060206/obs_seq.proc' (2013/03/14 10:27:40 1680350 bytes, 43402.9 KBS )
+ echo 2008060203 0 -g
+ ./advance_time
+ set -A temp 148806 10800
+ (( temp[1]=10800+1 ))
+ NL_FIRST_OBS_DAYS=148806
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=10801
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060209 0 -g
+ ./advance_time
+ set -A temp 148806 32400
+ NL_LAST_OBS_DAYS=148806
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=32400
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 10801,
   last_obs_days            = 148806,
   last_obs_seconds         = 32400,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31338> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys0112-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148806
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=43200
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 10801,
   last_obs_days            = 148806,
   last_obs_seconds         = 32400,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 14 23 57  2
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148806, sec=43200
output file advance_time is now set to 2008 Jun 02 12:00:00
input file data_time was day=148806, sec=21600
input file data_time was 2008 Jun 02 06:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 14 23 57 10
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfinput_d01_148806_21600_0001 wrfinput_d01_148806_21600_0002 wrfinput_d01_148806_21600_0003 wrfinput_d01_148806_21600_0004 wrfinput_d01_148806_21600_0005 wrfinput_d01_148806_21600_0006 wrfinput_d01_148806_21600_0007 wrfinput_d01_148806_21600_0008 wrfinput_d01_148806_21600_0009 wrfinput_d01_148806_21600_0010 wrfinput_d01_148806_21600_0011 wrfinput_d01_148806_21600_0012 wrfinput_d01_148806_21600_0013 wrfinput_d01_148806_21600_0014 wrfinput_d01_148806_21600_0015 wrfinput_d01_148806_21600_0016 wrfinput_d01_148806_21600_0017 wrfinput_d01_148806_21600_0018 wrfinput_d01_148806_21600_0019 wrfinput_d01_148806_21600_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0001' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0001' (2013/03/14 23:50:54 781360936 bytes, 416853.9 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0002' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0002' (2013/03/14 23:50:53 781360936 bytes, 374867.6 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0003' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0003' (2013/03/14 23:51:01 781360936 bytes, 247765.2 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0004' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0004' (2013/03/14 23:51:00 781360936 bytes, 423907.6 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0005' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0005' (2013/03/14 23:51:07 781360936 bytes, 468798.2 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0006' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0006' (2013/03/14 23:51:08 781360936 bytes, 425437.4 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0007' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0007' (2013/03/14 23:51:14 781360936 bytes, 377091.8 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0008' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0008' (2013/03/14 23:51:18 781360936 bytes, 440789.9 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_43200_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0009' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0009' (2013/03/14 23:51:21 781360936 bytes, 349535.4 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0010' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0010' (2013/03/14 23:51:31 781360936 bytes, 429747.7 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0011' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0011' (2013/03/14 23:51:31 781360936 bytes, 459548.9 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0012' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0012' (2013/03/14 23:51:35 781360936 bytes, 471975.1 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0013' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0013' (2013/03/14 23:51:41 781360936 bytes, 400933.0 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0014' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0014' (2013/03/14 23:51:43 781360936 bytes, 461361.8 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0015' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0015' (2013/03/14 23:51:55 781360936 bytes, 432034.6 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0016' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0016' (2013/03/14 23:51:56 781360936 bytes, 429482.3 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0017' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0017' (2013/03/14 23:52:00 781360936 bytes, 342928.7 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0018' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0018' (2013/03/14 23:52:04 781360936 bytes, 271084.5 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0019' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0019' (2013/03/14 23:52:18 781360936 bytes, 358003.5 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_43200_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_43200_0020' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060200/wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0020' (2013/03/14 23:52:14 781360936 bytes, 393647.4 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148806_43200_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfbdy_d01_148806_21600_0001 wrfbdy_d01_148806_21600_0002 wrfbdy_d01_148806_21600_0003 wrfbdy_d01_148806_21600_0004 wrfbdy_d01_148806_21600_0005 wrfbdy_d01_148806_21600_0006 wrfbdy_d01_148806_21600_0007 wrfbdy_d01_148806_21600_0008 wrfbdy_d01_148806_21600_0009 wrfbdy_d01_148806_21600_0010 wrfbdy_d01_148806_21600_0011 wrfbdy_d01_148806_21600_0012 wrfbdy_d01_148806_21600_0013 wrfbdy_d01_148806_21600_0014 wrfbdy_d01_148806_21600_0015 wrfbdy_d01_148806_21600_0016 wrfbdy_d01_148806_21600_0017 wrfbdy_d01_148806_21600_0018 wrfbdy_d01_148806_21600_0019 wrfbdy_d01_148806_21600_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e001' (2012/12/21 13:20:21 109722992 bytes, 314760.5 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e002' (2012/12/21 13:20:24 109722992 bytes, 394005.3 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e003' (2012/12/21 13:20:25 109722992 bytes, 312152.0 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e004' (2012/12/21 13:20:26 109722992 bytes, 343220.2 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e005' (2012/12/21 13:20:28 109722992 bytes, 347560.1 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e006' (2012/12/21 13:20:30 109722992 bytes, 314189.9 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e007' (2012/12/21 13:20:31 109722992 bytes, 259744.9 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e008' (2012/12/21 13:20:33 109722992 bytes, 363128.7 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_43200_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e009' (2012/12/21 13:20:35 109722992 bytes, 319432.1 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e010' (2012/12/21 13:20:35 109722992 bytes, 337774.4 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e011' (2012/12/21 13:20:37 109722992 bytes, 297245.1 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e012' (2012/12/21 13:20:39 109722992 bytes, 279692.3 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e013' (2012/12/21 13:20:40 109722992 bytes, 378235.2 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e014' (2012/12/21 13:20:41 109722992 bytes, 311738.6 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e015' (2012/12/21 13:20:42 109722992 bytes, 344798.0 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e016' (2012/12/21 13:20:43 109722992 bytes, 296631.3 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e017' (2012/12/21 13:20:45 109722992 bytes, 332895.4 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e018' (2012/12/21 13:20:46 109722992 bytes, 375981.3 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e019' (2012/12/21 13:20:47 109722992 bytes, 375857.5 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_43200_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_43200_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060206/wrfbdy_d01_2008-06-02_06:00:00.e020' (2012/12/21 13:20:48 109722992 bytes, 317850.5 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfbiochemi_d01_2008-06-02_00:00:00
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-02_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_06:00:00' (2013/01/02 08:58:04 4646536 bytes, 75415.9 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfchemi_d01_2008-06-02_00:00:00 wrfchemi_d01_2008-06-02_01:00:00 wrfchemi_d01_2008-06-02_02:00:00 wrfchemi_d01_2008-06-02_03:00:00 wrfchemi_d01_2008-06-02_04:00:00 wrfchemi_d01_2008-06-02_05:00:00 wrfchemi_d01_2008-06-02_06:00:00
+ rm -rf wrffirechemi_d01_2008-06-02_00:00:00 wrffirechemi_d01_2008-06-02_01:00:00 wrffirechemi_d01_2008-06-02_02:00:00 wrffirechemi_d01_2008-06-02_03:00:00 wrffirechemi_d01_2008-06-02_04:00:00 wrffirechemi_d01_2008-06-02_05:00:00 wrffirechemi_d01_2008-06-02_06:00:00
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060206
+ export LL_DATE
+ [[ 2008060206 -le 2008060212 ]]
+ echo 2008060206
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060206
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060206
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060206
+ cut -c9-10
+ LL_HH=06
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_06:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_06:00:00' (2012/12/19 11:47:44 47528764 bytes, 268814.1 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_06:00:00' (2012/12/19 11:48:02 4545448 bytes, 121348.0 KBS )
+ echo 2008060206 +1h
+ ./advance_time
+ LL_DATE=2008060207
+ export LL_DATE
+ [[ 2008060207 -le 2008060212 ]]
+ echo 2008060207
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060207
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060207
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060207
+ cut -c9-10
+ LL_HH=07
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_07:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_07:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_07:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_07:00:00' (2012/12/19 11:47:45 47528764 bytes, 216419.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_07:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_07:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_07:00:00' (2012/12/19 11:48:03 4545448 bytes, 106959.5 KBS )
+ echo 2008060207 +1h
+ ./advance_time
+ LL_DATE=2008060208
+ export LL_DATE
+ [[ 2008060208 -le 2008060212 ]]
+ echo 2008060208
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060208
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060208
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060208
+ cut -c9-10
+ LL_HH=08
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_08:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_08:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_08:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_08:00:00' (2012/12/19 11:47:46 47528764 bytes, 226664.3 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_08:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_08:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_08:00:00' (2012/12/19 11:48:03 4545448 bytes, 79580.0 KBS )
+ echo 2008060208 +1h
+ ./advance_time
+ LL_DATE=2008060209
+ export LL_DATE
+ [[ 2008060209 -le 2008060212 ]]
+ echo 2008060209
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060209
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060209
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060209
+ cut -c9-10
+ LL_HH=09
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_09:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_09:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_09:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_09:00:00' (2012/12/19 11:47:47 47528764 bytes, 141041.9 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_09:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_09:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_09:00:00' (2012/12/19 11:48:03 4545448 bytes, 72133.9 KBS )
+ ./advance_time
+ echo 2008060209 +1h
+ LL_DATE=2008060210
+ export LL_DATE
+ [[ 2008060210 -le 2008060212 ]]
+ echo 2008060210
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060210
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060210
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060210
+ cut -c9-10
+ LL_HH=10
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_10:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_10:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_10:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_10:00:00' (2012/12/19 11:47:48 47528764 bytes, 212941.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_10:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_10:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_10:00:00' (2012/12/19 11:48:04 4545448 bytes, 113702.0 KBS )
+ echo 2008060210 +1h
+ ./advance_time
+ LL_DATE=2008060211
+ export LL_DATE
+ [[ 2008060211 -le 2008060212 ]]
+ echo 2008060211
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060211
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060211
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060211
+ cut -c9-10
+ LL_HH=11
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_11:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_11:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_11:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_11:00:00' (2012/12/19 11:47:49 47528764 bytes, 184120.0 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_11:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_11:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_11:00:00' (2012/12/19 11:48:04 4545448 bytes, 121163.0 KBS )
+ echo 2008060211 +1h
+ ./advance_time
+ LL_DATE=2008060212
+ export LL_DATE
+ [[ 2008060212 -le 2008060212 ]]
+ echo 2008060212
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060212
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060212
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060212
+ cut -c9-10
+ LL_HH=12
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_12:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_12:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_12:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_12:00:00' (2012/12/19 11:47:51 47528764 bytes, 173845.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_12:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_12:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_12:00:00' (2012/12/19 11:48:04 4545448 bytes, 119491.5 KBS )
+ echo 2008060212 +1h
+ ./advance_time
+ LL_DATE=2008060213
+ export LL_DATE
+ [[ 2008060213 -le 2008060212 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 10801,
   last_obs_days            = 148806,
   last_obs_seconds         = 32400,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ rm -rf filter_control_0001
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31365> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ rm -rf filter_control_0002
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31366> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ rm -rf filter_control_0003
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31367> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ rm -rf filter_control_0004
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31368> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ rm -rf filter_control_0005
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31369> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ rm -rf filter_control_0006
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31370> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ rm -rf filter_control_0007
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31371> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ rm -rf filter_control_0008
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31372> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ rm -rf filter_control_0009
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31373> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ rm -rf filter_control_0010
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31374> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ rm -rf filter_control_0011
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31375> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ rm -rf filter_control_0012
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31376> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ rm -rf filter_control_0013
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31377> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ rm -rf filter_control_0014
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31378> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ rm -rf filter_control_0015
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31379> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ rm -rf filter_control_0016
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31380> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ rm -rf filter_control_0017
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31381> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ rm -rf filter_control_0018
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31382> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ rm -rf filter_control_0019
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31383> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ rm -rf filter_control_0020
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31384> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_06:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_06:00:00 wrfout_d01_2008-06-02_06:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-02_12:00:00 wrfapm_d01_2008-06-02_12:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 2531.7 KBS (cos=2011))
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 38.3 KBS (cos=2011))
put  'dart_filter/input.nml' : 'input.nml' ( 19417 bytes, 1775.0 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 181577.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 134445.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 170791.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 121973.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 55962.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 150089.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 168150.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 102080.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 101992.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 63939.1 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 87338.4 KBS (cos=2012))
HPSS EIO error, will retry in 60 seconds
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 71522.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 106161.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 54496.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 55095.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 304309.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 63502.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 54155.7 KBS (cos=2012))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 1680350 bytes, 15964.9 KBS (cos=2011))
put  'dart_filter/index.html' : 'index.html' ( 14167 bytes, 2531.1 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 62968.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 65967.6 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 151911.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 68211.5 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_old' : 'prior_inflate_ic_old' ( 488787408 bytes, 66779.4 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 81814.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 164957.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 73686.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 65162.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 77156.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 63967.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 75929.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 187406.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 99585.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 125272.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 75406.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 171948.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 97145.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 81144.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 92648.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 112005.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 111118.7 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 2488050 bytes, 30194.1 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 150992.9 KBS (cos=2012))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 115571.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 102178.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 184005.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 94668.4 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 119771.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 90175.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 117979.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 107111.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 85559.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 52175.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 103869.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 103641.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 133471.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 178996.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 105652.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 106631.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 108455.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 185156.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 138015.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 103570.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 103949.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 171360.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 185480.9 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 140740.8 KBS (cos=2012))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 22545.8 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 683.2 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19417 bytes, 1647.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3658 bytes, 173.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 3468.1 KBS (cos=2011))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 145443.5 KBS (cos=2012))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3658 bytes, 162.1 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19417 bytes, 2103.9 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 87.3 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 3859.6 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 183971.0 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21675.1 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19417 bytes, 417.2 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 206.9 KBS (cos=2011))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3658 bytes, 249.3 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10427.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 171923.8 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21204.1 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19417 bytes, 2658.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 571.1 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3658 bytes, 164.4 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 16115.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 87951.7 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 20783.3 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17123.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19417 bytes, 5272.3 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 906.4 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7816.6 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 121082.3 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3658 bytes, 550.3 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 11335.5 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 381.1 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19417 bytes, 1622.4 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14530.2 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 135342.9 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3658 bytes, 391.9 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17834.8 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 296.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19417 bytes, 3792.4 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21590.9 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 80568.2 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3658 bytes, 808.6 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 11996.9 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19417 bytes, 3290.9 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 102.6 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24103.1 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 175098.0 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3658 bytes, 432.0 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19417 bytes, 5715.5 KBS (cos=2011))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3658 bytes, 44.3 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 727.0 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22849.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 188142.0 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 15404.3 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19417 bytes, 3874.3 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 202.7 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3658 bytes, 299.8 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5794.3 KBS (cos=2011))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 12652.8 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 70880.6 KBS (cos=2012))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23876.4 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19417 bytes, 866.9 KBS (cos=2011))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3658 bytes, 586.8 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 19198.1 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 102277.2 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 107.0 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 28155.9 KBS (cos=2011))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3658 bytes, 522.3 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 766.5 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14443.9 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 95937.9 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19417 bytes, 2860.9 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27043.1 KBS (cos=2011))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19417 bytes, 1568.8 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 145.5 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7322.9 KBS (cos=2011))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 77838.3 KBS (cos=2012))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3658 bytes, 758.1 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 9116.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3658 bytes, 321.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19417 bytes, 3733.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10977.5 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 82744.6 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 607.8 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 26802.2 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 623.0 KBS (cos=2011))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19417 bytes, 1598.1 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14365.7 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 98077.9 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3658 bytes, 595.0 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 29468.2 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19417 bytes, 475.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 136.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 3492.4 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 153398.6 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3658 bytes, 174.8 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19417 bytes, 90.2 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 30079.3 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 15.6 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 9318.9 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 148271.7 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3658 bytes, 437.3 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 38209.8 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 551.0 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3658 bytes, 731.9 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 2854.8 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 107500.0 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19417 bytes, 5204.2 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 22450.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 135.5 KBS (cos=2011))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19417 bytes, 3877.9 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21362.8 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 101339.1 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3658 bytes, 312.6 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 25266.1 KBS (cos=2011))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19417 bytes, 2040.7 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3658 bytes, 826.9 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17702.6 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 160713.4 KBS (cos=2012))
HPSS EIO error, will retry in 60 seconds
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 320.4 KBS (cos=2011))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
HPSS EIO error, will retry in 10 seconds
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0001' : 'wrfapm_d01_2008-06-02_12:00:00_0001' ( 451038888 bytes, 201063.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 781360936 bytes, 176235.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0002' : 'wrfout_d01_2008-06-02_06:00:00_0002' ( 781360936 bytes, 214788.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 781360936 bytes, 119332.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0001' : 'wrfout_d01_2008-06-02_12:00:00_0001' ( 781360936 bytes, 119256.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0002' : 'wrfout_d01_2008-06-02_12:00:00_0002' ( 781360936 bytes, 222025.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0002' : 'wrfapm_d01_2008-06-02_12:00:00_0002' ( 451038888 bytes, 198464.2 KBS (cos=2012))
HPSS EIO error, will retry in 60 seconds
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0003' : 'wrfapm_d01_2008-06-02_12:00:00_0003' ( 451038888 bytes, 184412.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0003' : 'wrfout_d01_2008-06-02_12:00:00_0003' ( 781360936 bytes, 235114.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0003' : 'wrfout_d01_2008-06-02_06:00:00_0003' ( 781360936 bytes, 121819.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 781360936 bytes, 122276.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 781360936 bytes, 220540.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0004' : 'wrfout_d01_2008-06-02_06:00:00_0004' ( 781360936 bytes, 207667.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0004' : 'wrfapm_d01_2008-06-02_12:00:00_0004' ( 451038888 bytes, 105964.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 781360936 bytes, 194306.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0005' : 'wrfout_d01_2008-06-02_06:00:00_0005' ( 781360936 bytes, 204966.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0004' : 'wrfout_d01_2008-06-02_12:00:00_0004' ( 781360936 bytes, 105235.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0005' : 'wrfout_d01_2008-06-02_12:00:00_0005' ( 781360936 bytes, 201992.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0005' : 'wrfapm_d01_2008-06-02_12:00:00_0005' ( 451038888 bytes, 139258.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0006' : 'wrfapm_d01_2008-06-02_12:00:00_0006' ( 451038888 bytes, 202544.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0006' : 'wrfout_d01_2008-06-02_12:00:00_0006' ( 781360936 bytes, 204206.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 781360936 bytes, 129220.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0007' : 'wrfout_d01_2008-06-02_06:00:00_0007' ( 781360936 bytes, 207915.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 781360936 bytes, 154815.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0006' : 'wrfout_d01_2008-06-02_06:00:00_0006' ( 781360936 bytes, 84691.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0007' : 'wrfapm_d01_2008-06-02_12:00:00_0007' ( 451038888 bytes, 149848.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0007' : 'wrfout_d01_2008-06-02_12:00:00_0007' ( 781360936 bytes, 105536.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 781360936 bytes, 154185.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0008' : 'wrfapm_d01_2008-06-02_12:00:00_0008' ( 451038888 bytes, 157786.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0008' : 'wrfout_d01_2008-06-02_12:00:00_0008' ( 781360936 bytes, 191032.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0008' : 'wrfout_d01_2008-06-02_06:00:00_0008' ( 781360936 bytes, 87794.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 781360936 bytes, 197579.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0009' : 'wrfout_d01_2008-06-02_12:00:00_0009' ( 781360936 bytes, 176386.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0009' : 'wrfout_d01_2008-06-02_06:00:00_0009' ( 781360936 bytes, 139641.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0009' : 'wrfapm_d01_2008-06-02_12:00:00_0009' ( 451038888 bytes, 94969.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 781360936 bytes, 129283.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0010' : 'wrfout_d01_2008-06-02_06:00:00_0010' ( 781360936 bytes, 219848.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0010' : 'wrfout_d01_2008-06-02_12:00:00_0010' ( 781360936 bytes, 192759.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0010' : 'wrfapm_d01_2008-06-02_12:00:00_0010' ( 451038888 bytes, 158394.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0011' : 'wrfapm_d01_2008-06-02_12:00:00_0011' ( 451038888 bytes, 204140.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 781360936 bytes, 142644.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0011' : 'wrfout_d01_2008-06-02_12:00:00_0011' ( 781360936 bytes, 166073.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 781360936 bytes, 197176.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0011' : 'wrfout_d01_2008-06-02_06:00:00_0011' ( 781360936 bytes, 88960.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0012' : 'wrfapm_d01_2008-06-02_12:00:00_0012' ( 451038888 bytes, 179356.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0012' : 'wrfout_d01_2008-06-02_06:00:00_0012' ( 781360936 bytes, 144777.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0012' : 'wrfout_d01_2008-06-02_12:00:00_0012' ( 781360936 bytes, 163863.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0013' : 'wrfapm_d01_2008-06-02_12:00:00_0013' ( 451038888 bytes, 153810.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0013' : 'wrfout_d01_2008-06-02_06:00:00_0013' ( 781360936 bytes, 197507.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0013' : 'wrfout_d01_2008-06-02_12:00:00_0013' ( 781360936 bytes, 123193.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 781360936 bytes, 84504.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0014' : 'wrfout_d01_2008-06-02_06:00:00_0014' ( 781360936 bytes, 192942.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 781360936 bytes, 153921.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 781360936 bytes, 189780.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0015' : 'wrfout_d01_2008-06-02_06:00:00_0015' ( 781360936 bytes, 196721.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0014' : 'wrfout_d01_2008-06-02_12:00:00_0014' ( 781360936 bytes, 130340.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0014' : 'wrfapm_d01_2008-06-02_12:00:00_0014' ( 451038888 bytes, 83050.4 KBS (cos=2012))
HPSS EIO error, will retry in 360 seconds
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0015' : 'wrfapm_d01_2008-06-02_12:00:00_0015' ( 451038888 bytes, 180238.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0015' : 'wrfout_d01_2008-06-02_12:00:00_0015' ( 781360936 bytes, 165431.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0016' : 'wrfapm_d01_2008-06-02_12:00:00_0016' ( 451038888 bytes, 389981.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 781360936 bytes, 129591.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0016' : 'wrfout_d01_2008-06-02_12:00:00_0016' ( 781360936 bytes, 172220.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 781360936 bytes, 195317.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0016' : 'wrfout_d01_2008-06-02_06:00:00_0016' ( 781360936 bytes, 77656.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0017' : 'wrfout_d01_2008-06-02_12:00:00_0017' ( 781360936 bytes, 216304.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0017' : 'wrfapm_d01_2008-06-02_12:00:00_0017' ( 451038888 bytes, 187434.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0017' : 'wrfout_d01_2008-06-02_06:00:00_0017' ( 781360936 bytes, 127941.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0018' : 'wrfapm_d01_2008-06-02_12:00:00_0018' ( 451038888 bytes, 165680.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0018' : 'wrfout_d01_2008-06-02_06:00:00_0018' ( 781360936 bytes, 183268.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0018' : 'wrfout_d01_2008-06-02_12:00:00_0018' ( 781360936 bytes, 178267.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 781360936 bytes, 103589.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 781360936 bytes, 253213.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0019' : 'wrfout_d01_2008-06-02_12:00:00_0019' ( 781360936 bytes, 218741.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0019' : 'wrfout_d01_2008-06-02_06:00:00_0019' ( 781360936 bytes, 189326.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0019' : 'wrfapm_d01_2008-06-02_12:00:00_0019' ( 451038888 bytes, 86935.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 781360936 bytes, 186131.1 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 2129.5 KBS (cos=2011))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0020' : 'wrfout_d01_2008-06-02_12:00:00_0020' ( 781360936 bytes, 193476.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_12:00:00_0020' : 'wrfapm_d01_2008-06-02_12:00:00_0020' ( 451038888 bytes, 181854.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0020' : 'wrfout_d01_2008-06-02_06:00:00_0020' ( 781360936 bytes, 122916.5 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'wrfchem_forecast/wrfout_d01_2008-06-02_06:00:00_0001' : 'wrfout_d01_2008-06-02_06:00:00_0001' ( 781360936 bytes, 187786.0 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060212
+ export L_DATE
+ [[ 2008060212 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060212
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060212
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060212
+ cut -c7-8
+ L_DD=02
+ export L_DD
+ echo 2008060212
+ cut -c9-10
+ L_HH=12
+ export L_HH
+ L_FILE_DATE=2008-06-02_12:00:00
+ export L_FILE_DATE
+ echo 2008060212 -6h
+ ./advance_time
+ PAST_DATE=2008060206
+ export PAST_DATE
+ echo 2008060206
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060206
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060206
+ cut -c7-8
+ PAST_DD=02
+ export PAST_DD
+ echo 2008060206
+ cut -c9-10
+ PAST_HH=06
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-02_06:00:00
+ export PAST_FILE_DATE
+ echo 2008060212 +6h
+ ./advance_time
+ NEXT_DATE=2008060218
+ export NEXT_DATE
+ echo 2008060218
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060218
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060218
+ cut -c7-8
+ NEXT_DD=02
+ export NEXT_DD
+ echo 2008060218
+ cut -c9-10
+ NEXT_HH=18
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-02_18:00:00
+ export NEXT_FILE_DATE
+ echo 2008060212 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060209
+ export ASIM_MIN_DATE
+ echo 2008060209
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060209
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060209
+ cut -c7-8
+ ASIM_MIN_DD=02
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060212 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060215
+ export ASIM_MAX_DATE
+ echo 2008060215
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060215
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060215
+ cut -c7-8
+ ASIM_MAX_DD=02
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ echo 2008060212 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 43200
+ DAY_GREG=148806
+ export DAY_GREG
+ SEC_GREG=43200
+ export SEC_GREG
+ echo 2008060218 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 64800
+ NEXT_DAY_GREG=148806
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=64800
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 10801,
   last_obs_days            = 148806,
   last_obs_seconds         = 32400,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 10801,
   last_obs_days                = 148806,
   last_obs_seconds             = 32400,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31557> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys6328-ib>>
<<Job is finished>>
+ [[ 2008060212 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060212 -ne 2008060118 ]]
+ [[ 2 != 0 ]]
+ INF_OUT_FILE_NAME_PRIOR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/prior_inflate_ic_new
+ export INF_OUT_FILE_NAME_PRIOR
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060206/dart_filter/prior_inflate_ic_new prior_inflate_ic_old
+ [[ 0 != 0 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060212/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060212/obs_seq.proc' (2013/03/14 10:27:50 4201280 bytes, 114498.6 KBS )
+ ./advance_time
+ echo 2008060209 0 -g
+ set -A temp 148806 32400
+ (( temp[1]=32400+1 ))
+ NL_FIRST_OBS_DAYS=148806
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=32401
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060215 0 -g
+ ./advance_time
+ set -A temp 148806 54000
+ NL_LAST_OBS_DAYS=148806
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=54000
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 32401,
   last_obs_days            = 148806,
   last_obs_seconds         = 54000,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 43200, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31564> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys4063-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148806
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=64800
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 32401,
   last_obs_days            = 148806,
   last_obs_seconds         = 54000,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 15  0 50 57
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148806, sec=64800
output file advance_time is now set to 2008 Jun 02 18:00:00
input file data_time was day=148806, sec=43200
input file data_time was 2008 Jun 02 12:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 15  0 51  5
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfinput_d01_148806_43200_0001 wrfinput_d01_148806_43200_0002 wrfinput_d01_148806_43200_0003 wrfinput_d01_148806_43200_0004 wrfinput_d01_148806_43200_0005 wrfinput_d01_148806_43200_0006 wrfinput_d01_148806_43200_0007 wrfinput_d01_148806_43200_0008 wrfinput_d01_148806_43200_0009 wrfinput_d01_148806_43200_0010 wrfinput_d01_148806_43200_0011 wrfinput_d01_148806_43200_0012 wrfinput_d01_148806_43200_0013 wrfinput_d01_148806_43200_0014 wrfinput_d01_148806_43200_0015 wrfinput_d01_148806_43200_0016 wrfinput_d01_148806_43200_0017 wrfinput_d01_148806_43200_0018 wrfinput_d01_148806_43200_0019 wrfinput_d01_148806_43200_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0001' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0001' (2013/03/15 00:31:15 781360936 bytes, 291458.1 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0002' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0002' (2013/03/15 00:31:17 781360936 bytes, 377427.7 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0003' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0003' (2013/03/15 00:31:20 781360936 bytes, 447109.2 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0004' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0004' (2013/03/15 00:31:29 781360936 bytes, 395469.8 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0005' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0005' (2013/03/15 00:31:30 781360936 bytes, 337752.5 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0006' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0006' (2013/03/15 00:31:34 781360936 bytes, 388304.4 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0007' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0007' (2013/03/15 00:31:42 781360936 bytes, 397297.3 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0008' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0008' (2013/03/15 00:31:46 781360936 bytes, 490850.0 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148806_64800_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0009' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0009' (2013/03/15 00:31:50 781360936 bytes, 495515.4 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0010' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0010' (2013/03/15 00:31:55 781360936 bytes, 330095.8 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0011' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0011' (2013/03/15 00:32:00 781360936 bytes, 504483.4 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0012' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0012' (2013/03/15 00:32:05 781360936 bytes, 511887.5 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0013' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0013' (2013/03/15 00:32:12 781360936 bytes, 308569.3 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0014' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0014' (2013/03/15 00:32:18 781360936 bytes, 367621.6 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0015' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0015' (2013/03/15 00:32:22 781360936 bytes, 293382.0 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0016' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0016' (2013/03/15 00:32:25 781360936 bytes, 289642.8 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0017' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0017' (2013/03/15 00:32:29 781360936 bytes, 435885.0 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0018' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0018' (2013/03/15 00:32:34 781360936 bytes, 433943.1 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0019' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0019' (2013/03/15 00:32:38 781360936 bytes, 411716.5 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148806_64800_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148806_64800_0020' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060206/wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0020' (2013/03/15 00:32:43 781360936 bytes, 461041.4 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148806_64800_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfbdy_d01_148806_43200_0001 wrfbdy_d01_148806_43200_0002 wrfbdy_d01_148806_43200_0003 wrfbdy_d01_148806_43200_0004 wrfbdy_d01_148806_43200_0005 wrfbdy_d01_148806_43200_0006 wrfbdy_d01_148806_43200_0007 wrfbdy_d01_148806_43200_0008 wrfbdy_d01_148806_43200_0009 wrfbdy_d01_148806_43200_0010 wrfbdy_d01_148806_43200_0011 wrfbdy_d01_148806_43200_0012 wrfbdy_d01_148806_43200_0013 wrfbdy_d01_148806_43200_0014 wrfbdy_d01_148806_43200_0015 wrfbdy_d01_148806_43200_0016 wrfbdy_d01_148806_43200_0017 wrfbdy_d01_148806_43200_0018 wrfbdy_d01_148806_43200_0019 wrfbdy_d01_148806_43200_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e001' (2012/12/21 13:21:14 109722992 bytes, 325846.5 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e002' (2012/12/21 13:21:15 109722992 bytes, 329953.3 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e003' (2012/12/21 13:21:16 109722992 bytes, 314723.4 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e004' (2012/12/21 13:21:17 109722992 bytes, 344018.4 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e005' (2012/12/21 13:21:19 109722992 bytes, 351102.3 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e006' (2012/12/21 13:21:20 109722992 bytes, 261331.1 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e007' (2012/12/21 13:21:21 109722992 bytes, 240538.8 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e008' (2012/12/21 13:21:22 109722992 bytes, 371465.2 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148806_64800_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e009' (2012/12/21 13:21:23 109722992 bytes, 342871.4 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e010' (2012/12/21 13:21:24 109722992 bytes, 278435.3 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e011' (2012/12/21 13:21:25 109722992 bytes, 346640.9 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e012' (2012/12/21 13:21:27 109722992 bytes, 333091.5 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e013' (2012/12/21 13:21:28 109722992 bytes, 332209.1 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e014' (2012/12/21 13:21:29 109722992 bytes, 337005.7 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e015' (2012/12/21 13:21:30 109722992 bytes, 316552.3 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e016' (2012/12/21 13:21:31 109722992 bytes, 152768.0 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e017' (2012/12/21 13:21:32 109722992 bytes, 272923.1 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e018' (2012/12/21 13:21:34 109722992 bytes, 179627.0 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e019' (2012/12/21 13:21:35 109722992 bytes, 362274.9 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148806_64800_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148806_64800_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060212/wrfbdy_d01_2008-06-02_12:00:00.e020' (2012/12/21 13:21:36 109722992 bytes, 362885.1 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfbiochemi_d01_2008-06-02_06:00:00
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_12:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-02_12:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_12:00:00' (2013/01/02 08:58:05 4646536 bytes, 90001.8 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfchemi_d01_2008-06-02_06:00:00 wrfchemi_d01_2008-06-02_07:00:00 wrfchemi_d01_2008-06-02_08:00:00 wrfchemi_d01_2008-06-02_09:00:00 wrfchemi_d01_2008-06-02_10:00:00 wrfchemi_d01_2008-06-02_11:00:00 wrfchemi_d01_2008-06-02_12:00:00
+ rm -rf wrffirechemi_d01_2008-06-02_06:00:00 wrffirechemi_d01_2008-06-02_07:00:00 wrffirechemi_d01_2008-06-02_08:00:00 wrffirechemi_d01_2008-06-02_09:00:00 wrffirechemi_d01_2008-06-02_10:00:00 wrffirechemi_d01_2008-06-02_11:00:00 wrffirechemi_d01_2008-06-02_12:00:00
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060212
+ export LL_DATE
+ [[ 2008060212 -le 2008060218 ]]
+ echo 2008060212
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060212
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060212
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060212
+ cut -c9-10
+ LL_HH=12
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_12:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_12:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_12:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_12:00:00' (2012/12/19 11:47:51 47528764 bytes, 190537.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_12:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_12:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_12:00:00' (2012/12/19 11:48:04 4545448 bytes, 79187.7 KBS )
+ echo 2008060212 +1h
+ ./advance_time
+ LL_DATE=2008060213
+ export LL_DATE
+ [[ 2008060213 -le 2008060218 ]]
+ echo 2008060213
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060213
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060213
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060213
+ cut -c9-10
+ LL_HH=13
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_13:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_13:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_13:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_13:00:00' (2012/12/19 11:47:52 47528764 bytes, 237779.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_13:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_13:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_13:00:00' (2012/12/19 11:48:05 4545448 bytes, 135059.4 KBS )
+ echo 2008060213 +1h
+ ./advance_time
+ LL_DATE=2008060214
+ export LL_DATE
+ [[ 2008060214 -le 2008060218 ]]
+ echo 2008060214
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060214
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060214
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060214
+ cut -c9-10
+ LL_HH=14
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_14:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_14:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_14:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_14:00:00' (2012/12/19 11:47:53 47528764 bytes, 182904.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_14:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_14:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_14:00:00' (2012/12/19 11:48:05 4545448 bytes, 140421.2 KBS )
+ echo 2008060214 +1h
+ ./advance_time
+ LL_DATE=2008060215
+ export LL_DATE
+ [[ 2008060215 -le 2008060218 ]]
+ echo 2008060215
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060215
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060215
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060215
+ cut -c9-10
+ LL_HH=15
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_15:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_15:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_15:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_15:00:00' (2012/12/19 11:47:54 47528764 bytes, 231247.7 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_15:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_15:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_15:00:00' (2012/12/19 11:48:05 4545448 bytes, 122399.8 KBS )
+ echo 2008060215 +1h
+ ./advance_time
+ LL_DATE=2008060216
+ export LL_DATE
+ [[ 2008060216 -le 2008060218 ]]
+ echo 2008060216
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060216
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060216
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060216
+ cut -c9-10
+ LL_HH=16
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_16:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_16:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_16:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_16:00:00' (2012/12/19 11:47:55 47528764 bytes, 229876.3 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_16:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_16:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_16:00:00' (2012/12/19 11:48:06 4545448 bytes, 126617.1 KBS )
+ echo 2008060216 +1h
+ ./advance_time
+ LL_DATE=2008060217
+ export LL_DATE
+ [[ 2008060217 -le 2008060218 ]]
+ echo 2008060217
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060217
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060217
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060217
+ cut -c9-10
+ LL_HH=17
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_17:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_17:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_17:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_17:00:00' (2012/12/19 11:47:56 47528764 bytes, 260021.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_17:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_17:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_17:00:00' (2012/12/19 11:48:06 4545448 bytes, 122763.9 KBS )
+ echo 2008060217 +1h
+ ./advance_time
+ LL_DATE=2008060218
+ export LL_DATE
+ [[ 2008060218 -le 2008060218 ]]
+ echo 2008060218
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060218
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060218
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060218
+ cut -c9-10
+ LL_HH=18
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_18:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_18:00:00' (2012/12/19 11:47:57 47528764 bytes, 230782.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_18:00:00' (2012/12/19 11:48:06 4545448 bytes, 128529.2 KBS )
+ echo 2008060218 +1h
+ ./advance_time
+ LL_DATE=2008060219
+ export LL_DATE
+ [[ 2008060219 -le 2008060218 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 32401,
   last_obs_days            = 148806,
   last_obs_seconds         = 54000,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ rm -rf filter_control_0001
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31600> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ rm -rf filter_control_0002
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31601> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ rm -rf filter_control_0003
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31602> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ rm -rf filter_control_0004
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31603> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ rm -rf filter_control_0005
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31604> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ rm -rf filter_control_0006
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31605> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ rm -rf filter_control_0007
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31606> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ rm -rf filter_control_0008
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31607> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ rm -rf filter_control_0009
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31608> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ rm -rf filter_control_0010
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31609> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ rm -rf filter_control_0011
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31610> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ rm -rf filter_control_0012
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31611> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ rm -rf filter_control_0013
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31612> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ rm -rf filter_control_0014
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31613> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ rm -rf filter_control_0015
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31614> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ rm -rf filter_control_0016
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31615> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ rm -rf filter_control_0017
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31616> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ rm -rf filter_control_0018
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31617> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ rm -rf filter_control_0019
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31618> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ rm -rf filter_control_0020
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31619> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
No unfinished job found
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_12:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_12:00:00 wrfout_d01_2008-06-02_12:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-02_18:00:00 wrfapm_d01_2008-06-02_18:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/input.nml' : 'input.nml' ( 19417 bytes, 4079.2 KBS (cos=2011))
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 2703.3 KBS (cos=2011))
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 15.3 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 172723.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 176662.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 165898.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 167257.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 182055.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 97605.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 168325.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 136104.8 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 130785.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 168777.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 146836.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 178290.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 109758.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 162691.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 125931.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 164385.2 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 177770.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 148831.3 KBS (cos=2012))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 4201280 bytes, 75906.7 KBS (cos=2011))
put  'dart_filter/index.html' : 'index.html' ( 14887 bytes, 1048.4 KBS (cos=2011))
HPSS EIO error, will retry in 60 seconds
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 172579.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 116990.1 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_old' : 'prior_inflate_ic_old' ( 488787408 bytes, 166085.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 155311.0 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 153304.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 171418.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 124767.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 175734.2 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 121502.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 152052.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 168235.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 156921.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 126188.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 130722.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 172790.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 114623.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 113381.9 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 6220855 bytes, 67052.4 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 154189.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 133728.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 177116.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 181173.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 177259.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 106397.4 KBS (cos=2012))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 137515.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 184652.7 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 186079.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 137756.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 126671.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 167218.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 124200.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 184095.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 124913.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 178695.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 184023.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 134895.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 173633.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 94815.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 169965.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 187144.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 179627.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 181640.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 171520.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 85579.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 87174.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 170162.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 112550.4 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 108850.4 KBS (cos=2012))
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 26896.2 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3658 bytes, 213.7 KBS (cos=2011))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19417 bytes, 3448.8 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 23904.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 148653.6 KBS (cos=2012))
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 589.0 KBS (cos=2011))
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
HPSS EIO error, will retry in 10 seconds
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23661.6 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 6614.5 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
HPSS recovered from EIO error after retry
HPSS recovered from EIO error after retry
HPSS recovered from EIO error after retry
HPSS recovered from EIO error after retry
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3658 bytes, 106.7 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 138.5 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19417 bytes, 4979.9 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 189474.5 KBS (cos=2012))
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24856.6 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 148.7 KBS (cos=2011))
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19417 bytes, 728.2 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3658 bytes, 537.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17205.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 223829.2 KBS (cos=2012))
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17612.5 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 182.7 KBS (cos=2011))
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19417 bytes, 4387.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3658 bytes, 315.2 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7691.4 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 186527.6 KBS (cos=2012))
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 37761.6 KBS (cos=2011))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19417 bytes, 4391.0 KBS (cos=2011))
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3658 bytes, 759.7 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 258.9 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21321.0 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 186724.1 KBS (cos=2012))
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23209.1 KBS (cos=2011))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19417 bytes, 1651.3 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 546.2 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3658 bytes, 833.6 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21195.7 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 208487.2 KBS (cos=2012))
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31210.6 KBS (cos=2011))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19417 bytes, 4397.0 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 82.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3658 bytes, 598.6 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21799.4 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 189157.6 KBS (cos=2012))
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 32947.2 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19417 bytes, 3533.5 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 89.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3658 bytes, 562.8 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 23786.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 182354.5 KBS (cos=2012))
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27299.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19417 bytes, 1904.7 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 723.7 KBS (cos=2011))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3658 bytes, 424.7 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24803.1 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 203884.0 KBS (cos=2012))
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 25742.6 KBS (cos=2011))
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19417 bytes, 1199.4 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 680.4 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3658 bytes, 537.9 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 15720.3 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 212840.4 KBS (cos=2012))
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 37221.4 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 222.9 KBS (cos=2011))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3658 bytes, 914.7 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19417 bytes, 4512.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14993.0 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 218574.8 KBS (cos=2012))
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24633.2 KBS (cos=2011))
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19417 bytes, 4034.3 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 717.9 KBS (cos=2011))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3658 bytes, 487.0 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 16028.4 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 188601.0 KBS (cos=2012))
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 29165.0 KBS (cos=2011))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3658 bytes, 725.0 KBS (cos=2011))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19417 bytes, 4552.6 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 791.0 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10128.3 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 186432.2 KBS (cos=2012))
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 41755.9 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3658 bytes, 919.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 368.5 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19417 bytes, 1127.3 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21312.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 155951.4 KBS (cos=2012))
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 29056.3 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 174.0 KBS (cos=2011))
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3658 bytes, 554.7 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19417 bytes, 2381.6 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7973.5 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 222001.6 KBS (cos=2012))
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 38996.9 KBS (cos=2011))
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3658 bytes, 639.4 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19417 bytes, 4430.9 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 184.3 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 9425.4 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 193311.0 KBS (cos=2012))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 454.9 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 34059.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3658 bytes, 1003.3 KBS (cos=2011))
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19417 bytes, 4127.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17190.3 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 204733.7 KBS (cos=2012))
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24769.0 KBS (cos=2011))
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19417 bytes, 4022.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 211.5 KBS (cos=2011))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3658 bytes, 877.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5999.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 191389.9 KBS (cos=2012))
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 16640.4 KBS (cos=2011))
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3658 bytes, 545.3 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 535.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19417 bytes, 1388.4 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8108.8 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 196005.3 KBS (cos=2012))
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 41233.5 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 730.6 KBS (cos=2011))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19417 bytes, 950.0 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3658 bytes, 138.9 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14512.5 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 181938.1 KBS (cos=2012))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0001' : 'wrfapm_d01_2008-06-02_18:00:00_0001' ( 451038888 bytes, 178081.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0001' : 'wrfout_d01_2008-06-02_12:00:00_0001' ( 781360936 bytes, 200233.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 781360936 bytes, 165219.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0001' : 'wrfout_d01_2008-06-02_18:00:00_0001' ( 781360936 bytes, 157605.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 781360936 bytes, 156230.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0002' : 'wrfout_d01_2008-06-02_12:00:00_0002' ( 781360936 bytes, 184459.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0002' : 'wrfapm_d01_2008-06-02_18:00:00_0002' ( 451038888 bytes, 193230.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0002' : 'wrfout_d01_2008-06-02_18:00:00_0002' ( 781360936 bytes, 163499.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 781360936 bytes, 191586.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0003' : 'wrfout_d01_2008-06-02_12:00:00_0003' ( 781360936 bytes, 161477.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0003' : 'wrfapm_d01_2008-06-02_18:00:00_0003' ( 451038888 bytes, 155102.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0003' : 'wrfout_d01_2008-06-02_18:00:00_0003' ( 781360936 bytes, 169468.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0004' : 'wrfapm_d01_2008-06-02_18:00:00_0004' ( 451038888 bytes, 195424.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 781360936 bytes, 185414.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0004' : 'wrfout_d01_2008-06-02_18:00:00_0004' ( 781360936 bytes, 208237.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0004' : 'wrfout_d01_2008-06-02_12:00:00_0004' ( 781360936 bytes, 133461.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0005' : 'wrfapm_d01_2008-06-02_18:00:00_0005' ( 451038888 bytes, 161410.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 781360936 bytes, 154523.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0005' : 'wrfout_d01_2008-06-02_12:00:00_0005' ( 781360936 bytes, 142807.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0005' : 'wrfout_d01_2008-06-02_18:00:00_0005' ( 781360936 bytes, 153288.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 781360936 bytes, 177270.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0006' : 'wrfout_d01_2008-06-02_18:00:00_0006' ( 781360936 bytes, 235499.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0006' : 'wrfout_d01_2008-06-02_12:00:00_0006' ( 781360936 bytes, 204446.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0006' : 'wrfapm_d01_2008-06-02_18:00:00_0006' ( 451038888 bytes, 187524.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 781360936 bytes, 157497.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0007' : 'wrfout_d01_2008-06-02_12:00:00_0007' ( 781360936 bytes, 159556.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0007' : 'wrfapm_d01_2008-06-02_18:00:00_0007' ( 451038888 bytes, 114232.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 781360936 bytes, 184985.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0007' : 'wrfout_d01_2008-06-02_18:00:00_0007' ( 781360936 bytes, 143357.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0008' : 'wrfout_d01_2008-06-02_12:00:00_0008' ( 781360936 bytes, 204509.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0008' : 'wrfapm_d01_2008-06-02_18:00:00_0008' ( 451038888 bytes, 141456.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0008' : 'wrfout_d01_2008-06-02_18:00:00_0008' ( 781360936 bytes, 219131.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 781360936 bytes, 163404.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0009' : 'wrfapm_d01_2008-06-02_18:00:00_0009' ( 451038888 bytes, 181030.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0009' : 'wrfout_d01_2008-06-02_12:00:00_0009' ( 781360936 bytes, 129989.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 781360936 bytes, 176915.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0009' : 'wrfout_d01_2008-06-02_18:00:00_0009' ( 781360936 bytes, 122576.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0010' : 'wrfout_d01_2008-06-02_12:00:00_0010' ( 781360936 bytes, 199348.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0010' : 'wrfapm_d01_2008-06-02_18:00:00_0010' ( 451038888 bytes, 141592.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0010' : 'wrfout_d01_2008-06-02_18:00:00_0010' ( 781360936 bytes, 156505.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0011' : 'wrfout_d01_2008-06-02_18:00:00_0011' ( 781360936 bytes, 193774.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 781360936 bytes, 111781.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 781360936 bytes, 164012.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0011' : 'wrfout_d01_2008-06-02_12:00:00_0011' ( 781360936 bytes, 115104.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0011' : 'wrfapm_d01_2008-06-02_18:00:00_0011' ( 451038888 bytes, 83361.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0012' : 'wrfout_d01_2008-06-02_12:00:00_0012' ( 781360936 bytes, 152445.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0012' : 'wrfapm_d01_2008-06-02_18:00:00_0012' ( 451038888 bytes, 103217.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0013' : 'wrfout_d01_2008-06-02_12:00:00_0013' ( 781360936 bytes, 183421.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0012' : 'wrfout_d01_2008-06-02_18:00:00_0012' ( 781360936 bytes, 147335.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0013' : 'wrfapm_d01_2008-06-02_18:00:00_0013' ( 451038888 bytes, 198536.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 781360936 bytes, 106654.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0014' : 'wrfout_d01_2008-06-02_12:00:00_0014' ( 781360936 bytes, 135967.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 781360936 bytes, 134755.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0013' : 'wrfout_d01_2008-06-02_18:00:00_0013' ( 781360936 bytes, 91694.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0014' : 'wrfout_d01_2008-06-02_18:00:00_0014' ( 781360936 bytes, 132678.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0014' : 'wrfapm_d01_2008-06-02_18:00:00_0014' ( 451038888 bytes, 75539.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 781360936 bytes, 207859.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0015' : 'wrfout_d01_2008-06-02_12:00:00_0015' ( 781360936 bytes, 155363.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0015' : 'wrfapm_d01_2008-06-02_18:00:00_0015' ( 451038888 bytes, 121522.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0016' : 'wrfapm_d01_2008-06-02_18:00:00_0016' ( 451038888 bytes, 235758.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 781360936 bytes, 159198.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0016' : 'wrfout_d01_2008-06-02_12:00:00_0016' ( 781360936 bytes, 157925.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0016' : 'wrfout_d01_2008-06-02_18:00:00_0016' ( 781360936 bytes, 140189.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0015' : 'wrfout_d01_2008-06-02_18:00:00_0015' ( 781360936 bytes, 73339.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 781360936 bytes, 174606.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0017' : 'wrfout_d01_2008-06-02_12:00:00_0017' ( 781360936 bytes, 147122.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0017' : 'wrfapm_d01_2008-06-02_18:00:00_0017' ( 451038888 bytes, 157704.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0017' : 'wrfout_d01_2008-06-02_18:00:00_0017' ( 781360936 bytes, 146547.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0018' : 'wrfapm_d01_2008-06-02_18:00:00_0018' ( 451038888 bytes, 168051.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0018' : 'wrfout_d01_2008-06-02_12:00:00_0018' ( 781360936 bytes, 150513.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0018' : 'wrfout_d01_2008-06-02_18:00:00_0018' ( 781360936 bytes, 189361.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 781360936 bytes, 123957.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 781360936 bytes, 147537.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0019' : 'wrfapm_d01_2008-06-02_18:00:00_0019' ( 451038888 bytes, 172359.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0019' : 'wrfout_d01_2008-06-02_12:00:00_0019' ( 781360936 bytes, 166788.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0019' : 'wrfout_d01_2008-06-02_18:00:00_0019' ( 781360936 bytes, 169533.6 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 1176.6 KBS (cos=2011))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_12:00:00_0020' : 'wrfout_d01_2008-06-02_12:00:00_0020' ( 781360936 bytes, 199604.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-02_18:00:00_0020' : 'wrfapm_d01_2008-06-02_18:00:00_0020' ( 451038888 bytes, 192341.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0020' : 'wrfout_d01_2008-06-02_18:00:00_0020' ( 781360936 bytes, 153966.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 781360936 bytes, 95124.8 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060218
+ export L_DATE
+ [[ 2008060218 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060218
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060218
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060218
+ cut -c7-8
+ L_DD=02
+ export L_DD
+ echo 2008060218
+ cut -c9-10
+ L_HH=18
+ export L_HH
+ L_FILE_DATE=2008-06-02_18:00:00
+ export L_FILE_DATE
+ echo 2008060218 -6h
+ ./advance_time
+ PAST_DATE=2008060212
+ export PAST_DATE
+ echo 2008060212
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060212
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060212
+ cut -c7-8
+ PAST_DD=02
+ export PAST_DD
+ echo 2008060212
+ cut -c9-10
+ PAST_HH=12
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-02_12:00:00
+ export PAST_FILE_DATE
+ echo 2008060218 +6h
+ ./advance_time
+ NEXT_DATE=2008060300
+ export NEXT_DATE
+ echo 2008060300
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060300
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060300
+ cut -c7-8
+ NEXT_DD=03
+ export NEXT_DD
+ echo 2008060300
+ cut -c9-10
+ NEXT_HH=00
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-03_00:00:00
+ export NEXT_FILE_DATE
+ echo 2008060218 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060215
+ export ASIM_MIN_DATE
+ echo 2008060215
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060215
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060215
+ cut -c7-8
+ ASIM_MIN_DD=02
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060218 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060221
+ export ASIM_MAX_DATE
+ echo 2008060221
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060221
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060221
+ cut -c7-8
+ ASIM_MAX_DD=02
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ echo 2008060218 0 -g
+ ./advance_time
+ set -A GREG_DATA 148806 64800
+ DAY_GREG=148806
+ export DAY_GREG
+ SEC_GREG=64800
+ export SEC_GREG
+ echo 2008060300 0 -g
+ ./advance_time
+ set -A GREG_DATA 148807 0
+ NEXT_DAY_GREG=148807
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=0
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 32401,
   last_obs_days            = 148806,
   last_obs_seconds         = 54000,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 32401,
   last_obs_days                = 148806,
   last_obs_seconds             = 54000,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31818> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys1620-ib>>
<<Job is finished>>
+ [[ 2008060218 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060218 -ne 2008060118 ]]
+ [[ 2 != 0 ]]
+ INF_OUT_FILE_NAME_PRIOR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/prior_inflate_ic_new
+ export INF_OUT_FILE_NAME_PRIOR
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060212/dart_filter/prior_inflate_ic_new prior_inflate_ic_old
+ [[ 0 != 0 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060218/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060218/obs_seq.proc' (2013/03/14 10:27:56 3618884 bytes, 118376.4 KBS )
+ echo 2008060215 0 -g
+ ./advance_time
+ set -A temp 148806 54000
+ (( temp[1]=54000+1 ))
+ NL_FIRST_OBS_DAYS=148806
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=54001
+ export NL_FIRST_OBS_SECONDS
+ ./advance_time
+ echo 2008060221 0 -g
+ set -A temp 148806 75600
+ NL_LAST_OBS_DAYS=148806
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=75600
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 54001,
   last_obs_days            = 148806,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148806,
   new_advance_secs             = 64800, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31822> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys0107-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148807
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=0
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 54001,
   last_obs_days            = 148806,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 15  1 38 11
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148807, sec=0
output file advance_time is now set to 2008 Jun 03 00:00:00
input file data_time was day=148806, sec=64800
input file data_time was 2008 Jun 02 18:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 15  1 38 26
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfinput_d01_148806_64800_0001 wrfinput_d01_148806_64800_0002 wrfinput_d01_148806_64800_0003 wrfinput_d01_148806_64800_0004 wrfinput_d01_148806_64800_0005 wrfinput_d01_148806_64800_0006 wrfinput_d01_148806_64800_0007 wrfinput_d01_148806_64800_0008 wrfinput_d01_148806_64800_0009 wrfinput_d01_148806_64800_0010 wrfinput_d01_148806_64800_0011 wrfinput_d01_148806_64800_0012 wrfinput_d01_148806_64800_0013 wrfinput_d01_148806_64800_0014 wrfinput_d01_148806_64800_0015 wrfinput_d01_148806_64800_0016 wrfinput_d01_148806_64800_0017 wrfinput_d01_148806_64800_0018 wrfinput_d01_148806_64800_0019 wrfinput_d01_148806_64800_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0001' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0001' (2013/03/15 01:30:17 781360936 bytes, 396482.4 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0002' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0002' (2013/03/15 01:30:21 781360936 bytes, 434228.1 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0003' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0003' (2013/03/15 01:30:23 781360936 bytes, 395074.9 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0004' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0004' (2013/03/15 01:30:26 781360936 bytes, 377945.6 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0005' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0005' (2013/03/15 01:30:30 781360936 bytes, 465980.9 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0006' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0006' (2013/03/15 01:30:32 781360936 bytes, 435491.9 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0007' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0007' (2013/03/15 01:30:38 781360936 bytes, 381846.2 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0008' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0008' (2013/03/15 01:30:40 781360936 bytes, 468024.0 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_0_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0009' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0009' (2013/03/15 01:30:46 781360936 bytes, 479904.8 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0010' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0010' (2013/03/15 01:30:48 781360936 bytes, 440050.1 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0011' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0011' (2013/03/15 01:30:50 781360936 bytes, 500877.2 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0012' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0012' (2013/03/15 01:30:57 781360936 bytes, 438592.8 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0013' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0013' (2013/03/15 01:31:04 781360936 bytes, 483026.4 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0014' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0014' (2013/03/15 01:31:06 781360936 bytes, 456522.2 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0015' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0015' (2013/03/15 01:31:15 781360936 bytes, 288617.9 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0016' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0016' (2013/03/15 01:31:14 781360936 bytes, 481047.4 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0017' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0017' (2013/03/15 01:31:18 781360936 bytes, 442992.8 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0018' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0018' (2013/03/15 01:31:21 781360936 bytes, 484554.4 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0019' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0019' (2013/03/15 01:31:26 781360936 bytes, 421997.3 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_0_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_0_0020' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060212/wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0020' (2013/03/15 01:31:29 781360936 bytes, 436411.4 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148807_0_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfbdy_d01_148806_64800_0001 wrfbdy_d01_148806_64800_0002 wrfbdy_d01_148806_64800_0003 wrfbdy_d01_148806_64800_0004 wrfbdy_d01_148806_64800_0005 wrfbdy_d01_148806_64800_0006 wrfbdy_d01_148806_64800_0007 wrfbdy_d01_148806_64800_0008 wrfbdy_d01_148806_64800_0009 wrfbdy_d01_148806_64800_0010 wrfbdy_d01_148806_64800_0011 wrfbdy_d01_148806_64800_0012 wrfbdy_d01_148806_64800_0013 wrfbdy_d01_148806_64800_0014 wrfbdy_d01_148806_64800_0015 wrfbdy_d01_148806_64800_0016 wrfbdy_d01_148806_64800_0017 wrfbdy_d01_148806_64800_0018 wrfbdy_d01_148806_64800_0019 wrfbdy_d01_148806_64800_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e001' (2012/12/21 13:22:00 109722988 bytes, 352287.3 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e002' (2012/12/21 13:22:01 109722988 bytes, 350372.6 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e003' (2012/12/21 13:22:02 109722988 bytes, 180799.7 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e004' (2012/12/21 13:22:03 109722988 bytes, 296685.6 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e005' (2012/12/21 13:22:04 109722988 bytes, 337933.4 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e006' (2012/12/21 13:22:05 109722988 bytes, 331258.1 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e007' (2012/12/21 13:22:06 109722988 bytes, 320143.2 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e008' (2012/12/21 13:22:07 109722988 bytes, 335627.4 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_0_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e009' (2012/12/21 13:22:08 109722988 bytes, 344746.1 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e010' (2012/12/21 13:22:09 109722988 bytes, 325144.8 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e011' (2012/12/21 13:22:10 109722988 bytes, 329410.3 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e012' (2012/12/21 13:22:12 109722988 bytes, 381006.4 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e013' (2012/12/21 13:22:13 109722988 bytes, 299598.2 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e014' (2012/12/21 13:22:14 109722988 bytes, 251921.1 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e015' (2012/12/21 13:22:15 109722988 bytes, 324807.7 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e016' (2012/12/21 13:22:16 109722988 bytes, 349558.7 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e017' (2012/12/21 13:22:17 109722988 bytes, 307774.9 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e018' (2012/12/21 13:22:18 109722988 bytes, 377979.5 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e019' (2012/12/21 13:22:19 109722988 bytes, 355167.6 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_0_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_0_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060218/wrfbdy_d01_2008-06-02_18:00:00.e020' (2012/12/21 13:22:21 109722988 bytes, 335475.7 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfbiochemi_d01_2008-06-02_12:00:00
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-02_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfbiochemi_d01_2008-06-02_18:00:00' (2013/01/02 08:58:06 4646536 bytes, 77591.0 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfchemi_d01_2008-06-02_12:00:00 wrfchemi_d01_2008-06-02_13:00:00 wrfchemi_d01_2008-06-02_14:00:00 wrfchemi_d01_2008-06-02_15:00:00 wrfchemi_d01_2008-06-02_16:00:00 wrfchemi_d01_2008-06-02_17:00:00 wrfchemi_d01_2008-06-02_18:00:00
+ rm -rf wrffirechemi_d01_2008-06-02_12:00:00 wrffirechemi_d01_2008-06-02_13:00:00 wrffirechemi_d01_2008-06-02_14:00:00 wrffirechemi_d01_2008-06-02_15:00:00 wrffirechemi_d01_2008-06-02_16:00:00 wrffirechemi_d01_2008-06-02_17:00:00 wrffirechemi_d01_2008-06-02_18:00:00
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060218
+ export LL_DATE
+ [[ 2008060218 -le 2008060300 ]]
+ echo 2008060218
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060218
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060218
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060218
+ cut -c9-10
+ LL_HH=18
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_18:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_18:00:00' (2012/12/19 11:47:57 47528764 bytes, 209723.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_18:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_18:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_18:00:00' (2012/12/19 11:48:06 4545448 bytes, 143024.3 KBS )
+ ./advance_time
+ echo 2008060218 +1h
+ LL_DATE=2008060219
+ export LL_DATE
+ [[ 2008060219 -le 2008060300 ]]
+ echo 2008060219
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060219
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060219
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060219
+ cut -c9-10
+ LL_HH=19
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_19:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_19:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_19:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_19:00:00' (2012/12/19 11:47:57 47528764 bytes, 125326.7 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_19:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_19:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_19:00:00' (2012/12/19 11:48:07 4545448 bytes, 82442.1 KBS )
+ echo 2008060219 +1h
+ ./advance_time
+ LL_DATE=2008060220
+ export LL_DATE
+ [[ 2008060220 -le 2008060300 ]]
+ echo 2008060220
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060220
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060220
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060220
+ cut -c9-10
+ LL_HH=20
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_20:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_20:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_20:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_20:00:00' (2012/12/19 11:47:58 47528764 bytes, 285871.7 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_20:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_20:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_20:00:00' (2012/12/19 11:48:07 4545448 bytes, 125523.4 KBS )
+ echo 2008060220 +1h
+ LL_DATE=2008060221
+ export LL_DATE
+ [[ 2008060221 -le 2008060300 ]]
+ echo 2008060221
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060221
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060221
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060221
+ cut -c9-10
+ LL_HH=21
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_21:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_21:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_21:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_21:00:00' (2012/12/19 11:47:59 47528764 bytes, 216665.3 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_21:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_21:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_21:00:00' (2012/12/19 11:48:07 4545448 bytes, 141145.8 KBS )
+ echo 2008060221 +1h
+ ./advance_time
+ LL_DATE=2008060222
+ export LL_DATE
+ [[ 2008060222 -le 2008060300 ]]
+ echo 2008060222
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060222
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060222
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060222
+ cut -c9-10
+ LL_HH=22
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_22:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_22:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_22:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_22:00:00' (2012/12/19 11:48:00 47528764 bytes, 238902.8 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_22:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_22:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_22:00:00' (2012/12/19 11:48:08 4545448 bytes, 83147.9 KBS )
+ echo 2008060222 +1h
+ ./advance_time
+ LL_DATE=2008060223
+ export LL_DATE
+ [[ 2008060223 -le 2008060300 ]]
+ echo 2008060223
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060223
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060223
+ cut -c7-8
+ LL_DD=02
+ export LL_DD
+ echo 2008060223
+ cut -c9-10
+ LL_HH=23
+ export LL_HH
+ LL_FILE_DATE=2008-06-02_23:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_23:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-02_23:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrfchemi_d01_2008-06-02_23:00:00' (2012/12/19 11:48:00 47528764 bytes, 235765.8 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_23:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-02_23:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080602/wrffirechemi_d01_2008-06-02_23:00:00' (2012/12/19 11:48:08 4545448 bytes, 161243.9 KBS )
+ echo 2008060223 +1h
+ ./advance_time
+ LL_DATE=2008060300
+ export LL_DATE
+ [[ 2008060300 -le 2008060300 ]]
+ echo 2008060300
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060300
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060300
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060300
+ cut -c9-10
+ LL_HH=00
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_00:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_00:00:00' (2012/12/19 11:48:33 47528764 bytes, 211411.8 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_00:00:00' (2012/12/19 11:48:58 4545448 bytes, 176845.4 KBS )
+ echo 2008060300 +1h
+ ./advance_time
+ LL_DATE=2008060301
+ export LL_DATE
+ [[ 2008060301 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 54001,
   last_obs_days            = 148806,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ rm -rf filter_control_0001
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31826> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ rm -rf filter_control_0002
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31827> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ rm -rf filter_control_0003
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31828> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ rm -rf filter_control_0004
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31829> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ rm -rf filter_control_0005
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31830> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ rm -rf filter_control_0006
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31831> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ rm -rf filter_control_0007
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31832> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ rm -rf filter_control_0008
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31833> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ rm -rf filter_control_0009
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31834> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ rm -rf filter_control_0010
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31835> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ rm -rf filter_control_0011
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31836> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ rm -rf filter_control_0012
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31837> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ rm -rf filter_control_0013
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31838> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ rm -rf filter_control_0014
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31839> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ rm -rf filter_control_0015
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31840> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ rm -rf filter_control_0016
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31841> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ rm -rf filter_control_0017
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31842> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ rm -rf filter_control_0018
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31843> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ rm -rf filter_control_0019
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31844> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ rm -rf filter_control_0020
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31845> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-02_18:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-02_18:00:00 wrfout_d01_2008-06-02_18:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-03_00:00:00 wrfapm_d01_2008-06-03_00:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 15.3 KBS (cos=2011))
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 1211.4 KBS (cos=2011))
put  'dart_filter/input.nml' : 'input.nml' ( 19409 bytes, 916.9 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 172872.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 176575.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 108306.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 91593.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 156226.4 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 174777.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 158532.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 167437.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 120455.3 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 69337.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 106027.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 106253.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 112208.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 118964.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 101504.7 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 179130.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 134116.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 133465.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 77790.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 79534.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 147537.0 KBS (cos=2012))
put  'dart_filter/index.html' : 'index.html' ( 14383 bytes, 2302.0 KBS (cos=2011))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 3618884 bytes, 13430.1 KBS (cos=2011))
put  'dart_filter/prior_inflate_ic_old' : 'prior_inflate_ic_old' ( 488787408 bytes, 181313.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 147782.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 222478.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 181475.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 74187.0 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 105149.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 178456.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 165150.6 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 83093.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 181980.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 187908.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 159463.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 74061.2 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 173131.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 160514.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 173741.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 75367.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 98469.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 184889.8 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 4781459 bytes, 61335.4 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 77196.3 KBS (cos=2012))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 173285.0 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 210161.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 143836.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 105734.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 73051.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 63856.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 170701.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 113589.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 118540.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 183766.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 93273.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 94258.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 135581.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 249488.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 77862.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 143996.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 183840.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 135483.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 116875.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 62983.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 141026.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 73696.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 170830.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 181545.7 KBS (cos=2012))
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 35888.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19417 bytes, 4130.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3658 bytes, 795.4 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 720.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 23203.9 KBS (cos=2011))
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 110051.0 KBS (cos=2012))
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 29691.9 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19417 bytes, 4274.0 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 601.8 KBS (cos=2011))
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3658 bytes, 734.4 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21590.0 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 126969.9 KBS (cos=2012))
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 26362.3 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 259.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3658 bytes, 579.6 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19417 bytes, 1553.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 22538.3 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 83132.5 KBS (cos=2012))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 58.6 KBS (cos=2011))
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19417 bytes, 367.2 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 16671.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3658 bytes, 37.6 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 18445.1 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 207639.8 KBS (cos=2012))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19417 bytes, 2092.4 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 19608.0 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 780.1 KBS (cos=2011))
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3658 bytes, 847.6 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 11902.2 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 167448.1 KBS (cos=2012))
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23170.5 KBS (cos=2011))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19417 bytes, 955.2 KBS (cos=2011))
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3658 bytes, 897.4 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 534.9 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 4590.9 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 208438.2 KBS (cos=2012))
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21399.4 KBS (cos=2011))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19417 bytes, 3765.9 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 161.8 KBS (cos=2011))
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3658 bytes, 141.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14838.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 191556.7 KBS (cos=2012))
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 20801.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19417 bytes, 1333.5 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 326.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3658 bytes, 783.3 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 19277.8 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 213008.0 KBS (cos=2012))
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23264.2 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 243.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3658 bytes, 749.4 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19417 bytes, 4813.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8458.8 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 189884.4 KBS (cos=2012))
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 18966.7 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3658 bytes, 86.0 KBS (cos=2011))
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19417 bytes, 422.4 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 226.7 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7929.1 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 138601.7 KBS (cos=2012))
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 28982.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 475.7 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19417 bytes, 1707.1 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3658 bytes, 302.8 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 16355.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 122254.0 KBS (cos=2012))
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 16714.2 KBS (cos=2011))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3658 bytes, 284.8 KBS (cos=2011))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 249.7 KBS (cos=2011))
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19417 bytes, 1083.2 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 6090.0 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 121753.2 KBS (cos=2012))
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 23770.5 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 203.6 KBS (cos=2011))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3658 bytes, 896.3 KBS (cos=2011))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19417 bytes, 364.1 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21754.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 184936.3 KBS (cos=2012))
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21410.1 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19417 bytes, 2019.0 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3658 bytes, 654.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 183.0 KBS (cos=2011))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 20159.2 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 192318.8 KBS (cos=2012))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 131.1 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24029.6 KBS (cos=2011))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19417 bytes, 1313.6 KBS (cos=2011))
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3658 bytes, 170.7 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 12472.5 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 218739.3 KBS (cos=2012))
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31285.5 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 342.0 KBS (cos=2011))
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3658 bytes, 157.9 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19417 bytes, 2371.9 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 12028.4 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 180245.0 KBS (cos=2012))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24864.4 KBS (cos=2011))
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19417 bytes, 1144.7 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 182.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3658 bytes, 636.2 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 14798.2 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 114672.7 KBS (cos=2012))
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 18708.5 KBS (cos=2011))
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19417 bytes, 4428.1 KBS (cos=2011))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3658 bytes, 463.4 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 142.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21602.1 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 173998.0 KBS (cos=2012))
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 38849.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 196.0 KBS (cos=2011))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19417 bytes, 3757.2 KBS (cos=2011))
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3658 bytes, 484.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 7038.6 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 104617.9 KBS (cos=2012))
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 30157.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3658 bytes, 818.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 240.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19417 bytes, 3898.2 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 6376.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 187837.4 KBS (cos=2012))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 781360936 bytes, 185400.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0001' : 'wrfapm_d01_2008-06-03_00:00:00_0001' ( 451038888 bytes, 78553.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0001' : 'wrfout_d01_2008-06-03_00:00:00_0001' ( 781360936 bytes, 118933.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0001' : 'wrfout_d01_2008-06-02_18:00:00_0001' ( 781360936 bytes, 119422.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 781360936 bytes, 85841.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0002' : 'wrfapm_d01_2008-06-03_00:00:00_0002' ( 451038888 bytes, 191100.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0002' : 'wrfout_d01_2008-06-03_00:00:00_0002' ( 781360936 bytes, 143763.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 781360936 bytes, 156768.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0002' : 'wrfout_d01_2008-06-02_18:00:00_0002' ( 781360936 bytes, 78157.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0003' : 'wrfout_d01_2008-06-02_18:00:00_0003' ( 781360936 bytes, 159818.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0003' : 'wrfapm_d01_2008-06-03_00:00:00_0003' ( 451038888 bytes, 111071.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 781360936 bytes, 206638.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0004' : 'wrfout_d01_2008-06-02_18:00:00_0004' ( 781360936 bytes, 227130.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0004' : 'wrfapm_d01_2008-06-03_00:00:00_0004' ( 451038888 bytes, 107120.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0003' : 'wrfout_d01_2008-06-03_00:00:00_0003' ( 781360936 bytes, 66692.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 781360936 bytes, 133613.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0005' : 'wrfout_d01_2008-06-03_00:00:00_0005' ( 781360936 bytes, 202648.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0004' : 'wrfout_d01_2008-06-03_00:00:00_0004' ( 781360936 bytes, 75450.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 781360936 bytes, 227697.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0005' : 'wrfapm_d01_2008-06-03_00:00:00_0005' ( 451038888 bytes, 76553.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0005' : 'wrfout_d01_2008-06-02_18:00:00_0005' ( 781360936 bytes, 81947.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0006' : 'wrfout_d01_2008-06-02_18:00:00_0006' ( 781360936 bytes, 134098.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0006' : 'wrfapm_d01_2008-06-03_00:00:00_0006' ( 451038888 bytes, 96600.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 781360936 bytes, 209952.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0007' : 'wrfapm_d01_2008-06-03_00:00:00_0007' ( 451038888 bytes, 287059.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0006' : 'wrfout_d01_2008-06-03_00:00:00_0006' ( 781360936 bytes, 86731.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0007' : 'wrfout_d01_2008-06-02_18:00:00_0007' ( 781360936 bytes, 73934.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 781360936 bytes, 90850.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0008' : 'wrfout_d01_2008-06-02_18:00:00_0008' ( 781360936 bytes, 90610.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0008' : 'wrfapm_d01_2008-06-03_00:00:00_0008' ( 451038888 bytes, 192176.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0008' : 'wrfout_d01_2008-06-03_00:00:00_0008' ( 781360936 bytes, 106414.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0007' : 'wrfout_d01_2008-06-03_00:00:00_0007' ( 781360936 bytes, 67931.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0009' : 'wrfout_d01_2008-06-02_18:00:00_0009' ( 781360936 bytes, 203024.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 781360936 bytes, 144081.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0009' : 'wrfapm_d01_2008-06-03_00:00:00_0009' ( 451038888 bytes, 99516.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0009' : 'wrfout_d01_2008-06-03_00:00:00_0009' ( 781360936 bytes, 129382.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0010' : 'wrfout_d01_2008-06-03_00:00:00_0010' ( 781360936 bytes, 211394.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 781360936 bytes, 84882.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 781360936 bytes, 222341.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0010' : 'wrfapm_d01_2008-06-03_00:00:00_0010' ( 451038888 bytes, 83924.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0010' : 'wrfout_d01_2008-06-02_18:00:00_0010' ( 781360936 bytes, 86476.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0011' : 'wrfapm_d01_2008-06-03_00:00:00_0011' ( 451038888 bytes, 106079.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0011' : 'wrfout_d01_2008-06-02_18:00:00_0011' ( 781360936 bytes, 129011.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 781360936 bytes, 206234.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0011' : 'wrfout_d01_2008-06-03_00:00:00_0011' ( 781360936 bytes, 120894.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0012' : 'wrfapm_d01_2008-06-03_00:00:00_0012' ( 451038888 bytes, 192287.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 781360936 bytes, 109247.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0013' : 'wrfout_d01_2008-06-03_00:00:00_0013' ( 781360936 bytes, 148699.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0012' : 'wrfout_d01_2008-06-03_00:00:00_0012' ( 781360936 bytes, 94528.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0013' : 'wrfout_d01_2008-06-02_18:00:00_0013' ( 781360936 bytes, 117625.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0012' : 'wrfout_d01_2008-06-02_18:00:00_0012' ( 781360936 bytes, 75086.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0013' : 'wrfapm_d01_2008-06-03_00:00:00_0013' ( 451038888 bytes, 188381.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 781360936 bytes, 230786.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0014' : 'wrfout_d01_2008-06-03_00:00:00_0014' ( 781360936 bytes, 124114.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0014' : 'wrfapm_d01_2008-06-03_00:00:00_0014' ( 451038888 bytes, 73167.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0014' : 'wrfout_d01_2008-06-02_18:00:00_0014' ( 781360936 bytes, 103727.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 781360936 bytes, 126680.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0015' : 'wrfapm_d01_2008-06-03_00:00:00_0015' ( 451038888 bytes, 192341.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0015' : 'wrfout_d01_2008-06-02_18:00:00_0015' ( 781360936 bytes, 108975.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0015' : 'wrfout_d01_2008-06-03_00:00:00_0015' ( 781360936 bytes, 194392.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0016' : 'wrfout_d01_2008-06-02_18:00:00_0016' ( 781360936 bytes, 131339.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0016' : 'wrfapm_d01_2008-06-03_00:00:00_0016' ( 451038888 bytes, 110613.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 781360936 bytes, 96251.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 781360936 bytes, 145938.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0017' : 'wrfout_d01_2008-06-02_18:00:00_0017' ( 781360936 bytes, 246964.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0017' : 'wrfout_d01_2008-06-03_00:00:00_0017' ( 781360936 bytes, 241991.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0016' : 'wrfout_d01_2008-06-03_00:00:00_0016' ( 781360936 bytes, 85875.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0017' : 'wrfapm_d01_2008-06-03_00:00:00_0017' ( 451038888 bytes, 92486.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0018' : 'wrfapm_d01_2008-06-03_00:00:00_0018' ( 451038888 bytes, 89397.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 781360936 bytes, 103026.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0018' : 'wrfout_d01_2008-06-03_00:00:00_0018' ( 781360936 bytes, 116378.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 781360936 bytes, 195698.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0018' : 'wrfout_d01_2008-06-02_18:00:00_0018' ( 781360936 bytes, 98631.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0019' : 'wrfout_d01_2008-06-02_18:00:00_0019' ( 781360936 bytes, 228980.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0019' : 'wrfapm_d01_2008-06-03_00:00:00_0019' ( 451038888 bytes, 110822.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-02_18:00:00_0020' : 'wrfout_d01_2008-06-02_18:00:00_0020' ( 781360936 bytes, 144787.5 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 1028.1 KBS (cos=2011))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 781360936 bytes, 122632.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_00:00:00_0020' : 'wrfapm_d01_2008-06-03_00:00:00_0020' ( 451038888 bytes, 154416.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0019' : 'wrfout_d01_2008-06-03_00:00:00_0019' ( 781360936 bytes, 97627.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0020' : 'wrfout_d01_2008-06-03_00:00:00_0020' ( 781360936 bytes, 104038.3 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060300
+ export L_DATE
+ [[ 2008060300 -le 2008060300 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ echo 2008060300
+ cut -c1-4
+ L_YY=2008
+ export L_YY
+ echo 2008060300
+ cut -c5-6
+ L_MM=06
+ export L_MM
+ echo 2008060300
+ cut -c7-8
+ L_DD=03
+ export L_DD
+ echo 2008060300
+ cut -c9-10
+ L_HH=00
+ export L_HH
+ L_FILE_DATE=2008-06-03_00:00:00
+ export L_FILE_DATE
+ echo 2008060300 -6h
+ ./advance_time
+ PAST_DATE=2008060218
+ export PAST_DATE
+ echo 2008060218
+ cut -c1-4
+ PAST_YY=2008
+ export PAST_YY
+ echo 2008060218
+ cut -c5-6
+ PAST_MM=06
+ export PAST_MM
+ echo 2008060218
+ cut -c7-8
+ PAST_DD=02
+ export PAST_DD
+ echo 2008060218
+ cut -c9-10
+ PAST_HH=18
+ export PAST_HH
+ PAST_FILE_DATE=2008-06-02_18:00:00
+ export PAST_FILE_DATE
+ echo 2008060300 +6h
+ ./advance_time
+ NEXT_DATE=2008060306
+ export NEXT_DATE
+ echo 2008060306
+ cut -c1-4
+ NEXT_YY=2008
+ export NEXT_YY
+ echo 2008060306
+ cut -c5-6
+ NEXT_MM=06
+ export NEXT_MM
+ echo 2008060306
+ cut -c7-8
+ NEXT_DD=03
+ export NEXT_DD
+ echo 2008060306
+ cut -c9-10
+ NEXT_HH=06
+ export NEXT_HH
+ NEXT_FILE_DATE=2008-06-03_06:00:00
+ export NEXT_FILE_DATE
+ echo 2008060300 -3h
+ ./advance_time
+ ASIM_MIN_DATE=2008060221
+ export ASIM_MIN_DATE
+ echo 2008060221
+ cut -c1-4
+ ASIM_MIN_YY=2008
+ export ASIM_MIN_YY
+ echo 2008060221
+ cut -c5-6
+ ASIM_MIN_MM=06
+ export ASIM_MIN_MM
+ echo 2008060221
+ cut -c7-8
+ ASIM_MIN_DD=02
+ export ASIM_MIN_DD
+ echo
+ cut -c9-10
+ ASIM_MIN_HH=''
+ export ASIM_MIN_HH
+ echo 2008060300 +3h
+ ./advance_time
+ ASIM_MAX_DATE=2008060303
+ export ASIM_MAX_DATE
+ echo 2008060303
+ cut -c1-4
+ ASIM_MAX_YY=2008
+ export ASIM_MAX_YY
+ echo 2008060303
+ cut -c5-6
+ ASIM_MAX_MM=06
+ export ASIM_MAX_MM
+ echo 2008060303
+ cut -c7-8
+ ASIM_MAX_DD=03
+ export ASIM_MAX_DD
+ echo
+ cut -c9-10
+ ASIM_MAX_HH=''
+ export ASIM_MAX_HH
+ echo 2008060300 0 -g
+ ./advance_time
+ set -A GREG_DATA 148807 0
+ DAY_GREG=148807
+ export DAY_GREG
+ SEC_GREG=0
+ export SEC_GREG
+ echo 2008060306 0 -g
+ ./advance_time
+ set -A GREG_DATA 148807 21600
+ NEXT_DAY_GREG=148807
+ export NEXT_DAY_GREG
+ NEXT_SEC_GREG=21600
+ export NEXT_SEC_GREG
+ echo BEGIN RUN_FILTER CODE BLOCK
BEGIN RUN_FILTER CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01 ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/filter ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/da_run_hold.ksh ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/final_full.20 ./.
+ NL_DART_RESTART_NAME=$'\'dart_wrf_vector\''
+ export NL_DART_RESTART_NAME
+ NL_PRINT_DATA_RANGES=.false.
+ export NL_PRINT_DATA_RANGES
+ rm input.nml
rm: cannot remove `input.nml': No such file or directory
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 54001,
   last_obs_days            = 148806,
   last_obs_seconds         = 75600,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 54001,
   last_obs_days                = 148806,
   last_obs_seconds             = 75600,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ ! false == true ]]
+ [[ -f job.ksh ]]
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=conv_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 1                                  # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J conv_31608                          # job name
#BSUB -o conv_31608.jout                      # output filename
#BSUB -e conv_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
# Loop through ensemble members
let IMEM=1
while [[ ${IMEM} -le 20 ]]; do
   export KMEM=${IMEM}
   export CMEM=${IMEM}
   if [[ ${IMEM} -lt 1000 ]]; then export KMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 100 ]]; then export KMEM=00${IMEM}; export CMEM=0${IMEM}; fi
   if [[ ${IMEM} -lt 10 ]]; then export KMEM=000${IMEM}; export CMEM=00${IMEM}; fi
#
# Copy ensemble member wrfout to filter directory 
   cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_${KMEM} wrfinput_d01
#
# make run directory for file conversions
   mkdir convert_file_${KMEM} 
   cd convert_file_${KMEM} 
   cp ../wrf_to_dart ./.
   cp ../input.nml ./.
   cp ../wrfinput_d01 ./.
#
# Run wrf_to_dart
   ./wrf_to_dart > index.html 2>&1 
   mv dart_wrf_vector ../filter_ic_old.${KMEM}
#
   export RC=$?     
   if [[ -f CONV_SUCCESS ]]; then rm -rf CONV_SUCCESS; fi     
   if [[ -f CONV_FAILED ]]; then rm -rf CONV_FAILED; fi          
   if [[ $RC = 0 ]]; then
      touch CONV_SUCCESS
   else
      touch CONV_FAILED 
      exit
   fi
   cd ..
   let IMEM=${IMEM}+1
done
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31984> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys3642-ib>>
<<Job is finished>>
+ [[ 2008060300 -eq 2008060118 ]]
+ NL_INF_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_SD_INITIAL_FROM_RESTART_PRIOR=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_PRIOR
+ NL_INF_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_INITIAL_FROM_RESTART_POST
+ NL_INF_SD_INITIAL_FROM_RESTART_POST=.true.
+ export NL_INF_SD_INITIAL_FROM_RESTART_POST
+ [[ 2008060300 -ne 2008060118 ]]
+ [[ 2 != 0 ]]
+ INF_OUT_FILE_NAME_PRIOR=/glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/prior_inflate_ic_new
+ export INF_OUT_FILE_NAME_PRIOR
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060218/dart_filter/prior_inflate_ic_new prior_inflate_ic_old
+ [[ 0 != 0 ]]
+ FILE=obs_seq.out
+ export FILE
+ [[ MOPITT_CO == NONE ]]
+ [[ MOPITT_CO == IASI_O3 ]]
+ [[ MOPITT_CO == MOPITT_CO ]]
+ FILE=obs_seq.proc
+ export FILE
+ true
+ hsi get obs_seq.out : /MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060300/obs_seq.proc
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'obs_seq.out' : '/MIZZI/AVE_TEST_DATA/obs_MOPCOMB/2008060300/obs_seq.proc' (2013/03/14 10:29:05 3766626 bytes, 101041.7 KBS )
+ echo 2008060221 0 -g
+ ./advance_time
+ set -A temp 148806 75600
+ (( temp[1]=75600+1 ))
+ NL_FIRST_OBS_DAYS=148806
+ export NL_FIRST_OBS_DAYS
+ NL_FIRST_OBS_SECONDS=75601
+ export NL_FIRST_OBS_SECONDS
+ echo 2008060303 0 -g
+ ./advance_time
+ set -A temp 148807 10800
+ NL_LAST_OBS_DAYS=148807
+ export NL_LAST_OBS_DAYS
+ NL_LAST_OBS_SECONDS=10800
+ export NL_LAST_OBS_SECONDS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 75601,
   last_obs_days            = 148807,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 0, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ [[ -f job.ksh ]]
+ rm job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=filt_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J filt_31608                          # job name
#BSUB -o filt_31608.jout                      # output filename
#BSUB -e filt_31608.jerr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf *.jerr
rm -rf *.jout
mpirun.lsf ./filter > index.html 2>&1 
export RC=$?
if [[ -f FILTER_SUCCESS ]]; then rm -rf FILTER_SUCCESS; fi     
if [[ -f FILTER_FAILED ]]; then rm -rf FILTER_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch FILTER_SUCCESS
else
   touch FILTER_FAILED 
   exit
fi
EOF
1> job.ksh
+ bsub -K
+ 0< job.ksh
Job <31985> is submitted to queue <small>.
<<Waiting for dispatch ...>>
<<Starting on ys3642-ib>>
<<Job is finished>>
+ [[ -e FILTER_FAILED ]]
+ NL_INPUT_FILE_NAME=$'\'filter_ic_new\''
+ export NL_INPUT_FILE_NAME
+ NL_OUTPUT_FILE_NAME=$'\'assim_model_state_ic\''
+ export NL_OUTPUT_FILE_NAME
+ NL_SINGLE_RESTART_FILE_IN=.false.
+ export NL_SINGLE_RESTART_FILE_IN
+ NL_SINGLE_RESTART_FILE_OUT=.false.
+ export NL_SINGLE_RESTART_FILE_OUT
+ NL_INPUT_IS_MODEL_ADVANCE_FILE=.false.
+ export NL_INPUT_IS_MODEL_ADVANCE_FILE
+ NL_OUTPUT_IS_MODEL_ADVANCE_FILE=.true.
+ export NL_OUTPUT_IS_MODEL_ADVANCE_FILE
+ NL_OVERWRITE_ADVANCE_TIME=.true.
+ export NL_OVERWRITE_ADVANCE_TIME
+ NL_NEW_ADVANCE_DAYS=148807
+ export NL_NEW_ADVANCE_DAYS
+ NL_NEW_ADVANCE_SECS=21600
+ export NL_NEW_ADVANCE_SECS
+ NL_ENS_SIZE=20
+ export NL_ENS_SIZE
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 75601,
   last_obs_days            = 148807,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ ./restart_file_tool
 Starting program restart_file_tool
 Initializing the utilities module.
 Trying to log to unit           10
 Trying to open file dart_log.out
 
 --------------------------------------
 Starting ... at YYYY MM DD HH MM SS = 
                 2013  3 15  2 27 47
 Program restart_file_tool
 --------------------------------------
 
 set_nml_output Echo NML values to log file only
 Trying to open namelist log dart_log.nml
 initialize_mpi_utilities: Running single process
 ------------------------------------------------------
 
 
 -------------- ASSIMILATE_THESE_OBS_TYPES --------------
 RADIOSONDE_TEMPERATURE
 RADIOSONDE_U_WIND_COMPONENT
 RADIOSONDE_V_WIND_COMPONENT
 ACARS_U_WIND_COMPONENT
 ACARS_V_WIND_COMPONENT
 ACARS_TEMPERATURE
 AIRCRAFT_U_WIND_COMPONENT
 AIRCRAFT_V_WIND_COMPONENT
 AIRCRAFT_TEMPERATURE
 SAT_U_WIND_COMPONENT
 SAT_V_WIND_COMPONENT
 MOPITT_CO_RETRIEVAL
 -------------- EVALUATE_THESE_OBS_TYPES --------------
 ------------------------------------------------------
 
 ******************
 **  DOMAIN # 1  **
 ******************
   dt from wrfinput_d0X file is:    180.000000000000
 static_init_model: state vector array    1 is U
 static_init_model: state vector array    2 is V
 static_init_model: state vector array    3 is W
 static_init_model: state vector array    4 is PH
 static_init_model: state vector array    5 is T
 static_init_model: state vector array    6 is MU
 static_init_model: state vector array    7 is QVAPOR
 static_init_model: state vector array    8 is QRAIN
 static_init_model: state vector array    9 is QCLOUD
 static_init_model: state vector array   10 is QSNOW
 static_init_model: state vector array   11 is QICE
 static_init_model: state vector array   12 is U10
 static_init_model: state vector array   13 is V10
 static_init_model: state vector array   14 is T2
 static_init_model: state vector array   15 is TH2
 static_init_model: state vector array   16 is Q2
 static_init_model: state vector array   17 is PSFC
 static_init_model: state vector array   18 is o3
 static_init_model: state vector array   19 is co
 static_init_model: state vector array   20 is no
 static_init_model: state vector array   21 is no2
 static_init_model: state vector array   22 is hno3
 static_init_model: state vector array   23 is hno4
 static_init_model: state vector array   24 is n2o5
 static_init_model: state vector array   25 is pan
 static_init_model: state vector array   26 is mek
 static_init_model: state vector array   27 is ald
 static_init_model: state vector array   28 is ch3o2
 static_init_model: state vector array   29 is c3h8
 static_init_model: state vector array   30 is c2h6
 static_init_model: state vector array   31 is acet
 static_init_model: state vector array   32 is hcho
 static_init_model: state vector array   33 is c2h4
 static_init_model: state vector array   34 is c3h6
 static_init_model: state vector array   35 is tol
 static_init_model: state vector array   36 is mvk
 static_init_model: state vector array   37 is bigalk
 static_init_model: state vector array   38 is isopr
 static_init_model: state vector array   39 is macr
 static_init_model: state vector array   40 is glyald
 static_init_model: state vector array   41 is c10h16
 static_init_model   wrf model size is     30549210
  Model size/restart data length =30549210
output file advance_time is now set to day=148807, sec=21600
output file advance_time is now set to 2008 Jun 03 06:00:00
input file data_time was day=148807, sec=0
input file data_time was 2008 Jun 03 00:00:00
 
 --------------------------------------
 Finished ... at YYYY MM DD HH MM SS = 
                 2013  3 15  2 27 56
 Program restart_file_tool
 --------------------------------------
 
+ echo COMPLETED RUN_FILTER CODE BLOCK
COMPLETED RUN_FILTER CODE BLOCK
+ echo BEGIN RUN_WRFCHEM CODE BLOCK
BEGIN RUN_WRFCHEM CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/cycle ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/cycle
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrf_to_dart ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/restart_file_tool ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_model.ksh ./.
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0002 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0003 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0004 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0005 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0006 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0007 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0008 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0009 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0010 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0011 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0012 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0013 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0014 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0015 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0016 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0017 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0018 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0019 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter/assim_model_state_ic.0020 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/assim_model_state_ic_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfinput_d01_148807_0_0001 wrfinput_d01_148807_0_0002 wrfinput_d01_148807_0_0003 wrfinput_d01_148807_0_0004 wrfinput_d01_148807_0_0005 wrfinput_d01_148807_0_0006 wrfinput_d01_148807_0_0007 wrfinput_d01_148807_0_0008 wrfinput_d01_148807_0_0009 wrfinput_d01_148807_0_0010 wrfinput_d01_148807_0_0011 wrfinput_d01_148807_0_0012 wrfinput_d01_148807_0_0013 wrfinput_d01_148807_0_0014 wrfinput_d01_148807_0_0015 wrfinput_d01_148807_0_0016 wrfinput_d01_148807_0_0017 wrfinput_d01_148807_0_0018 wrfinput_d01_148807_0_0019 wrfinput_d01_148807_0_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0001 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0001' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0001' (2013/03/15 02:17:32 781360936 bytes, 479490.5 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0002 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0002' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0002' (2013/03/15 02:17:37 781360936 bytes, 516701.4 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0003 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0003' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0003' (2013/03/15 02:17:47 781360936 bytes, 352586.2 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0004 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0004' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0004' (2013/03/15 02:17:50 781360936 bytes, 447831.6 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0005 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0005' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0005' (2013/03/15 02:17:49 781360936 bytes, 521722.3 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0006 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0006' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0006' (2013/03/15 02:17:59 781360936 bytes, 307759.7 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0007 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0007' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0007' (2013/03/15 02:18:07 781360936 bytes, 324937.5 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0008 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0008' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0008' (2013/03/15 02:18:07 781360936 bytes, 518786.1 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfinput_d01_148807_21600_0009 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0009' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0009' (2013/03/15 02:18:13 781360936 bytes, 500448.7 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0010 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0010' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0010' (2013/03/15 02:18:14 781360936 bytes, 393953.2 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0011 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0011' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0011' (2013/03/15 02:18:23 781360936 bytes, 417348.2 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0012 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0012' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0012' (2013/03/15 02:18:29 781360936 bytes, 331435.8 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0013 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0013' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0013' (2013/03/15 02:18:29 781360936 bytes, 504977.9 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0014 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0014' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0014' (2013/03/15 02:18:36 781360936 bytes, 501496.4 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0015 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0015' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0015' (2013/03/15 02:18:40 781360936 bytes, 509169.6 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0016 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0016' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0016' (2013/03/15 02:18:48 781360936 bytes, 492684.6 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0017 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0017' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0017' (2013/03/15 02:18:47 781360936 bytes, 533654.1 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0018 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0018' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0018' (2013/03/15 02:18:54 781360936 bytes, 477050.1 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0019 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0019' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0019' (2013/03/15 02:19:02 781360936 bytes, 340844.3 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfinput_d01_148807_21600_0020 : /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfinput_d01_148807_21600_0020' : '/MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060218/wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0020' (2013/03/15 02:19:05 781360936 bytes, 403168.7 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp wrfinput_d01_148807_21600_0001 /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/wrfinput_d01
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRF
+ rm -rf wrfbdy_d01_148807_0_0001 wrfbdy_d01_148807_0_0002 wrfbdy_d01_148807_0_0003 wrfbdy_d01_148807_0_0004 wrfbdy_d01_148807_0_0005 wrfbdy_d01_148807_0_0006 wrfbdy_d01_148807_0_0007 wrfbdy_d01_148807_0_0008 wrfbdy_d01_148807_0_0009 wrfbdy_d01_148807_0_0010 wrfbdy_d01_148807_0_0011 wrfbdy_d01_148807_0_0012 wrfbdy_d01_148807_0_0013 wrfbdy_d01_148807_0_0014 wrfbdy_d01_148807_0_0015 wrfbdy_d01_148807_0_0016 wrfbdy_d01_148807_0_0017 wrfbdy_d01_148807_0_0018 wrfbdy_d01_148807_0_0019 wrfbdy_d01_148807_0_0020
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ CMEM=1
+ export CMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ CMEM=01
+ export CMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ CMEM=001
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0001 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e001
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0001' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e001' (2012/12/21 13:22:42 109722992 bytes, 341226.1 KBS )
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ CMEM=2
+ export CMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ CMEM=02
+ export CMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ CMEM=002
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0002 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e002
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0002' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e002' (2012/12/21 13:22:44 109722992 bytes, 357357.3 KBS )
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ CMEM=3
+ export CMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ CMEM=03
+ export CMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ CMEM=003
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0003 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e003
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0003' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e003' (2012/12/21 13:22:45 109722992 bytes, 374934.3 KBS )
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ CMEM=4
+ export CMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ CMEM=04
+ export CMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ CMEM=004
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0004 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e004
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0004' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e004' (2012/12/21 13:22:46 109722992 bytes, 343827.6 KBS )
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ CMEM=5
+ export CMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ CMEM=05
+ export CMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ CMEM=005
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0005 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e005
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0005' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e005' (2012/12/21 13:22:47 109722992 bytes, 324322.9 KBS )
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ CMEM=6
+ export CMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ CMEM=06
+ export CMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ CMEM=006
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0006 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e006
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0006' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e006' (2012/12/21 13:22:48 109722992 bytes, 337478.4 KBS )
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ CMEM=7
+ export CMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ CMEM=07
+ export CMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ CMEM=007
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0007 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e007
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0007' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e007' (2012/12/21 13:22:49 109722992 bytes, 354461.0 KBS )
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ CMEM=8
+ export CMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ CMEM=08
+ export CMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ CMEM=008
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0008 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e008
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0008' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e008' (2012/12/21 13:22:50 109722992 bytes, 341909.8 KBS )
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ CMEM=9
+ export CMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ CMEM=09
+ export CMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ CMEM=009
+ export CMEM
+ true
+ hsi get wrfbdy_d01_148807_21600_0009 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e009
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0009' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e009' (2012/12/21 13:22:51 109722992 bytes, 380316.0 KBS )
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ CMEM=10
+ export CMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ CMEM=010
+ export CMEM
+ [[ 10 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0010 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e010
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0010' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e010' (2012/12/21 13:22:52 109722992 bytes, 238664.2 KBS )
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ CMEM=11
+ export CMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ CMEM=011
+ export CMEM
+ [[ 11 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0011 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e011
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0011' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e011' (2012/12/21 13:22:54 109722992 bytes, 338704.4 KBS )
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ CMEM=12
+ export CMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ CMEM=012
+ export CMEM
+ [[ 12 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0012 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e012
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0012' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e012' (2012/12/21 13:22:56 109722992 bytes, 314590.1 KBS )
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ CMEM=13
+ export CMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ CMEM=013
+ export CMEM
+ [[ 13 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0013 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e013
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0013' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e013' (2012/12/21 13:22:57 109722992 bytes, 206966.3 KBS )
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ CMEM=14
+ export CMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ CMEM=014
+ export CMEM
+ [[ 14 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0014 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e014
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0014' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e014' (2012/12/21 13:22:58 109722992 bytes, 287042.2 KBS )
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ CMEM=15
+ export CMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ CMEM=015
+ export CMEM
+ [[ 15 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0015 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e015
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0015' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e015' (2012/12/21 13:22:59 109722992 bytes, 336562.3 KBS )
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ CMEM=16
+ export CMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ CMEM=016
+ export CMEM
+ [[ 16 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0016 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e016
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0016' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e016' (2012/12/21 13:23:00 109722992 bytes, 268901.9 KBS )
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ CMEM=17
+ export CMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ CMEM=017
+ export CMEM
+ [[ 17 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0017 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e017
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0017' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e017' (2012/12/21 13:23:01 109722992 bytes, 241250.2 KBS )
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ CMEM=18
+ export CMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ CMEM=018
+ export CMEM
+ [[ 18 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0018 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e018
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0018' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e018' (2012/12/21 13:23:02 109722992 bytes, 288849.6 KBS )
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ CMEM=19
+ export CMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ CMEM=019
+ export CMEM
+ [[ 19 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0019 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e019
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0019' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e019' (2012/12/21 13:23:03 109722992 bytes, 372511.9 KBS )
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ CMEM=20
+ export CMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ CMEM=020
+ export CMEM
+ [[ 20 -lt 10 ]]
+ true
+ hsi get wrfbdy_d01_148807_21600_0020 : /MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e020
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbdy_d01_148807_21600_0020' : '/MIZZI/AVE_TEST_DATA/wpb_rc_gabi/2008060300/wrfbdy_d01_2008-06-03_00:00:00.e020' (2012/12/21 13:23:04 109722992 bytes, 345290.6 KBS )
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfbiochemi_d01_2008-06-02_18:00:00
+ true
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfbiochemi_d01_2008-06-03_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfbiochemi_d01_2008-06-03_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfbiochemi_d01_2008-06-03_00:00:00' (2013/01/02 08:58:07 4646536 bytes, 77285.1 KBS )
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/WRFCHEM_RUN
+ rm -rf wrfchemi_d01_2008-06-02_18:00:00 wrfchemi_d01_2008-06-02_19:00:00 wrfchemi_d01_2008-06-02_20:00:00 wrfchemi_d01_2008-06-02_21:00:00 wrfchemi_d01_2008-06-02_22:00:00 wrfchemi_d01_2008-06-02_23:00:00 wrfchemi_d01_2008-06-03_00:00:00
+ rm -rf wrffirechemi_d01_2008-06-02_18:00:00 wrffirechemi_d01_2008-06-02_19:00:00 wrffirechemi_d01_2008-06-02_20:00:00 wrffirechemi_d01_2008-06-02_21:00:00 wrffirechemi_d01_2008-06-02_22:00:00 wrffirechemi_d01_2008-06-02_23:00:00 wrffirechemi_d01_2008-06-03_00:00:00
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_time ./.
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/input.nml ./.
+ true
+ LL_DATE=2008060300
+ export LL_DATE
+ [[ 2008060300 -le 2008060306 ]]
+ echo 2008060300
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060300
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060300
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060300
+ cut -c9-10
+ LL_HH=00
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_00:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_00:00:00' (2012/12/19 11:48:33 47528764 bytes, 206112.6 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_00:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_00:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_00:00:00' (2012/12/19 11:48:58 4545448 bytes, 93159.5 KBS )
+ echo 2008060300 +1h
+ ./advance_time
+ LL_DATE=2008060301
+ export LL_DATE
+ [[ 2008060301 -le 2008060306 ]]
+ echo 2008060301
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060301
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060301
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060301
+ cut -c9-10
+ LL_HH=01
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_01:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_01:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_01:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_01:00:00' (2012/12/19 11:48:34 47528764 bytes, 335378.1 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_01:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_01:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_01:00:00' (2012/12/19 11:48:58 4545448 bytes, 97701.0 KBS )
+ echo 2008060301 +1h
+ ./advance_time
+ LL_DATE=2008060302
+ export LL_DATE
+ [[ 2008060302 -le 2008060306 ]]
+ echo 2008060302
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060302
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060302
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060302
+ cut -c9-10
+ LL_HH=02
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_02:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_02:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_02:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_02:00:00' (2012/12/19 11:48:35 47528764 bytes, 264691.2 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_02:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_02:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_02:00:00' (2012/12/19 11:48:58 4545448 bytes, 180775.9 KBS )
+ echo 2008060302 +1h
+ ./advance_time
+ LL_DATE=2008060303
+ export LL_DATE
+ [[ 2008060303 -le 2008060306 ]]
+ echo 2008060303
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060303
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060303
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060303
+ cut -c9-10
+ LL_HH=03
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_03:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_03:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_03:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_03:00:00' (2012/12/19 11:48:35 47528764 bytes, 282522.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_03:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_03:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_03:00:00' (2012/12/19 11:48:59 4545448 bytes, 131470.0 KBS )
+ echo 2008060303 +1h
+ ./advance_time
+ LL_DATE=2008060304
+ export LL_DATE
+ [[ 2008060304 -le 2008060306 ]]
+ echo 2008060304
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060304
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060304
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060304
+ cut -c9-10
+ LL_HH=04
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_04:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_04:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_04:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_04:00:00' (2012/12/19 11:48:37 47528764 bytes, 243060.4 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_04:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_04:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_04:00:00' (2012/12/19 11:48:59 4545448 bytes, 120434.3 KBS )
+ echo 2008060304 +1h
+ ./advance_time
+ LL_DATE=2008060305
+ export LL_DATE
+ [[ 2008060305 -le 2008060306 ]]
+ echo 2008060305
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060305
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060305
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060305
+ cut -c9-10
+ LL_HH=05
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_05:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_05:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_05:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_05:00:00' (2012/12/19 11:48:38 47528764 bytes, 227097.5 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_05:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_05:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_05:00:00' (2012/12/19 11:48:59 4545448 bytes, 68875.7 KBS )
+ echo 2008060305 +1h
+ ./advance_time
+ LL_DATE=2008060306
+ export LL_DATE
+ [[ 2008060306 -le 2008060306 ]]
+ echo 2008060306
+ cut -c1-4
+ LL_YY=2008
+ export LL_YY
+ echo 2008060306
+ cut -c5-6
+ LL_MM=06
+ export LL_MM
+ echo 2008060306
+ cut -c7-8
+ LL_DD=03
+ export LL_DD
+ echo 2008060306
+ cut -c9-10
+ LL_HH=06
+ export LL_HH
+ LL_FILE_DATE=2008-06-03_06:00:00
+ export LL_FILE_DATE
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrfchemi_d01_2008-06-03_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrfchemi_d01_2008-06-03_06:00:00' (2012/12/19 11:48:39 47528764 bytes, 296092.3 KBS )
+ hsi get /MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_06:00:00
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
get  'wrffirechemi_d01_2008-06-03_06:00:00' : '/MIZZI/AVE_TEST_DATA/chem_static/20080603/wrffirechemi_d01_2008-06-03_06:00:00' (2012/12/19 11:49:00 4545448 bytes, 109639.5 KBS )
+ echo 2008060306 +1h
+ ./advance_time
+ LL_DATE=2008060307
+ export LL_DATE
+ [[ 2008060307 -le 2008060306 ]]
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR
+ rm namelist.input
+ rm input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/WRFCHEM/wrfchem_create_namelist.input.ksh
+ rm -f namelist.input
+ touch namelist.input
+ cat
+ 1> namelist.input 0<< \EOF
&time_control
run_days                            = 0,
run_hours                           = 6,
run_minutes                         = 0,
run_seconds                         = 0,
start_year                          = 2001,
start_month                         = 06,
start_day                           = 11,
start_hour                          = 12,
start_minute                        = 0,
start_second                        = 0,
end_year                            = 2008,
end_month                           = 06,
end_day                             = 02,
end_hour                            = 00,
end_minute                          = 0,
end_second                          = 0,
interval_seconds                    = 10800,
input_from_file                     = .true.,
history_interval                    = 360,
frames_per_outfile                  = 1,
restart                             = .false.,
restart_interval                    = 1440,
cycling                             = .true.,
io_form_history                     = 2,
io_form_restart                     = 2,
io_form_input                       = 2,
io_form_boundary                    = 2,
auxinput5_inname                    = 'wrfchemi_d<domain>_<date>',
auxinput6_inname                    = 'wrfbiochemi_d<domain>_<date>',
auxinput7_inname                    = 'wrffirechemi_d<domain>_<date>',
auxinput5_interval_m                = 60,
auxinput6_interval_m                = 60480,
auxinput7_interval_m                = 60,
frames_per_auxinput5                = 1,
frames_per_auxinput6                = 1,
frames_per_auxinput7                = 1,
io_form_auxinput5                   = 2,
io_form_auxinput6                   = 2,
io_form_auxinput7                   = 2,
iofields_filename                   = 'hist_io_flds',
write_input                         = .true.,
inputout_interval                   = 360,
input_outname                       = 'wrfapm_d<domain>_<date>',
debug_level                         = 0,
/
&domains
time_step                           = 180,
time_step_fract_num                 = 0,
time_step_fract_den                 = 1,
max_dom                             = 1,
e_we                                = 271,
e_sn                                = 101,
e_vert                              = 34,
p_top_requested                     = 1000,
interp_type                         = 1, 
t_extrap_type                       = 1,
num_metgrid_levels                  = 27,
num_metgrid_soil_levels             = 4,
dx                                  = 36000.0,
dy                                  = 36000.0,
grid_id                             = 1,
parent_id                           = 0,
i_parent_start                      = 0,
j_parent_start                      = 0,
parent_grid_ratio                   = 1,
parent_time_step_ratio              = 1,
feedback                            = 0,
smooth_option                       = 0,
eta_levels                          = 1.000,0.983,0.970,0.954,0.934,0.909,0.880,0.834,0.788,0.742,0.697,0.617,0.546,0.480,0.422,0.368,0.321,0.278,0.239,0.205,0.174,0.147,0.123,0.102,0.0832,0.0668,0.0526,0.0402,0.0295,0.0203,0.0124,0.00575,0.000,
starting_time_step                  = -1,
use_adaptive_time_step              = false,
force_sfc_in_vinterp                = 1,
max_step_increase_pct               = 5,
/
&physics
mp_physics                          = 2,
ra_lw_physics                       = 1,
ra_sw_physics                       = 2,
radt                                = 40,
sf_sfclay_physics                   = 2,
sf_surface_physics                  = 2,
bl_pbl_physics                      = 2,
bldt                                = 0,
cu_physics                          = 5,
cudt                                = 0,
isfflx                              = 1,
ifsnow                              = 0,
icloud                              = 0,
surface_input_source                = 1,
num_soil_layers                     = 4,
sf_urban_physics                    = 0,
maxiens                             = 1,
maxens                              = 3,
maxens2                             = 3,
maxens3                             = 16,
ensdim                              = 144,
mp_zero_out                         = 2,
cu_rad_feedback                     = .false.,
cu_diag                             = 1,
progn                               = 0,
cugd_avedx                          = ,       
/
&fdda
/
&dfi_control
/
&tc
/
&scm
/
&dynamics
use_baseparam_fr_nml                = .true.,
w_damping                           = 1,
diff_opt                            = 1,
km_opt                              = 4,
diff_6th_opt                        = 0,
diff_6th_factor                     = 0.12,
base_temp                           = 290.,
damp_opt                            = 3,
zdamp                               = 5000,
dampcoef                            = 0.01,
khdif                               = 0,
kvdif                               = 0,
non_hydrostatic                     = .true.,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
time_step_sound                     = 6,
rk_ord                              = 3,
moist_adv_opt                       = 2,
scalar_adv_opt                      = 2,
chem_adv_opt                        = 2,
tke_adv_opt                         = 2,
/
&bdy_control
spec_bdy_width                      = 5,
spec_zone                           = 1,
relax_zone                          = 4,
specified                           = .true.,
nested                              = .false.,
real_data_init_type                 = 3,
/
&grib2
/
&namelist_quilt
nio_tasks_per_group                 = 0,
nio_groups                          = 1,
/
&chem
kemit                              = 10,
chem_opt                           = 112,
bioemdt                            = 3,
photdt                             = 18,
chemdt                             = 3.0,
io_style_emissions                 = 2,
emiss_inpt_opt                     = 111,
emiss_opt                          = 8,
chem_in_opt                        = 0,
phot_opt                           = 3,
gas_drydep_opt                     = 1,
aer_drydep_opt                     = 1,
bio_emiss_opt                      = 3,
gas_bc_opt                         = 112,
gas_ic_opt                         = 112,
aer_bc_opt                         = 112,
aer_ic_opt                         = 112,
gaschem_onoff                      = 1,
aerchem_onoff                      = 1,
wetscav_onoff                      = 0,
cldchem_onoff                      = 0,
vertmix_onoff                      = 1,
chem_conv_tr                       = 1,
seas_opt                           = 1, 
dust_opt                           = 1, 
dmsemis_opt                        = 1, 
biomass_burn_opt                   = 2,
plumerisefire_frq                  = 60,
have_bcs_chem                      = .true.,
aer_ra_feedback                    = 0,
ne_area                            = 118, 
opt_pars_out                       = 1, 
scale_fire_emiss                   = .true.,
have_bcs_upper                     = .true.,
fixed_ubc_inname                   = ubvals_b40.20th.track1_1996-2005.nc,
chemdiag                           = 1,
/
&wrfvar1
print_detail_grad                   = false,
var4d                               = false,
multi_inc                           = 0,
/
&wrfvar2
/
&wrfvar3
ob_format                           = 2,
/
&wrfvar4
use_synopobs                        = true,
use_shipsobs                        = true,
use_metarobs                        = true,
use_soundobs                        = true,
use_pilotobs                        = true,
use_airepobs                        = true,
use_geoamvobs                       = true,
use_polaramvobs                     = true,
use_bogusobs                        = true,
use_buoyobs                         = true,
use_profilerobs                     = true,
use_satemobs                        = true,
use_gpspwobs                        = true,
use_gpsrefobs                       = true,
use_ssmisobs                        = false,
use_qscatobs                        = true,
use_airsretobs                      = true,
/
&wrfvar5
check_max_iv                        = true,
put_rand_seed                       = false,
/
&wrfvar6
ntmax                               = 200,
/
&wrfvar7
cv_options                          = 5,
as1                                 = 0.25, 1.0, 1.5
as2                                 = 0.25, 1.0, 1.5
as3                                 = 0.25, 1.0, 1.5
as4                                 = 0.25, 1.0, 1.5
as5                                 = 0.25, 1.0, 1.5
var_scaling4                        = 1.0,
je_factor                           = 1.0,
/
&wrfvar8
/
&wrfvar9
/
trace_use                           = false,
/
&wrfvar10
/
&wrfvar11
cv_options_hum                      = 1,
check_rh                            = 0,
seed_array1                         = 2012120100,
seed_array2                         = 2012120100,
calculate_cg_cost_fn                = false,
lat_stats_option                    = false,
/
&wrfvar12
/
&wrfvar13
/
&wrfvar14
/
&wrfvar15
num_pseudo                          = 0,
pseudo_x                            = 1.0,
pseudo_y                            = 1.0,
pseudo_z                            = 1.0,
pseudo_err                          = 1.0,
pseudo_val                          = 1.0
/
&wrfvar16
ensdim_alpha                        = 0,
alphacv_method                      = 2,
alpha_corr_type                     = 3,
alpha_corr_scale                    = 1500.0,
alpha_std_dev                       = 1.0,
alpha_vertloc                       = false,
alpha_truncation                    = 0,
/
&wrfvar17
analysis_type                       = '3DVAR',
/
&wrfvar18
analysis_date                       = '2012-12-01_00:00:00',
/
&wrfvar19
pseudo_var                          = 't',
/
&wrfvar20
/
&wrfvar21
time_window_min                     = '2012-11-30_23:00:00',
/
&wrfvar22
time_window_max                     = '2012-13-01_01:00:00',
/
&wrfvar23
jcdfi_use                           = false,
jcdfi_io                            = false,
/
EOF
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_input.nml.ksh
+ echo off
off
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_model_nml
   write_binary_restart_files      = .true.,
   netCDF_large_file_support       = .true.,
/
EOF
+ [[ -f input.nml ]]
+ mv input.nml_temp input.nml
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_assim_tools_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.1,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .true.,
   adaptive_localization_threshold = -1,
   print_every_nth_obs             = 1000,
   special_localization_obs_types  = 'IASI_O3_RETRIEVAL','MOPITT_CO_RETRIEVAL',
   special_localization_cutoffs    = 0.05,0.05,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_cov_cutoff_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &cov_cutoff_nml
   select_localization             = 1,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_dart_to_wrf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &dart_to_wrf_nml
   model_advance_file           = .false.,
   adv_mod_command              = 'mpirun -np 64 ./wrf.exe',
   dart_restart_name            = 'dart_wrf_vector',
   print_data_ranges            = .false.,
   debug                        = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_ensemble_manager_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &ensemble_manager_nml
   single_restart_file_in  = .false.,
   single_restart_file_out = .false.,
   perturbation_amplitude  = 0.2,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_filter_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &filter_nml
   async                        = 2,
   adv_ens_command              = './advance_model.csh',
   ens_size                     = 20,
   start_from_restart           = .true.,
   output_restart               = .true.,
   obs_sequence_in_name         = 'obs_seq.out',
   obs_sequence_out_name        = 'obs_seq.final',
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   num_output_state_members     = 0,
   num_output_obs_members       = 0,
   output_interval              = 1,
   num_groups                   = 1,
   input_qc_threshold           = 4.0,
   outlier_threshold            = 3.0,
   output_forward_op_errors     = .false.,
   output_timestamps            = .true.,
   output_inflation             = .true.,
   trace_execution              = .true.,
   inf_flavor                   = 2, 0,
   inf_initial_from_restart     = .true., .true.,
   inf_sd_initial_from_restart  = .true., .true.,
   inf_output_restart           = .true., .true.,
   inf_deterministic            = .true., .true.,
   inf_in_file_name             = 'prior_inflate_ic_old', 'post_inflate_ics',
   inf_out_file_name            = 'prior_inflate_ic_new', 'prior_inflate_restart',
   inf_diag_file_name           = 'prior_inflate_diag', 'post_inf_diag',
   inf_initial                  = 1.0, 1.0,
   inf_sd_initial               = 0.6, 0.0,
   inf_damping                  = 0.9, 1.0,
   inf_lower_bound              = 1.0, 1.0,
   inf_upper_bound              = 1000000.0, 1000000.0,
   inf_sd_lower_bound           = 0.6, 0.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_location_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &location_nml
   horiz_dist_only                 = .false.,
   vert_normalization_pressure     = 187500.0,
   vert_normalization_height       = 5000000.0,
   vert_normalization_level        = 2666.7,
   approximate_distance            = .false.,
   nlon                            = 141,
   nlat                            = 72,
   output_box_info                 = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_model_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &model_nml
   default_state_variables     = .false.,
   wrf_state_variables         = 'U',     'KIND_U_WIND_COMPONENT',     'TYPE_U',  'UPDATE','999',
                              'V',     'KIND_V_WIND_COMPONENT',     'TYPE_V',  'UPDATE','999',
                              'W',     'KIND_VERTICAL_VELOCITY',    'TYPE_W',  'UPDATE','999',
                              'PH',    'KIND_GEOPOTENTIAL_HEIGHT',  'TYPE_GZ', 'UPDATE','999',
                              'T',     'KIND_POTENTIAL_TEMPERATURE','TYPE_T',  'UPDATE','999',
                              'MU',    'KIND_PRESSURE',             'TYPE_MU', 'UPDATE','999',
                              'QVAPOR','KIND_VAPOR_MIXING_RATIO',   'TYPE_QV', 'UPDATE','999',
                              'QRAIN', 'KIND_RAINWATER_MIXING_RATIO','TYPE_QRAIN', 'UPDATE','999',
                              'QCLOUD','KIND_CLOUD_LIQUID_WATER',   'TYPE_QCLOUD', 'UPDATE','999',
                              'QSNOW', 'KIND_SNOW_MIXING_RATIO',    'TYPE_QSNOW', 'UPDATE','999',
                              'QICE',  'KIND_CLOUD_ICE',            'TYPE_QICE', 'UPDATE','999',
                              'U10',   'KIND_U_WIND_COMPONENT',     'TYPE_U10','UPDATE','999',
                              'V10',   'KIND_V_WIND_COMPONENT',     'TYPE_V10','UPDATE','999',
                              'T2',    'KIND_TEMPERATURE',          'TYPE_T2', 'UPDATE','999',
                              'TH2',   'KIND_POTENTIAL_TEMPERATURE','TYPE_TH2','UPDATE','999',
                              'Q2',    'KIND_SPECIFIC_HUMIDITY',    'TYPE_Q2', 'UPDATE','999',
                              'PSFC',  'KIND_PRESSURE',             'TYPE_PS', 'UPDATE','999',
                              'o3',    'KIND_O3',                   'TYPE_O3', 'UPDATE','999',
                              'co',    'KIND_CO',                   'TYPE_CO', 'UPDATE','999',
                              'no',    'KIND_NO',                   'TYPE_NO', 'UPDATE','999',
                              'no2',   'KIND_NO2',                  'TYPE_NO2', 'UPDATE','999',
                              'hno3',  'KIND_HNO3',                 'TYPE_HNO3', 'UPDATE','999',
                              'hno4',  'KIND_HNO4',                 'TYPE_HNO4', 'UPDATE','999',
                              'n2o5',  'KIND_N2O5',                 'TYPE_N2O5', 'UPDATE','999',
                              'pan',   'KIND_PAN',                  'TYPE_PAN', 'UPDATE','999',
                              'mek',   'KIND_MEK',                  'TYPE_MEK', 'UPDATE','999',
                              'ald',   'KIND_ALD',                  'TYPE_ALD', 'UPDATE','999',
                              'ch3o2', 'KIND_CH3O2',                'TYPE_CH3O2', 'UPDATE','999',
                              'c3h8',  'KIND_C3H8',                 'TYPE_C3H8', 'UPDATE','999',
                              'c2h6',  'KIND_C2H6',                 'TYPE_C2H6', 'UPDATE','999',
                              'acet',  'KIND_ACET',                 'TYPE_ACET', 'UPDATE','999',
                              'hcho',  'KIND_HCHO',                 'TYPE_HCHO', 'UPDATE','999',
                              'c2h4',  'KIND_C2H4',                 'TYPE_C2H4', 'UPDATE','999',
                              'c3h6',  'KIND_C3H6',                 'TYPE_C3H6', 'UPDATE','999',
                              'tol',   'KIND_TOL',                  'TYPE_TOL', 'UPDATE','999',
                              'mvk',   'KIND_MVK',                  'TYPE_MVK', 'UPDATE','999',
                              'bigalk','KIND_BIGALK',               'TYPE_BIGALK', 'UPDATE','999',
                              'isopr', 'KIND_ISOPR',                'TYPE_ISOPR', 'UPDATE','999',
                              'macr',  'KIND_MACR',                 'TYPE_MACR', 'UPDATE','999',
                              'glyald','KIND_GLYALD',               'TYPE_GLYALD', 'UPDATE','999',
                              'c10h16','KIND_C10H16',               'TYPE_C10H16', 'UPDATE','999'
   wrf_state_bounds            = 'QVAPOR','0.0','NULL','CLAMP',
                           'QRAIN', '0.0','NULL','CLAMP',
                           'QCLOUD','0.0','NULL','CLAMP',
                           'QSNOW', '0.0','NULL','CLAMP',
                           'QICE',  '0.0','NULL','CLAMP',
                           'o3',    '0.0','NULL','CLAMP',
                           'co',    '0.0','NULL','CLAMP',
                           'no',    '0.0','NULL','CLAMP',
                           'no2',   '0.0','NULL','CLAMP',
                           'hno3',  '0.0','NULL','CLAMP',
                           'hno4',  '0.0','NULL','CLAMP',
                           'n2o5',  '0.0','NULL','CLAMP',
                           'pan',   '0.0','NULL','CLAMP',
                           'mek',   '0.0','NULL','CLAMP',
                           'ald',   '0.0','NULL','CLAMP',
                           'ch3o2', '0.0','NULL','CLAMP',
                           'c3h8',  '0.0','NULL','CLAMP',
                           'c2h6',  '0.0','NULL','CLAMP',
                           'acet'   '0.0','NULL','CLAMP',
                           'hcho'   '0.0','NULL','CLAMP',
                           'c2h4',  '0.0','NULL','CLAMP',
                           'c3h6',  '0.0','NULL','CLAMP',
                           'tol',   '0.0','NULL','CLAMP',
                           'mvk',   '0.0','NULL','CLAMP',
                           'bigalk','0.0','NULL','CLAMP',
                           'isopr', '0.0','NULL','CLAMP',
                           'macr',  '0.0','NULL','CLAMP',
                           'glyald','0.0','NULL','CLAMP',
                           'c10h16','0.0','NULL','CLAMP'
   output_state_vector         = .false.,
   num_domains                 = 01,
   calendar_type               = 3,
   assimilation_period_seconds = 21600,
   vert_localization_coord     = 3,
   center_search_half_length   = 500000.,
   center_spline_grid_scale    = 10,   
   sfc_elev_max_diff           = 100.0,
   circulation_pres_level      = 80000.0,
   circulation_radius          = 108000.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_def_radar_mod_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_def_radar_mod_nml
   apply_ref_limit_to_obs      = .false.,
   reflectivity_limit_obs      = -10.0,
   lowest_reflectivity_obs     = -10.0,
   apply_ref_limit_to_fwd_op   = .false.,
   reflectivity_limit_fwd_op   = -10.0,
   lowest_reflectivity_fwd_op  = -10.0,
   max_radial_vel_obs          = 1000000,
   allow_wet_graupel           = .false.,
   microphysics_type           = 2,
   allow_dbztowt_conv          = .false.,
   dielectric_factor           = 0.224,
   n0_rain                     = 8.0e6,
   n0_graupel                  = 4.0e6,
   n0_snow                     = 3.0e6,
   rho_rain                    = 1000.0,
   rho_graupel                 = 400.0,
   rho_snow                    = 100.0,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_diag_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_diag_nml
   obs_sequence_name          = 'obs_seq.final',
   obs_sequence_list          = 'file_list.txt',
   first_bin_center           = 2008, 0, 0, 0, 0, 0,
   last_bin_center            = 2008, 0, 0, 0, 0, 0,
   bin_separation             = 0, 0, 0, 6, 0, 0,
   bin_width                  = 0, 0, 0, 0, 0, 0,
   time_to_skip               = 0, 0, 0, 0, 0, 0,
   max_num_bins               = 1000,
   rat_cri                    = 5000.0,
   input_qc_threshold         = 4.0,
   Nregions                   = 1,
   lonlim1                    = 235.0,
   lonlim2                    = 295.0,
   latlim1                    = 25.0,
   latlim2                    = 55.0,
   reg_names                  = 'North America',
   print_mismatched_locs      = .false.,
   verbose                    = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_kind_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_kind_nml
   assimilate_these_obs_types = 'RADIOSONDE_TEMPERATURE',
                                      'RADIOSONDE_U_WIND_COMPONENT',
                                      'RADIOSONDE_V_WIND_COMPONENT',
                                      'ACARS_U_WIND_COMPONENT',
                                      'ACARS_V_WIND_COMPONENT',
                                      'ACARS_TEMPERATURE',
                                      'AIRCRAFT_U_WIND_COMPONENT',
                                      'AIRCRAFT_V_WIND_COMPONENT',
                                      'AIRCRAFT_TEMPERATURE',
                                      'SAT_U_WIND_COMPONENT',
                                      'SAT_V_WIND_COMPONENT',
                                      'MOPITT_CO_RETRIEVAL',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_selection_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_selection_nml
   filename_seq          = 'obs_seq.out',
   filename_seq_list     = 'null',
   filename_out          = 'obs_seq.processed',
   selections_file       = 'obsdef_mask.txt',
   selections_is_obs_seq = .false.,
   print_only            = .false.,
   calendar              = 'gregorian', 
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_coverage_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_coverage_nml
   obs_sequence_list = 'obs_coverage_list.txt',
   obs_sequence_name = 'null',
   obs_of_interest   = 'null',
   textfile_out      = 'obsdef_mask.txt',
   netcdf_out        = 'obsdef_mask.nc',
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   nTmin             = 8,
   nTmax             = 8,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_seq_to_netcdf_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_seq_to_netcdf_nml
   obs_sequence_name = 'null',
   obs_sequence_list = 'obs_coverage_list.txt',
   append_to_netcdf  = .false.,
   lonlim1           = 0.0,
   lonlim2           = 360.0,
   latlim1           = -90.0,
   latlim2           = 90.0,
   verbose           = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_nml
   write_binary_obs_sequence   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_obs_sequence_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &obs_sequence_tool_nml
   num_input_files          = 1, 
   filename_seq             = 'obs_seq.out',
   filename_out             = 'obs_seq.processed', 
   first_obs_days           = 148806,
   first_obs_seconds        = 75601,
   last_obs_days            = 148807,
   last_obs_seconds         = 10800,
   obs_types                = '', 
   keep_types               = .false., 
   print_only               = .false., 
   min_lat                  = -90.0, 
   max_lat                  = 90.0, 
   min_lon                  = 0.0, 
   max_lon                  = 360.0,
   qc_metadata              = 'DART quality control',
   min_qc                   = 0,
   max_qc                   = 5,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_perfect_model_obs_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
&perfect_model_obs_nml
   start_from_restart           = .true.,
   output_restart               = .true.,
   async                        = 2,
   init_time_days               = -1,
   init_time_seconds            = -1,
   first_obs_days               = 148806,
   first_obs_seconds            = 75601,
   last_obs_days                = 148807,
   last_obs_seconds             = 10800,
   output_interval              = 1,
   restart_in_file_name         = 'filter_ic_old',
   restart_out_file_name        = 'filter_ic_new',
   obs_seq_in_file_name         = 'obs_seq.in',
   obs_seq_out_file_name        = 'obs_seq.out',
   adv_ens_command              = './advance_model.csh',
   output_timestamps            = .false.,
   trace_execution              = .false.,
   output_forward_op_errors     = .false.,
   print_every_nth_obs          = -1,
   silence                      = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_preprocess_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &preprocess_nml
   input_obs_kind_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_kind_mod.f90',
   input_obs_def_mod_file   = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file  = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_kind/obs_def_mod.f90',
   input_files              = '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_reanalysis_bufr_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_radar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_metar_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_dew_point_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_altimeter_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gps_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_gts_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_vortex_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_IASI_O3_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MOPITT_CO_mod.f90',
                       '/glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/obs_def/obs_def_MODIS_AOD_mod.f90',
/  
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_reg_factor_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &reg_factor_nml
   select_regression           = 1,
   input_reg_file              = 'time_mean_reg',
   save_reg_diagnostics        = .false.,
   reg_diagnostics_file        = 'reg_diagnostics',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_replace_wrf_fields_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &replace_wrf_fields_nml
   debug = .false.,
   fail_on_missing_field = .false.,
   fieldnames = 'SNOWC',
                      'ALBBCK',
                      'TMN',
                      'TSK',
                      'SH2O',
                      'SMOIS',
                      'SEAICE',
                      'HGT_d01',
                      'TSLB',
                      'SST',
                      'SNOWH',
                      'SNOW',
   fieldlist_file = ' ',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_tool_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_tool_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 21600,
   gregorian_cal                = .true.,
   print_only                   = .false.,
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_restart_file_utility_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &restart_file_utility_nml
   input_file_name              = 'filter_ic_new',
   output_file_name             = 'assim_model_state_ic',
   ens_size                     = 20,
   single_restart_file_in       = .false.,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .true.,,
   overwrite_advance_time       = .true.,
   new_advance_days             = 148807,
   new_advance_secs             = 21600, 
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_schedule_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &schedule_nml
   calendar                  = 'Gregorian',  
   first_bin_start           = 2008, 6, 1, 0, 0, 0,
   first_bin_end             = 2008, 6, 1, 0, 0, 0,
   last_bin_end              = 2008, 6, 1, 0, 0, 0,
   bin_interval_days         = 0,
   bin_interval_seconds      = 21600,   
   max_num_bins              = 1000,
   print_table               = .true.,
/   
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_smoother_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &smoother_nml
   num_lags                  = 0,
   start_from_restart        = .true.,
   output_restart            = .true.,
   restart_in_file_name      = 'filter_ic_old',
   restart_out_file_name     = 'filter_ic_new',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_utilities_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &utilities_nml
   TERMLEVEL                   = 1,
   module_details              = .false.,
   logfilename                 = 'dart_log.out',
   nmlfilename                 = 'dart_log.nml',
   write_nml                   = 'file',
/
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_obs_preproc_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_obs_preproc_nml
   obs_boundary             = 0.0,
   increase_bdy_error       = .false.,
   maxobsfac                = 2.5,
   obsdistbdy               = 15.0,
   sfc_elevation_check      = .false.,
   sfc_elevation_tol        = 300.0,
   obs_pressure_top         = 0.0,
   obs_height_top           = 200000000000000.0,
   include_sig_data         = .true.,
   tc_sonde_radii           = -1.0,
   superob_aircraft         = .false.,
   aircraft_horiz_int       = 36.0,
   aircraft_pres_int        = 2500.0,
   superob_sat_winds        = .false.,
   sat_wind_horiz_int       = 100.0,
   sat_wind_pres_int        = 2500.0,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ /glade/p/work/mizzi/TRUNK/DART_DEVEL_COM/models/wrf_chem/namelist_scripts/DART/dart_create_wrf_to_dart_nml.ksh
+ rm -f input.nml_temp
+ touch input.nml_temp
+ cat
+ 1> input.nml_temp 0<< \EOF
 &wrf_to_dart_nml
   dart_restart_name   = 'dart_wrf_vector',
   print_data_ranges   = .false.,
   debug               = .false.,
/ 
EOF
+ [[ -f input.nml ]]
+ cat input.nml_temp
+ 1>> input.nml
+ rm input.nml_temp
+ echo on
on
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ [[ -f filter_control_0001 ]]
+ rm -rf filter_control_0001
+ touch filter_control_0001
+ echo 0001
+ 1>> filter_control_0001
+ echo assim_model_state_ic_0001
+ 1>> filter_control_0001
+ echo assim_model_state_ud_0001
+ 1>> filter_control_0001
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0001 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31993> is submitted to queue <small>.
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ [[ -f filter_control_0002 ]]
+ rm -rf filter_control_0002
+ touch filter_control_0002
+ echo 0002
+ 1>> filter_control_0002
+ echo assim_model_state_ic_0002
+ 1>> filter_control_0002
+ echo assim_model_state_ud_0002
+ 1>> filter_control_0002
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0002 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31994> is submitted to queue <small>.
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ [[ -f filter_control_0003 ]]
+ rm -rf filter_control_0003
+ touch filter_control_0003
+ echo 0003
+ 1>> filter_control_0003
+ echo assim_model_state_ic_0003
+ 1>> filter_control_0003
+ echo assim_model_state_ud_0003
+ 1>> filter_control_0003
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0003 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31995> is submitted to queue <small>.
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ [[ -f filter_control_0004 ]]
+ rm -rf filter_control_0004
+ touch filter_control_0004
+ echo 0004
+ 1>> filter_control_0004
+ echo assim_model_state_ic_0004
+ 1>> filter_control_0004
+ echo assim_model_state_ud_0004
+ 1>> filter_control_0004
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0004 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31996> is submitted to queue <small>.
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ [[ -f filter_control_0005 ]]
+ rm -rf filter_control_0005
+ touch filter_control_0005
+ echo 0005
+ 1>> filter_control_0005
+ echo assim_model_state_ic_0005
+ 1>> filter_control_0005
+ echo assim_model_state_ud_0005
+ 1>> filter_control_0005
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0005 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31997> is submitted to queue <small>.
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ [[ -f filter_control_0006 ]]
+ rm -rf filter_control_0006
+ touch filter_control_0006
+ echo 0006
+ 1>> filter_control_0006
+ echo assim_model_state_ic_0006
+ 1>> filter_control_0006
+ echo assim_model_state_ud_0006
+ 1>> filter_control_0006
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0006 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31998> is submitted to queue <small>.
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ [[ -f filter_control_0007 ]]
+ rm -rf filter_control_0007
+ touch filter_control_0007
+ echo 0007
+ 1>> filter_control_0007
+ echo assim_model_state_ic_0007
+ 1>> filter_control_0007
+ echo assim_model_state_ud_0007
+ 1>> filter_control_0007
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0007 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <31999> is submitted to queue <small>.
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ [[ -f filter_control_0008 ]]
+ rm -rf filter_control_0008
+ touch filter_control_0008
+ echo 0008
+ 1>> filter_control_0008
+ echo assim_model_state_ic_0008
+ 1>> filter_control_0008
+ echo assim_model_state_ud_0008
+ 1>> filter_control_0008
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0008 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32000> is submitted to queue <small>.
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ [[ -f filter_control_0009 ]]
+ rm -rf filter_control_0009
+ touch filter_control_0009
+ echo 0009
+ 1>> filter_control_0009
+ echo assim_model_state_ic_0009
+ 1>> filter_control_0009
+ echo assim_model_state_ud_0009
+ 1>> filter_control_0009
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0009 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32001> is submitted to queue <small>.
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ [[ -f filter_control_0010 ]]
+ rm -rf filter_control_0010
+ touch filter_control_0010
+ echo 0010
+ 1>> filter_control_0010
+ echo assim_model_state_ic_0010
+ 1>> filter_control_0010
+ echo assim_model_state_ud_0010
+ 1>> filter_control_0010
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0010 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32002> is submitted to queue <small>.
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ [[ -f filter_control_0011 ]]
+ rm -rf filter_control_0011
+ touch filter_control_0011
+ echo 0011
+ 1>> filter_control_0011
+ echo assim_model_state_ic_0011
+ 1>> filter_control_0011
+ echo assim_model_state_ud_0011
+ 1>> filter_control_0011
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0011 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32003> is submitted to queue <small>.
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ [[ -f filter_control_0012 ]]
+ rm -rf filter_control_0012
+ touch filter_control_0012
+ echo 0012
+ 1>> filter_control_0012
+ echo assim_model_state_ic_0012
+ 1>> filter_control_0012
+ echo assim_model_state_ud_0012
+ 1>> filter_control_0012
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0012 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32004> is submitted to queue <small>.
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ [[ -f filter_control_0013 ]]
+ rm -rf filter_control_0013
+ touch filter_control_0013
+ echo 0013
+ 1>> filter_control_0013
+ echo assim_model_state_ic_0013
+ 1>> filter_control_0013
+ echo assim_model_state_ud_0013
+ 1>> filter_control_0013
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0013 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32005> is submitted to queue <small>.
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ [[ -f filter_control_0014 ]]
+ rm -rf filter_control_0014
+ touch filter_control_0014
+ echo 0014
+ 1>> filter_control_0014
+ echo assim_model_state_ic_0014
+ 1>> filter_control_0014
+ echo assim_model_state_ud_0014
+ 1>> filter_control_0014
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0014 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32006> is submitted to queue <small>.
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ [[ -f filter_control_0015 ]]
+ rm -rf filter_control_0015
+ touch filter_control_0015
+ echo 0015
+ 1>> filter_control_0015
+ echo assim_model_state_ic_0015
+ 1>> filter_control_0015
+ echo assim_model_state_ud_0015
+ 1>> filter_control_0015
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0015 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32007> is submitted to queue <small>.
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ [[ -f filter_control_0016 ]]
+ rm -rf filter_control_0016
+ touch filter_control_0016
+ echo 0016
+ 1>> filter_control_0016
+ echo assim_model_state_ic_0016
+ 1>> filter_control_0016
+ echo assim_model_state_ud_0016
+ 1>> filter_control_0016
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0016 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32008> is submitted to queue <small>.
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ [[ -f filter_control_0017 ]]
+ rm -rf filter_control_0017
+ touch filter_control_0017
+ echo 0017
+ 1>> filter_control_0017
+ echo assim_model_state_ic_0017
+ 1>> filter_control_0017
+ echo assim_model_state_ud_0017
+ 1>> filter_control_0017
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0017 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32009> is submitted to queue <small>.
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ [[ -f filter_control_0018 ]]
+ rm -rf filter_control_0018
+ touch filter_control_0018
+ echo 0018
+ 1>> filter_control_0018
+ echo assim_model_state_ic_0018
+ 1>> filter_control_0018
+ echo assim_model_state_ud_0018
+ 1>> filter_control_0018
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0018 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32010> is submitted to queue <small>.
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ [[ -f filter_control_0019 ]]
+ rm -rf filter_control_0019
+ touch filter_control_0019
+ echo 0019
+ 1>> filter_control_0019
+ echo assim_model_state_ic_0019
+ 1>> filter_control_0019
+ echo assim_model_state_ud_0019
+ 1>> filter_control_0019
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0019 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32011> is submitted to queue <small>.
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ [[ -f filter_control_0020 ]]
+ rm -rf filter_control_0020
+ touch filter_control_0020
+ echo 0020
+ 1>> filter_control_0020
+ echo assim_model_state_ic_0020
+ 1>> filter_control_0020
+ echo assim_model_state_ud_0020
+ 1>> filter_control_0020
+ [[ -f job.ksh ]]
+ rm -rf job.ksh
+ touch job.ksh
+ RANDOM=12229
+ JOBRND=advm_31608
+ export JOBRND
+ cat
+ 0<< \EOF
#!/bin/ksh -aeux
#BSUB -P P19010000
#BSUB -x                                    # exclusive use of node (not_shared)
#BSUB -n 32                       # number of total (MPI) tasks
#BSUB -R "span[ptile=16]"    # mpi tasks per node
#BSUB -J advm_31608                          # job name
#BSUB -o advm_31608.fout                      # output filename
#BSUB -e advm_31608.ferr                      # error filename
#BSUB -W 1:40               # wallclock time (minutes)
#BSUB -q small
#
rm -rf advm*.fout
rm -rf advm*.ferr
./advance_model.ksh 1 1 filter_control_0020 > index.html 2>&1 

export RC=$?     
if [[ -f ADV_MODEL_SUCCESS ]]; then rm -rf ADV_MODEL_SUCCESS; fi     
if [[ -f ADV_MODEL_FAILED ]]; then rm -rf ADV_MODEL_FAILED; fi          
if [[ $RC = 0 ]]; then
   touch ADV_MODEL_SUCCESS
else
   touch ADV_MODEL_FAILED 
fi
EOF
1> job.ksh
+ bsub
+ 0< job.ksh
Job <32012> is submitted to queue <small>.
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ ./da_run_hold.ksh advm_31608
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ sleep 30
+ bjobs
+ 1> job_list
No unfinished job found
+ grep advm_31608 job_list
+ 1> test_list
+ [[ -s test_list ]]
+ rm job_list test_list
+ [[ ! -d /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/wrfchem_forecast ]]
+ mkdir -p /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/wrfchem_forecast
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/wrfchem_forecast
+ let IMEM=1
+ [[ 1 -le 20 ]]
+ KMEM=1
+ export KMEM
+ [[ 1 -lt 1000 ]]
+ KMEM=01
+ export KMEM
+ [[ 1 -lt 100 ]]
+ KMEM=001
+ export KMEM
+ [[ 1 -lt 10 ]]
+ KMEM=0001
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfinput_d01 wrfinput_d01_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0001
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0001
+ let IMEM=1+1
+ [[ 2 -le 20 ]]
+ KMEM=2
+ export KMEM
+ [[ 2 -lt 1000 ]]
+ KMEM=02
+ export KMEM
+ [[ 2 -lt 100 ]]
+ KMEM=002
+ export KMEM
+ [[ 2 -lt 10 ]]
+ KMEM=0002
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfinput_d01 wrfinput_d01_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0002
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0002/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0002
+ let IMEM=2+1
+ [[ 3 -le 20 ]]
+ KMEM=3
+ export KMEM
+ [[ 3 -lt 1000 ]]
+ KMEM=03
+ export KMEM
+ [[ 3 -lt 100 ]]
+ KMEM=003
+ export KMEM
+ [[ 3 -lt 10 ]]
+ KMEM=0003
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfinput_d01 wrfinput_d01_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0003
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0003/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0003
+ let IMEM=3+1
+ [[ 4 -le 20 ]]
+ KMEM=4
+ export KMEM
+ [[ 4 -lt 1000 ]]
+ KMEM=04
+ export KMEM
+ [[ 4 -lt 100 ]]
+ KMEM=004
+ export KMEM
+ [[ 4 -lt 10 ]]
+ KMEM=0004
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfinput_d01 wrfinput_d01_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0004
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0004/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0004
+ let IMEM=4+1
+ [[ 5 -le 20 ]]
+ KMEM=5
+ export KMEM
+ [[ 5 -lt 1000 ]]
+ KMEM=05
+ export KMEM
+ [[ 5 -lt 100 ]]
+ KMEM=005
+ export KMEM
+ [[ 5 -lt 10 ]]
+ KMEM=0005
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfinput_d01 wrfinput_d01_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0005
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0005/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0005
+ let IMEM=5+1
+ [[ 6 -le 20 ]]
+ KMEM=6
+ export KMEM
+ [[ 6 -lt 1000 ]]
+ KMEM=06
+ export KMEM
+ [[ 6 -lt 100 ]]
+ KMEM=006
+ export KMEM
+ [[ 6 -lt 10 ]]
+ KMEM=0006
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfinput_d01 wrfinput_d01_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0006
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0006/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0006
+ let IMEM=6+1
+ [[ 7 -le 20 ]]
+ KMEM=7
+ export KMEM
+ [[ 7 -lt 1000 ]]
+ KMEM=07
+ export KMEM
+ [[ 7 -lt 100 ]]
+ KMEM=007
+ export KMEM
+ [[ 7 -lt 10 ]]
+ KMEM=0007
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfinput_d01 wrfinput_d01_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0007
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0007/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0007
+ let IMEM=7+1
+ [[ 8 -le 20 ]]
+ KMEM=8
+ export KMEM
+ [[ 8 -lt 1000 ]]
+ KMEM=08
+ export KMEM
+ [[ 8 -lt 100 ]]
+ KMEM=008
+ export KMEM
+ [[ 8 -lt 10 ]]
+ KMEM=0008
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfinput_d01 wrfinput_d01_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0008
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0008/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0008
+ let IMEM=8+1
+ [[ 9 -le 20 ]]
+ KMEM=9
+ export KMEM
+ [[ 9 -lt 1000 ]]
+ KMEM=09
+ export KMEM
+ [[ 9 -lt 100 ]]
+ KMEM=009
+ export KMEM
+ [[ 9 -lt 10 ]]
+ KMEM=0009
+ export KMEM
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfinput_d01 wrfinput_d01_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0009
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0009/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0009
+ let IMEM=9+1
+ [[ 10 -le 20 ]]
+ KMEM=10
+ export KMEM
+ [[ 10 -lt 1000 ]]
+ KMEM=010
+ export KMEM
+ [[ 10 -lt 100 ]]
+ KMEM=0010
+ export KMEM
+ [[ 10 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfinput_d01 wrfinput_d01_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0010
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0010/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0010
+ let IMEM=10+1
+ [[ 11 -le 20 ]]
+ KMEM=11
+ export KMEM
+ [[ 11 -lt 1000 ]]
+ KMEM=011
+ export KMEM
+ [[ 11 -lt 100 ]]
+ KMEM=0011
+ export KMEM
+ [[ 11 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfinput_d01 wrfinput_d01_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0011
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0011/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0011
+ let IMEM=11+1
+ [[ 12 -le 20 ]]
+ KMEM=12
+ export KMEM
+ [[ 12 -lt 1000 ]]
+ KMEM=012
+ export KMEM
+ [[ 12 -lt 100 ]]
+ KMEM=0012
+ export KMEM
+ [[ 12 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfinput_d01 wrfinput_d01_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0012
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0012/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0012
+ let IMEM=12+1
+ [[ 13 -le 20 ]]
+ KMEM=13
+ export KMEM
+ [[ 13 -lt 1000 ]]
+ KMEM=013
+ export KMEM
+ [[ 13 -lt 100 ]]
+ KMEM=0013
+ export KMEM
+ [[ 13 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfinput_d01 wrfinput_d01_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0013
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0013/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0013
+ let IMEM=13+1
+ [[ 14 -le 20 ]]
+ KMEM=14
+ export KMEM
+ [[ 14 -lt 1000 ]]
+ KMEM=014
+ export KMEM
+ [[ 14 -lt 100 ]]
+ KMEM=0014
+ export KMEM
+ [[ 14 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfinput_d01 wrfinput_d01_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0014
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0014/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0014
+ let IMEM=14+1
+ [[ 15 -le 20 ]]
+ KMEM=15
+ export KMEM
+ [[ 15 -lt 1000 ]]
+ KMEM=015
+ export KMEM
+ [[ 15 -lt 100 ]]
+ KMEM=0015
+ export KMEM
+ [[ 15 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfinput_d01 wrfinput_d01_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0015
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0015/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0015
+ let IMEM=15+1
+ [[ 16 -le 20 ]]
+ KMEM=16
+ export KMEM
+ [[ 16 -lt 1000 ]]
+ KMEM=016
+ export KMEM
+ [[ 16 -lt 100 ]]
+ KMEM=0016
+ export KMEM
+ [[ 16 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfinput_d01 wrfinput_d01_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0016
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0016/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0016
+ let IMEM=16+1
+ [[ 17 -le 20 ]]
+ KMEM=17
+ export KMEM
+ [[ 17 -lt 1000 ]]
+ KMEM=017
+ export KMEM
+ [[ 17 -lt 100 ]]
+ KMEM=0017
+ export KMEM
+ [[ 17 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfinput_d01 wrfinput_d01_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0017
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0017/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0017
+ let IMEM=17+1
+ [[ 18 -le 20 ]]
+ KMEM=18
+ export KMEM
+ [[ 18 -lt 1000 ]]
+ KMEM=018
+ export KMEM
+ [[ 18 -lt 100 ]]
+ KMEM=0018
+ export KMEM
+ [[ 18 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfinput_d01 wrfinput_d01_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0018
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0018/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0018
+ let IMEM=18+1
+ [[ 19 -le 20 ]]
+ KMEM=19
+ export KMEM
+ [[ 19 -lt 1000 ]]
+ KMEM=019
+ export KMEM
+ [[ 19 -lt 100 ]]
+ KMEM=0019
+ export KMEM
+ [[ 19 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfinput_d01 wrfinput_d01_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0019
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0019/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0019
+ let IMEM=19+1
+ [[ 20 -le 20 ]]
+ KMEM=20
+ export KMEM
+ [[ 20 -lt 1000 ]]
+ KMEM=020
+ export KMEM
+ [[ 20 -lt 100 ]]
+ KMEM=0020
+ export KMEM
+ [[ 20 -lt 10 ]]
+ WRFOUT_FILE_ANL=wrfout_d01_2008-06-03_00:00:00
+ export WRFOUT_FILE_ANL
+ WRFOUT_FILE_FOR=wrfout_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_FOR
+ WRFOUT_FILE_APM=wrfapm_d01_2008-06-03_06:00:00
+ export WRFOUT_FILE_APM
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfinput_d01 wrfinput_d01_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-03_00:00:00 wrfout_d01_2008-06-03_00:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfout_d01_2008-06-03_06:00:00 wrfout_d01_2008-06-03_06:00:00_0020
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0020/wrfapm_d01_2008-06-03_06:00:00 wrfapm_d01_2008-06-03_06:00:00_0020
+ let IMEM=20+1
+ [[ 21 -le 20 ]]
+ cp /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/DART_CENTRALDIR/advance_temp_0001/namelist.input ./.
+ echo COMPLETED RUN_WRFCHEM CODE BLOCK
COMPLETED RUN_WRFCHEM CODE BLOCK
+ echo BEGIN RUN_ARCHIVE CODE BLOCK
BEGIN RUN_ARCHIVE CODE BLOCK
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ WARM_FILTER=true
+ export WARM_FILTER
+ WARM_WRFCHEM=true
+ export WARM_WRFCHEM
+ WARM_ARCHIVE=true
+ export WARM_ARCHIVE
+ rm -rf /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/cycle
+ cd /glade/scratch/mizzi/DART_TEST_AVE/MOPITT_COMB/2008060300/dart_filter
+ rm -rf advance_time
+ rm -rf filter
+ rm -rf restart_file_tool
+ rm -rf wrf_to_dart
+ rm -rf dart_log.nml
+ rm -rf dart_log.out
+ rm -rf filt_31608.jerr
+ rm -rf filt_31608.jout
+ rm -rf job.ksh
+ cd ..
+ hsi 'mkdir -p /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060300; cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060300; put -R dart_filter'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
mkdir: /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060300
put  'dart_filter/final_full.20' : 'final_full.20' ( 12800 bytes, 2049.0 KBS (cos=2011))
put  'dart_filter/da_run_hold.ksh' : 'da_run_hold.ksh' ( 291 bytes, 51.0 KBS (cos=2011))
put  'dart_filter/input.nml' : 'input.nml' ( 19417 bytes, 3201.0 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0001' : 'filter_ic_old.0001' ( 244393704 bytes, 131541.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0004' : 'filter_ic_old.0004' ( 244393704 bytes, 102715.1 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0002' : 'filter_ic_old.0002' ( 244393704 bytes, 97369.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0003' : 'filter_ic_old.0003' ( 244393704 bytes, 81730.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0005' : 'filter_ic_old.0005' ( 244393704 bytes, 156534.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0006' : 'filter_ic_old.0006' ( 244393704 bytes, 176039.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0008' : 'filter_ic_old.0008' ( 244393704 bytes, 155813.9 KBS (cos=2012))
put  'dart_filter/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 147282.4 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0007' : 'filter_ic_old.0007' ( 244393704 bytes, 91229.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0010' : 'filter_ic_old.0010' ( 244393704 bytes, 135084.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0009' : 'filter_ic_old.0009' ( 244393704 bytes, 82070.8 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0011' : 'filter_ic_old.0011' ( 244393704 bytes, 154739.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0012' : 'filter_ic_old.0012' ( 244393704 bytes, 110069.6 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0014' : 'filter_ic_old.0014' ( 244393704 bytes, 181748.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0013' : 'filter_ic_old.0013' ( 244393704 bytes, 90735.5 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0017' : 'filter_ic_old.0017' ( 244393704 bytes, 194382.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0015' : 'filter_ic_old.0015' ( 244393704 bytes, 99911.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0016' : 'filter_ic_old.0016' ( 244393704 bytes, 103745.9 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0018' : 'filter_ic_old.0018' ( 244393704 bytes, 157530.7 KBS (cos=2012))
put  'dart_filter/obs_seq.out' : 'obs_seq.out' ( 3766626 bytes, 39632.5 KBS (cos=2011))
put  'dart_filter/index.html' : 'index.html' ( 14671 bytes, 3299.8 KBS (cos=2011))
put  'dart_filter/filter_ic_old.0019' : 'filter_ic_old.0019' ( 244393704 bytes, 139329.0 KBS (cos=2012))
put  'dart_filter/filter_ic_old.0020' : 'filter_ic_old.0020' ( 244393704 bytes, 164268.4 KBS (cos=2012))
put  'dart_filter/Prior_Diag.nc' : 'Prior_Diag.nc' ( 493449992 bytes, 227909.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0015' : 'filter_ic_new.0015' ( 244393704 bytes, 151896.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0013' : 'filter_ic_new.0013' ( 244393704 bytes, 154367.3 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_old' : 'prior_inflate_ic_old' ( 488787408 bytes, 158590.1 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0011' : 'filter_ic_new.0011' ( 244393704 bytes, 213254.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0010' : 'filter_ic_new.0010' ( 244393704 bytes, 180715.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0006' : 'filter_ic_new.0006' ( 244393704 bytes, 159064.6 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0007' : 'filter_ic_new.0007' ( 244393704 bytes, 80350.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0016' : 'filter_ic_new.0016' ( 244393704 bytes, 186201.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0008' : 'filter_ic_new.0008' ( 244393704 bytes, 163193.6 KBS (cos=2012))
put  'dart_filter/Posterior_Diag.nc' : 'Posterior_Diag.nc' ( 493449996 bytes, 82158.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0005' : 'filter_ic_new.0005' ( 244393704 bytes, 128967.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0004' : 'filter_ic_new.0004' ( 244393704 bytes, 172890.5 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0002' : 'filter_ic_new.0002' ( 244393704 bytes, 176176.2 KBS (cos=2012))
put  'dart_filter/obs_seq.final' : 'obs_seq.final' ( 5485826 bytes, 41510.3 KBS (cos=2011))
put  'dart_filter/filter_ic_new.0003' : 'filter_ic_new.0003' ( 244393704 bytes, 126433.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0012' : 'filter_ic_new.0012' ( 244393704 bytes, 124528.3 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0009' : 'filter_ic_new.0009' ( 244393704 bytes, 159322.8 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0014' : 'filter_ic_new.0014' ( 244393704 bytes, 91130.7 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0019' : 'filter_ic_new.0019' ( 244393704 bytes, 148518.4 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0018' : 'filter_ic_new.0018' ( 244393704 bytes, 156528.6 KBS (cos=2012))
put  'dart_filter/FILTER_SUCCESS' : 'FILTER_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/filter_ic_new.0020' : 'filter_ic_new.0020' ( 244393704 bytes, 164498.0 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0001' : 'filter_ic_new.0001' ( 244393704 bytes, 286433.9 KBS (cos=2012))
put  'dart_filter/filter_ic_new.0017' : 'filter_ic_new.0017' ( 244393704 bytes, 162020.3 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0002' : 'assim_model_state_ic.0002' ( 244393720 bytes, 150560.9 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0001' : 'assim_model_state_ic.0001' ( 244393720 bytes, 92810.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0004' : 'assim_model_state_ic.0004' ( 244393720 bytes, 176395.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0003' : 'assim_model_state_ic.0003' ( 244393720 bytes, 114615.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0005' : 'assim_model_state_ic.0005' ( 244393720 bytes, 175852.7 KBS (cos=2012))
put  'dart_filter/prior_inflate_ic_new' : 'prior_inflate_ic_new' ( 488787408 bytes, 114033.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0006' : 'assim_model_state_ic.0006' ( 244393720 bytes, 184195.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0008' : 'assim_model_state_ic.0008' ( 244393720 bytes, 175356.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0007' : 'assim_model_state_ic.0007' ( 244393720 bytes, 135055.2 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0012' : 'assim_model_state_ic.0012' ( 244393720 bytes, 339547.0 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0011' : 'assim_model_state_ic.0011' ( 244393720 bytes, 142463.7 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0013' : 'assim_model_state_ic.0013' ( 244393720 bytes, 149522.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0014' : 'assim_model_state_ic.0014' ( 244393720 bytes, 177856.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0015' : 'assim_model_state_ic.0015' ( 244393720 bytes, 179724.1 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0010' : 'assim_model_state_ic.0010' ( 244393720 bytes, 70022.6 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0009' : 'assim_model_state_ic.0009' ( 244393720 bytes, 68552.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0016' : 'assim_model_state_ic.0016' ( 244393720 bytes, 133813.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0017' : 'assim_model_state_ic.0017' ( 244393720 bytes, 135993.8 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0019' : 'assim_model_state_ic.0019' ( 244393720 bytes, 184405.5 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0018' : 'assim_model_state_ic.0018' ( 244393720 bytes, 144152.4 KBS (cos=2012))
put  'dart_filter/assim_model_state_ic.0020' : 'assim_model_state_ic.0020' ( 244393720 bytes, 192978.2 KBS (cos=2012))
put  'dart_filter/convert_file_0001/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 22590.3 KBS (cos=2011))
put  'dart_filter/convert_file_0001/index.html' : 'index.html' ( 3654 bytes, 1030.2 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.out' : 'dart_log.out' ( 3069 bytes, 771.9 KBS (cos=2011))
put  'dart_filter/convert_file_0001/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0001/input.nml' : 'input.nml' ( 19409 bytes, 4469.0 KBS (cos=2011))
put  'dart_filter/convert_file_0001/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5141.1 KBS (cos=2011))
put  'dart_filter/convert_file_0001/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 204532.8 KBS (cos=2012))
put  'dart_filter/convert_file_0002/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17426.2 KBS (cos=2011))
put  'dart_filter/convert_file_0002/input.nml' : 'input.nml' ( 19409 bytes, 4273.1 KBS (cos=2011))
put  'dart_filter/convert_file_0002/dart_log.out' : 'dart_log.out' ( 3069 bytes, 874.4 KBS (cos=2011))
put  'dart_filter/convert_file_0002/index.html' : 'index.html' ( 3654 bytes, 467.0 KBS (cos=2011))
put  'dart_filter/convert_file_0002/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0002/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24392.8 KBS (cos=2011))
put  'dart_filter/convert_file_0002/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 186142.1 KBS (cos=2012))
put  'dart_filter/convert_file_0003/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 24870.0 KBS (cos=2011))
put  'dart_filter/convert_file_0003/index.html' : 'index.html' ( 3654 bytes, 402.2 KBS (cos=2011))
put  'dart_filter/convert_file_0003/input.nml' : 'input.nml' ( 19409 bytes, 2521.7 KBS (cos=2011))
put  'dart_filter/convert_file_0003/dart_log.out' : 'dart_log.out' ( 3069 bytes, 658.9 KBS (cos=2011))
put  'dart_filter/convert_file_0003/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0003/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 24293.5 KBS (cos=2011))
put  'dart_filter/convert_file_0003/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 146082.5 KBS (cos=2012))
put  'dart_filter/convert_file_0004/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 28356.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/index.html' : 'index.html' ( 3654 bytes, 604.8 KBS (cos=2011))
put  'dart_filter/convert_file_0004/dart_log.out' : 'dart_log.out' ( 3069 bytes, 507.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/input.nml' : 'input.nml' ( 19409 bytes, 4430.1 KBS (cos=2011))
put  'dart_filter/convert_file_0004/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0004/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 25792.0 KBS (cos=2011))
put  'dart_filter/convert_file_0004/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 124017.7 KBS (cos=2012))
put  'dart_filter/convert_file_0005/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 27961.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/input.nml' : 'input.nml' ( 19409 bytes, 1166.8 KBS (cos=2011))
put  'dart_filter/convert_file_0005/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0005/index.html' : 'index.html' ( 3654 bytes, 804.9 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.out' : 'dart_log.out' ( 3069 bytes, 743.3 KBS (cos=2011))
put  'dart_filter/convert_file_0005/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 23899.7 KBS (cos=2011))
put  'dart_filter/convert_file_0005/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 131395.3 KBS (cos=2012))
put  'dart_filter/convert_file_0006/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 12391.2 KBS (cos=2011))
put  'dart_filter/convert_file_0006/input.nml' : 'input.nml' ( 19409 bytes, 1439.1 KBS (cos=2011))
put  'dart_filter/convert_file_0006/index.html' : 'index.html' ( 3654 bytes, 638.9 KBS (cos=2011))
put  'dart_filter/convert_file_0006/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0006/dart_log.out' : 'dart_log.out' ( 3069 bytes, 886.3 KBS (cos=2011))
put  'dart_filter/convert_file_0006/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 20643.2 KBS (cos=2011))
put  'dart_filter/convert_file_0006/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 184524.4 KBS (cos=2012))
put  'dart_filter/convert_file_0007/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 12969.5 KBS (cos=2011))
put  'dart_filter/convert_file_0007/index.html' : 'index.html' ( 3654 bytes, 724.1 KBS (cos=2011))
put  'dart_filter/convert_file_0007/dart_log.out' : 'dart_log.out' ( 3069 bytes, 41.4 KBS (cos=2011))
put  'dart_filter/convert_file_0007/input.nml' : 'input.nml' ( 19409 bytes, 734.9 KBS (cos=2011))
put  'dart_filter/convert_file_0007/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0007/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 21233.4 KBS (cos=2011))
put  'dart_filter/convert_file_0007/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 184321.5 KBS (cos=2012))
put  'dart_filter/convert_file_0008/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31272.5 KBS (cos=2011))
put  'dart_filter/convert_file_0008/index.html' : 'index.html' ( 3654 bytes, 212.5 KBS (cos=2011))
put  'dart_filter/convert_file_0008/dart_log.out' : 'dart_log.out' ( 3069 bytes, 278.9 KBS (cos=2011))
put  'dart_filter/convert_file_0008/input.nml' : 'input.nml' ( 19409 bytes, 5876.1 KBS (cos=2011))
put  'dart_filter/convert_file_0008/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0008/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 11504.8 KBS (cos=2011))
put  'dart_filter/convert_file_0008/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 183541.6 KBS (cos=2012))
put  'dart_filter/convert_file_0009/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 14254.9 KBS (cos=2011))
put  'dart_filter/convert_file_0009/input.nml' : 'input.nml' ( 19409 bytes, 525.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0009/index.html' : 'index.html' ( 3654 bytes, 300.9 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.out' : 'dart_log.out' ( 3069 bytes, 401.2 KBS (cos=2011))
put  'dart_filter/convert_file_0009/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 26613.6 KBS (cos=2011))
put  'dart_filter/convert_file_0009/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 104493.2 KBS (cos=2012))
put  'dart_filter/convert_file_0010/input.nml' : 'input.nml' ( 19409 bytes, 97.2 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.out' : 'dart_log.out' ( 3069 bytes, 111.2 KBS (cos=2011))
put  'dart_filter/convert_file_0010/index.html' : 'index.html' ( 3654 bytes, 19.7 KBS (cos=2011))
put  'dart_filter/convert_file_0010/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0010/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 5079.5 KBS (cos=2011))
put  'dart_filter/convert_file_0010/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 4605.4 KBS (cos=2011))
put  'dart_filter/convert_file_0010/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 98182.0 KBS (cos=2012))
put  'dart_filter/convert_file_0011/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17137.5 KBS (cos=2011))
put  'dart_filter/convert_file_0011/input.nml' : 'input.nml' ( 19409 bytes, 5735.7 KBS (cos=2011))
put  'dart_filter/convert_file_0011/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0011/index.html' : 'index.html' ( 3654 bytes, 533.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.out' : 'dart_log.out' ( 3069 bytes, 584.4 KBS (cos=2011))
put  'dart_filter/convert_file_0011/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5895.2 KBS (cos=2011))
put  'dart_filter/convert_file_0011/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 63046.7 KBS (cos=2012))
put  'dart_filter/convert_file_0012/dart_log.out' : 'dart_log.out' ( 3069 bytes, 266.8 KBS (cos=2011))
put  'dart_filter/convert_file_0012/input.nml' : 'input.nml' ( 19409 bytes, 764.9 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 17093.5 KBS (cos=2011))
put  'dart_filter/convert_file_0012/index.html' : 'index.html' ( 3654 bytes, 385.7 KBS (cos=2011))
put  'dart_filter/convert_file_0012/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0012/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 8550.9 KBS (cos=2011))
put  'dart_filter/convert_file_0012/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 122738.3 KBS (cos=2012))
put  'dart_filter/convert_file_0013/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 29664.0 KBS (cos=2011))
put  'dart_filter/convert_file_0013/input.nml' : 'input.nml' ( 19409 bytes, 2693.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/dart_log.out' : 'dart_log.out' ( 3069 bytes, 194.6 KBS (cos=2011))
put  'dart_filter/convert_file_0013/index.html' : 'index.html' ( 3654 bytes, 357.8 KBS (cos=2011))
put  'dart_filter/convert_file_0013/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0013/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 17540.9 KBS (cos=2011))
put  'dart_filter/convert_file_0013/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 208493.9 KBS (cos=2012))
put  'dart_filter/convert_file_0014/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 20981.4 KBS (cos=2011))
put  'dart_filter/convert_file_0014/dart_log.out' : 'dart_log.out' ( 3069 bytes, 317.1 KBS (cos=2011))
put  'dart_filter/convert_file_0014/index.html' : 'index.html' ( 3654 bytes, 722.7 KBS (cos=2011))
put  'dart_filter/convert_file_0014/input.nml' : 'input.nml' ( 19409 bytes, 4357.5 KBS (cos=2011))
put  'dart_filter/convert_file_0014/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0014/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 25344.8 KBS (cos=2011))
put  'dart_filter/convert_file_0014/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 207131.2 KBS (cos=2012))
put  'dart_filter/convert_file_0015/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 16721.9 KBS (cos=2011))
put  'dart_filter/convert_file_0015/input.nml' : 'input.nml' ( 19409 bytes, 5693.2 KBS (cos=2011))
put  'dart_filter/convert_file_0015/index.html' : 'index.html' ( 3654 bytes, 768.5 KBS (cos=2011))
put  'dart_filter/convert_file_0015/dart_log.out' : 'dart_log.out' ( 3069 bytes, 585.5 KBS (cos=2011))
put  'dart_filter/convert_file_0015/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0015/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 25882.6 KBS (cos=2011))
put  'dart_filter/convert_file_0015/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 158194.6 KBS (cos=2012))
put  'dart_filter/convert_file_0016/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 12809.1 KBS (cos=2011))
put  'dart_filter/convert_file_0016/input.nml' : 'input.nml' ( 19409 bytes, 5655.2 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.out' : 'dart_log.out' ( 3069 bytes, 619.1 KBS (cos=2011))
put  'dart_filter/convert_file_0016/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0016/index.html' : 'index.html' ( 3654 bytes, 383.2 KBS (cos=2011))
put  'dart_filter/convert_file_0016/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 10599.9 KBS (cos=2011))
put  'dart_filter/convert_file_0016/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 73683.4 KBS (cos=2012))
put  'dart_filter/convert_file_0017/input.nml' : 'input.nml' ( 19409 bytes, 1294.8 KBS (cos=2011))
put  'dart_filter/convert_file_0017/index.html' : 'index.html' ( 3654 bytes, 284.0 KBS (cos=2011))
put  'dart_filter/convert_file_0017/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0017/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 32308.4 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.out' : 'dart_log.out' ( 3069 bytes, 844.3 KBS (cos=2011))
put  'dart_filter/convert_file_0017/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 11999.3 KBS (cos=2011))
put  'dart_filter/convert_file_0017/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 133809.3 KBS (cos=2012))
put  'dart_filter/convert_file_0018/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 21160.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/dart_log.out' : 'dart_log.out' ( 3069 bytes, 537.6 KBS (cos=2011))
put  'dart_filter/convert_file_0018/index.html' : 'index.html' ( 3654 bytes, 688.0 KBS (cos=2011))
put  'dart_filter/convert_file_0018/input.nml' : 'input.nml' ( 19409 bytes, 4846.2 KBS (cos=2011))
put  'dart_filter/convert_file_0018/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0018/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 15636.4 KBS (cos=2011))
put  'dart_filter/convert_file_0018/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 176940.8 KBS (cos=2012))
put  'dart_filter/convert_file_0019/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 25436.4 KBS (cos=2011))
put  'dart_filter/convert_file_0019/index.html' : 'index.html' ( 3654 bytes, 383.2 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.out' : 'dart_log.out' ( 3069 bytes, 511.8 KBS (cos=2011))
put  'dart_filter/convert_file_0019/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0019/input.nml' : 'input.nml' ( 19409 bytes, 3885.8 KBS (cos=2011))
put  'dart_filter/convert_file_0019/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 20863.1 KBS (cos=2011))
put  'dart_filter/convert_file_0019/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 139270.3 KBS (cos=2012))
put  'dart_filter/convert_file_0020/wrf_to_dart' : 'wrf_to_dart' ( 1419956 bytes, 31076.1 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.out' : 'dart_log.out' ( 3069 bytes, 659.3 KBS (cos=2011))
put  'dart_filter/convert_file_0020/index.html' : 'index.html' ( 3654 bytes, 586.2 KBS (cos=2011))
put  'dart_filter/convert_file_0020/CONV_SUCCESS' : 'CONV_SUCCESS' ( 0 bytes, 0.0 KBS (cos=2013))
put  'dart_filter/convert_file_0020/input.nml' : 'input.nml' ( 19409 bytes, 3985.5 KBS (cos=2011))
put  'dart_filter/convert_file_0020/dart_log.nml' : 'dart_log.nml' ( 119524 bytes, 5501.2 KBS (cos=2011))
put  'dart_filter/convert_file_0020/wrfinput_d01' : 'wrfinput_d01' ( 781360936 bytes, 173533.3 KBS (cos=2012))
+ hsi 'cd /MIZZI/DART_TEST_AVE/MOPITT_COMB/2008060300; put -R wrfchem_forecast'
Username: mizzi  UID: 6221  Acct: 64000510(P64000510) Copies: 1 Firewall: off [hsi.4.0.1.2 Mon Oct 22 17:01:44 MDT 2012] 
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0001' : 'wrfapm_d01_2008-06-03_06:00:00_0001' ( 451038888 bytes, 184131.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0001' : 'wrfout_d01_2008-06-03_06:00:00_0001' ( 781360936 bytes, 204384.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0001' : 'wrfinput_d01_0001' ( 781360936 bytes, 134847.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0002' : 'wrfout_d01_2008-06-03_00:00:00_0002' ( 781360936 bytes, 219312.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0002' : 'wrfinput_d01_0002' ( 781360936 bytes, 120712.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0002' : 'wrfout_d01_2008-06-03_06:00:00_0002' ( 781360936 bytes, 192689.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0002' : 'wrfapm_d01_2008-06-03_06:00:00_0002' ( 451038888 bytes, 110270.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0003' : 'wrfinput_d01_0003' ( 781360936 bytes, 182974.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0003' : 'wrfout_d01_2008-06-03_06:00:00_0003' ( 781360936 bytes, 219022.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0001' : 'wrfout_d01_2008-06-03_00:00:00_0001' ( 781360936 bytes, 58038.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0003' : 'wrfapm_d01_2008-06-03_06:00:00_0003' ( 451038888 bytes, 90768.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0003' : 'wrfout_d01_2008-06-03_00:00:00_0003' ( 781360936 bytes, 89062.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0004' : 'wrfout_d01_2008-06-03_00:00:00_0004' ( 781360936 bytes, 186992.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0004' : 'wrfinput_d01_0004' ( 781360936 bytes, 131551.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0004' : 'wrfapm_d01_2008-06-03_06:00:00_0004' ( 451038888 bytes, 87404.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0005' : 'wrfout_d01_2008-06-03_06:00:00_0005' ( 781360936 bytes, 151943.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0005' : 'wrfinput_d01_0005' ( 781360936 bytes, 114712.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0005' : 'wrfout_d01_2008-06-03_00:00:00_0005' ( 781360936 bytes, 113899.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0005' : 'wrfapm_d01_2008-06-03_06:00:00_0005' ( 451038888 bytes, 122866.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0004' : 'wrfout_d01_2008-06-03_06:00:00_0004' ( 781360936 bytes, 57905.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0006' : 'wrfapm_d01_2008-06-03_06:00:00_0006' ( 451038888 bytes, 120991.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0006' : 'wrfout_d01_2008-06-03_00:00:00_0006' ( 781360936 bytes, 123169.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0006' : 'wrfout_d01_2008-06-03_06:00:00_0006' ( 781360936 bytes, 123280.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0007' : 'wrfapm_d01_2008-06-03_06:00:00_0007' ( 451038888 bytes, 195195.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0007' : 'wrfout_d01_2008-06-03_00:00:00_0007' ( 781360936 bytes, 160832.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0006' : 'wrfinput_d01_0006' ( 781360936 bytes, 66597.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0007' : 'wrfout_d01_2008-06-03_06:00:00_0007' ( 781360936 bytes, 78983.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0008' : 'wrfinput_d01_0008' ( 781360936 bytes, 92894.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0008' : 'wrfout_d01_2008-06-03_00:00:00_0008' ( 781360936 bytes, 100965.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0008' : 'wrfapm_d01_2008-06-03_06:00:00_0008' ( 451038888 bytes, 148098.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0008' : 'wrfout_d01_2008-06-03_06:00:00_0008' ( 781360936 bytes, 93160.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0007' : 'wrfinput_d01_0007' ( 781360936 bytes, 49856.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0009' : 'wrfapm_d01_2008-06-03_06:00:00_0009' ( 451038888 bytes, 153049.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0009' : 'wrfout_d01_2008-06-03_00:00:00_0009' ( 781360936 bytes, 145179.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0009' : 'wrfinput_d01_0009' ( 781360936 bytes, 108257.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0009' : 'wrfout_d01_2008-06-03_06:00:00_0009' ( 781360936 bytes, 135230.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0010' : 'wrfout_d01_2008-06-03_00:00:00_0010' ( 781360936 bytes, 156791.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0010' : 'wrfapm_d01_2008-06-03_06:00:00_0010' ( 451038888 bytes, 146399.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0010' : 'wrfout_d01_2008-06-03_06:00:00_0010' ( 781360936 bytes, 119767.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0010' : 'wrfinput_d01_0010' ( 781360936 bytes, 72158.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0011' : 'wrfinput_d01_0011' ( 781360936 bytes, 112026.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0011' : 'wrfout_d01_2008-06-03_00:00:00_0011' ( 781360936 bytes, 161642.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0011' : 'wrfapm_d01_2008-06-03_06:00:00_0011' ( 451038888 bytes, 108182.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0011' : 'wrfout_d01_2008-06-03_06:00:00_0011' ( 781360936 bytes, 117113.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0012' : 'wrfinput_d01_0012' ( 781360936 bytes, 159090.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0012' : 'wrfout_d01_2008-06-03_00:00:00_0012' ( 781360936 bytes, 125967.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0012' : 'wrfout_d01_2008-06-03_06:00:00_0012' ( 781360936 bytes, 122561.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0012' : 'wrfapm_d01_2008-06-03_06:00:00_0012' ( 451038888 bytes, 92129.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0013' : 'wrfinput_d01_0013' ( 781360936 bytes, 123463.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0013' : 'wrfout_d01_2008-06-03_00:00:00_0013' ( 781360936 bytes, 112911.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0013' : 'wrfapm_d01_2008-06-03_06:00:00_0013' ( 451038888 bytes, 91605.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0014' : 'wrfout_d01_2008-06-03_00:00:00_0014' ( 781360936 bytes, 225838.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0013' : 'wrfout_d01_2008-06-03_06:00:00_0013' ( 781360936 bytes, 101302.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0014' : 'wrfout_d01_2008-06-03_06:00:00_0014' ( 781360936 bytes, 161196.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0014' : 'wrfapm_d01_2008-06-03_06:00:00_0014' ( 451038888 bytes, 121756.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0014' : 'wrfinput_d01_0014' ( 781360936 bytes, 91882.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0015' : 'wrfinput_d01_0015' ( 781360936 bytes, 159446.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0015' : 'wrfapm_d01_2008-06-03_06:00:00_0015' ( 451038888 bytes, 134227.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0015' : 'wrfout_d01_2008-06-03_06:00:00_0015' ( 781360936 bytes, 133147.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0015' : 'wrfout_d01_2008-06-03_00:00:00_0015' ( 781360936 bytes, 77780.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0016' : 'wrfout_d01_2008-06-03_00:00:00_0016' ( 781360936 bytes, 94265.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0016' : 'wrfapm_d01_2008-06-03_06:00:00_0016' ( 451038888 bytes, 85492.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0016' : 'wrfout_d01_2008-06-03_06:00:00_0016' ( 781360936 bytes, 92495.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0016' : 'wrfinput_d01_0016' ( 781360936 bytes, 58150.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0017' : 'wrfapm_d01_2008-06-03_06:00:00_0017' ( 451038888 bytes, 141214.2 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0017' : 'wrfout_d01_2008-06-03_06:00:00_0017' ( 781360936 bytes, 126589.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0017' : 'wrfinput_d01_0017' ( 781360936 bytes, 79602.0 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0017' : 'wrfout_d01_2008-06-03_00:00:00_0017' ( 781360936 bytes, 97816.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0018' : 'wrfout_d01_2008-06-03_00:00:00_0018' ( 781360936 bytes, 194784.8 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0018' : 'wrfapm_d01_2008-06-03_06:00:00_0018' ( 451038888 bytes, 168656.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0018' : 'wrfinput_d01_0018' ( 781360936 bytes, 94086.6 KBS (cos=2012))
put  'wrfchem_forecast/wrfinput_d01_0019' : 'wrfinput_d01_0019' ( 781360936 bytes, 170207.1 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0019' : 'wrfout_d01_2008-06-03_00:00:00_0019' ( 781360936 bytes, 129203.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0019' : 'wrfapm_d01_2008-06-03_06:00:00_0019' ( 451038888 bytes, 89525.4 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0019' : 'wrfout_d01_2008-06-03_06:00:00_0019' ( 781360936 bytes, 125452.9 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0018' : 'wrfout_d01_2008-06-03_06:00:00_0018' ( 781360936 bytes, 68320.7 KBS (cos=2012))
put  'wrfchem_forecast/namelist.input' : 'namelist.input' ( 10226 bytes, 1901.4 KBS (cos=2011))
put  'wrfchem_forecast/wrfinput_d01_0020' : 'wrfinput_d01_0020' ( 781360936 bytes, 130805.5 KBS (cos=2012))
put  'wrfchem_forecast/wrfapm_d01_2008-06-03_06:00:00_0020' : 'wrfapm_d01_2008-06-03_06:00:00_0020' ( 451038888 bytes, 105776.7 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_00:00:00_0020' : 'wrfout_d01_2008-06-03_00:00:00_0020' ( 781360936 bytes, 107266.3 KBS (cos=2012))
put  'wrfchem_forecast/wrfout_d01_2008-06-03_06:00:00_0020' : 'wrfout_d01_2008-06-03_06:00:00_0020' ( 781360936 bytes, 134802.2 KBS (cos=2012))
+ echo COMPLETED RUN_ARCHIVE CODE BLOCK
COMPLETED RUN_ARCHIVE CODE BLOCK
+ L_DATE=2008060306
+ export L_DATE
+ [[ 2008060306 -le 2008060300 ]]
+ echo COMPLETED CYCLING CODE BLOCK
COMPLETED CYCLING CODE BLOCK
+ exit
