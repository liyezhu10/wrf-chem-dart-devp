&perfect_model_obs_nml
   start_from_restart       = .false.,
   output_restart           = .true.,
   async                    = 0,
   init_time_days           = 0,
   init_time_seconds        = 0,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   output_interval          = 1,
   restart_in_file_name     = "perfect_ics",
   restart_out_file_name    = "perfect_restart",
   obs_seq_in_file_name     = "obs_seq.in",
   obs_seq_out_file_name    = "obs_seq.outX",
   adv_ens_command          = "../shell_scripts/advance_model.csh",
   trace_execution          = .false.,
   output_timestamps        = .false.,
   print_every_nth_obs      = -1,
   output_forward_op_errors = .false.,
   silence                  = .false.,
   /

&filter_nml
   async                    = 0,
   adv_ens_command          = "../shell_scripts/advance_model.csh",
   ens_size                 = 20,
   start_from_restart       = .false.,
   output_restart           = .true.,
   obs_sequence_in_name     = "obs_seq.outX",
   obs_sequence_out_name    = "obs_seq.final",
   restart_in_file_name     = "filter_ics",
   restart_out_file_name    = "filter_restart",
   init_time_days           = 0,
   init_time_seconds        = 0,
   first_obs_days           = -1,
   first_obs_seconds        = -1,
   last_obs_days            = -1,
   last_obs_seconds         = -1,
   num_output_state_members = 20,
   num_output_obs_members   = 20,
   output_interval          = 1,
   num_groups               = 1,
   input_qc_threshold       =  3.0,
   outlier_threshold        =  3.0,
   enable_special_outlier_code = .false.,
   output_forward_op_errors = .false.,
   output_inflation         = .true.,
   output_timestamps        = .true.,
   trace_execution          = .false.,
   write_obs_every_cycle    = .false.,
   silence                  = .false.,

   inf_flavor                  = 2,                       0,
   inf_initial_from_restart    = .false.,                 .false.,
   inf_sd_initial_from_restart = .false.,                 .false.,
   inf_output_restart          = .true.,                  .true.,
   inf_deterministic           = .true.,                  .true.,
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics',
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart',
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag',
   inf_initial                 = 0.1,                     1.0,
   inf_sd_initial              = 0.01,                     0.6,
   inf_damping                 = 0.9,                     0.9,
   inf_lower_bound             = 0.0,                     1.0,
   inf_upper_bound             = 10.0,                   100.0,
   inf_sd_lower_bound          = 0.0,                     0.6,
   /

&smoother_nml
   num_lags              = 0,
   start_from_restart    = .true.,
   output_restart        = .true.,
   restart_in_file_name  = 'ics',
   restart_out_file_name = 'restart',
   advancing_model_outside_program = .true.,
   /

&integrate_model_nml
   ens_size                    = 20, 
   input_file_name             = 'filter_restart', 
   output_file_name            = 'filter_ics', 
   write_binary_restart_files  = .false.,
   trace_execution             = .true.,
   input_is_model_advance_file = .false.,
   target_days                 = 0,
   target_seconds              = 28800,
   single_restart_file_in      = .true.,
   single_restart_file_out     = .false.,
/

&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .true.,
   perturbation_amplitude  = 0.2,
   /

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.02,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = 'localization_diagnostics',
   print_every_nth_obs             = -1,
   rectangular_quadrature          = .true.,
   gaussian_likelihood_tails       = .false.,
   adjust_obs_impact               = .true.,
   obs_impact_filename             = 'bob.txt',
   allow_any_impact_values         = .true.
   /

&cov_cutoff_nml
   select_localization = 1,
   /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics",
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.,
   /

&obs_kind_nml
   assimilate_these_obs_types = 'RAW_STATE_VARIABLE',
                                'RAW_STATE_1D_INTEGRAL',
                                'RAW_STATE_VAR_POWER'            
   /

&assim_model_nml
   write_binary_restart_files = .true.,
   binary_is_netcdf           = .false.
   netCDF_large_file_support  = .false.,
   /

&model_nml
   model_size        = 40,
   forcing           = 8.00,
   delta_t           = 0.05,
   time_step_days    = 0,
   time_step_seconds = 3600,
   /

&utilities_nml
   termlevel      = 1,
   module_details = .false.,
   logfilename    = 'dart_log.out',
   nmlfilename    = 'dart_log.nml',
   write_nml      = 'file',
   print_debug    = .false.,
   /

&mpi_utilities_nml
   /

&preprocess_nml
          overwrite_output = .true.,
    input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90',
   input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90',
  output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90',
               input_files = '../../../obs_def/obs_def_1d_state_mod.f90',
   /

&restart_file_tool_nml
   input_file_name              = "filter_restart",
   output_file_name             = "filter_updated_restart",
   ens_size                     = 1,
   single_restart_file_in       = .true.,
   single_restart_file_out      = .true.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .false.
   /

&smoother_file_tool_nml
   filter_restart_file_name     = "filter_restart",
   smoother_restart_file_name   = "restart",
   ens_size                     = 20,
   num_lags                     = 3,
   single_restart_file_in       = .false,
   single_restart_file_out      = .false.,
   write_binary_restart_files   = .false.,
   gregorian_cal                = .false.
   /

&obs_sequence_tool_nml
   filename_seq      = '',
   filename_seq_list = 'bob',
   filename_out      = 'bob.out',
   first_obs_days    = -1,
   first_obs_seconds = -1,
   last_obs_days     = -1,
   last_obs_seconds  = -1,
   print_only        = .false.,
   gregorian_cal     = .false.,
   /

# other possible obs tool namelist items:
#
# keep only the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .true.,
#
# remove the U and V radiosonde winds:
#   obs_types          = 'RADIOSONDE_U_WIND_COMPONENT',
#                        'RADIOSONDE_V_WIND_COMPONENT',
#   keep_types         = .false.,
#
# keep only observations with a DART QC of 0:
#   qc_metadata        = 'Dart quality control',
#   min_qc             = 0,
#   max_qc             = 0,
#
# keep only radiosonde temp obs between 250 and 300 K:
#   copy_metadata      = 'NCEP BUFR observation',
#   copy_type          = 'RADIOSONDE_TEMPERATURE',
#   min_copy           = 250.0,
#   max_copy           = 300.0,

&obs_diag_nml
   obs_sequence_name     = 'obs_seq.final',
   bin_width_days        = -1,
   bin_width_seconds     = -1,
   init_skip_days        = 0, 
   init_skip_seconds     = 0,
   Nregions              = 3,
   trusted_obs           = 'null',
   lonlim1               = 0.00, 0.00, 0.50, -1.0,
   lonlim2               = 1.01, 0.50, 1.01, -1.0,
   reg_names             = 'whole', 'yin', 'yang', 'bogus',
   create_rank_histogram = .true.,
   outliers_in_histogram = .true.,
   use_zero_error_obs    = .false.,
   verbose               = .false.
   /

&schedule_nml
   calendar        = 'Gregorian',
   first_bin_start =  1601,  1,  1,  0,  0,  0,
   first_bin_end   =  2999,  1,  1,  0,  0,  0,
   last_bin_end    =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
   /

&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =    1.0,
   verbose    = .true.
   /

&compute_error_nml
   skip_first_ntimes = 5
   /

&obs_impact_tool_nml
  input_filename = 'crosstest',
  output_filename = 'bob.txt',
  debug = .true.
  /
