
&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /


&preprocess_nml
           overwrite_output = .true.,
    input_obs_kind_mod_file = '../../../obs_kind/DEFAULT_obs_kind_mod.F90',
   output_obs_kind_mod_file = '../../../obs_kind/obs_kind_mod.f90',
     input_obs_def_mod_file = '../../../obs_def/DEFAULT_obs_def_mod.F90',
    output_obs_def_mod_file = '../../../obs_def/obs_def_mod.f90',
   input_files              = '../../../obs_def/obs_def_tower_mod.f90',
                              '../../../obs_def/obs_def_COSMOS_mod.f90',
                              '../../../obs_def/obs_def_brightnessT_mod.f90'
   /


# casename will get overwritten in the assimilate.csh script.
# hist_nhtfrq should be negative (hours) ... same context as in
# the CLM namelist for the .h1. files.
&obs_def_tower_nml
   casename    = '../clm_dart',
   hist_nhtfrq = -24,
   debug       = .false.
   /


&obs_def_brightnessT_nml
   casename    = '../clm_dart',
   debug       = .true.
   /


&obs_kind_nml
   assimilate_these_obs_types = 'TOWER_NETC_ECO_EXCHANGE',
                                'TOWER_LATENT_HEAT_FLUX',
                                'TOWER_SENSIBLE_HEAT_FLUX',
                                'MODIS_SNOWCOVER_FRAC',
                                'COSMOS_NEUTRON_INTENSITY',
                                'AMSRE_BRIGHTNESS_T',
   evaluate_these_obs_types   = 'null'
   /


&model_nml
   clm_restart_filename         = 'clm_restart.nc',
   clm_history_filename         = 'clm_history.nc',
   assimilation_period_days     = 2,
   assimilation_period_seconds  = 3600,
   model_perturbation_amplitude = 0.2,
   output_state_vector          = .false.,
   calendar                     = 'Gregorian',
   debug                        = 0,
   clm_state_variables          = 'frac_sno',    'KIND_SNOWCOVER_FRAC',
                                  'H2OSNO',      'KIND_SNOW_WATER',
                                  'H2OSOI_LIQ',  'KIND_SOIL_MOISTURE',
                                  'H2OSOI_ICE',  'KIND_ICE',
                                  'T_SOISNO',    'KIND_SOIL_TEMPERATURE',
                                  'cpool',       'KIND_CARBON',
                                  'frootc',      'KIND_ROOT_CARBON',
                                  'leafc',       'KIND_LEAF_CARBON',
                                  'leafn',       'KIND_LEAF_NITROGEN',
   /


&location_nml
   horiz_dist_only             = .true.,
   vert_normalization_pressure = 100000.0,
   vert_normalization_height   = 10000.0,
   vert_normalization_level    = 20.0,
   approximate_distance        = .false.,
   nlon                        = 71,
   nlat                        = 36,
   output_box_info             = .true.
   /


&utilities_nml
   TERMLEVEL = 2,
   module_details = .false.,
   logfilename = 'dart_log.out',
   nmlfilename = 'dart_log.nml',
   write_nml   = 'file'
   /


&restart_file_tool_nml
   input_file_name              = "filter_restart",
   output_file_name             = "filter_updated_restart",
   ens_size                     = 1,
   single_restart_file_in       = .true.,
   single_restart_file_out      = .true.,
   write_binary_restart_files   = .true.,
   overwrite_data_time          = .false.,
   new_data_days                = -1,
   new_data_secs                = -1,
   input_is_model_advance_file  = .false.,
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false.,
   new_advance_days             = -1,
   new_advance_secs             = -1,
   gregorian_cal                = .true.
   /


# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins,
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = '',
   obs_sequence_list = 'obs_seq_files.txt',
   first_bin_center =  2004, 1,  1, 0, 0, 0 ,
   last_bin_center  =  2004, 1,  8, 0, 0, 0 ,
   bin_separation   =     0, 0,  1, 0, 0, 0 ,
   bin_width        =     0, 0,  1, 0, 0, 0 ,
   time_to_skip     =     0, 0,  0, 0, 0, 0 ,
   max_num_bins     = 1000,
   input_qc_threshold = 1,
   Nregions   = 4,
   lonlim1    =     0.0,     0.0,    0.0,  180.0,
   lonlim2    =   360.0,   360.0,  180.0,  360.0,
   latlim1    =   -90.0,     0.0,  -90.0,  -90.0,
   latlim2    =     0.0,    90.0,   90.0,   90.0,
   reg_names  = 'South', 'North', 'East', 'West',
   hlevel_edges =  0.0, 1.0, 2.0, 5.0, 10.0, 40.0,
   print_mismatched_locs = .false.,
   create_rank_histogram = .true.,
   verbose               = .true.,
   /


# shell_scripts/makedaily.sh takes one long obs file and chops
# it up into daily files. This is a template.
&obs_sequence_tool_nml
   filename_seq      = '../work/obs_seq.in',
   filename_seq_list = '',
   filename_out      = '../YYYYMM/obs_seq.YYYY-MM-DD-SSSSS.in',
   print_only        = .false.,
   gregorian_cal     = .true.,
   first_obs_days    = DART0D,
   first_obs_seconds = DART0S,
   last_obs_days     = DART2D,
   last_obs_seconds  = DART2S,
   /


&schedule_nml
   calendar        = 'Gregorian',
   first_bin_start =  1601,  1,  1,  0,  0,  0,
   first_bin_end   =  2999,  1,  1,  0,  0,  0,
   last_bin_end    =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,
   bin_interval_seconds = 0,
   max_num_bins         = 1000,
   print_table          = .true.
   /


&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.
   /

